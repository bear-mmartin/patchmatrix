--- a/Domain/AmazonConstraint.php
+++ b/Domain/AmazonConstraint.php
@@ -66,10 +66,11 @@ class AmazonConstraint
     {
         switch ($this->getId()) {
             case static::PAYMENT_METHOD_NOT_ALLOWED_ID:
+                return __('The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.');
             case static::PAYMENT_PLAN_NOT_SET_ID:
-                return 'Please select a payment method.';
+                return __('No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.');
             default:
-                return 'Amazon could not process your request.';
+                return __('The order failed due to a technical error, please select another payment method or contact our support.');
         }
     }
 }

--- a/Gateway/Config/Config.php
+++ b/Gateway/Config/Config.php
@@ -5,10 +5,14 @@
  */
 namespace Amazon\Payment\Gateway\Config;
 
+/**
+ * Class Config
+ * @package Amazon\Payment\Gateway\Config
+ */
 class Config extends \Magento\Payment\Gateway\Config\Config
 {
     const CODE = 'amazon_payment';
-    
+
     const KEY_ACTIVE = 'active';
 
     /**
@@ -17,14 +21,31 @@ class Config extends \Magento\Payment\Gateway\Config\Config
     protected $amazonConfig;
 
     /**
+     * @var \Magento\Framework\App\RequestInterface
+     */
+    protected $request;
+
+    /**
+     * @var \Magento\Sales\Api\OrderRepositoryInterface
+     */
+    protected $orderRepository;
+
+    /**
+     * Config constructor.
      * @param \Amazon\Core\Model\AmazonConfig $amazonConfig
      * @param \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig
+     * @param \Magento\Framework\App\RequestInterface $request
+     * @param \Magento\Sales\Api\OrderRepositoryInterface $orderRepository
      */
     public function __construct(
         \Amazon\Core\Model\AmazonConfig $amazonConfig,
-        \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig
+        \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig,
+        \Magento\Framework\App\RequestInterface $request,
+        \Magento\Sales\Api\OrderRepositoryInterface $orderRepository
     ) {
         $this->amazonConfig = $amazonConfig;
+        $this->request = $request;
+        $this->orderRepository = $orderRepository;
         parent::__construct($scopeConfig, self::CODE);
     }
 
@@ -34,6 +55,15 @@ class Config extends \Magento\Payment\Gateway\Config\Config
      */
     protected function canCapturePartial($storeId = null)
     {
+        // get the order store id if not provided
+        if (empty($storeId)) {
+            $orderId = $this->request->getParam('order_id');
+            if ($orderId) {
+                $order = $this->orderRepository->get($orderId);
+                $storeId = $order->getStoreId();
+            }
+        }
+
         $region = $this->amazonConfig->getPaymentRegion(\Magento\Store\Model\ScopeInterface::SCOPE_STORE, $storeId);
         switch ($region) {
             case 'de':

--- a/Gateway/Http/Client/SettlementClient.php
+++ b/Gateway/Http/Client/SettlementClient.php
@@ -37,8 +37,12 @@ class SettlementClient extends AbstractClient
                 'currency_code' => $data['currency_code'],
                 'capture_reference_id' => $data['amazon_order_reference_id'] . '-C' . time()
             ];
+            if (isset($data['seller_note'])) {
+                $captureData['seller_capture_note'] = $data['seller_note'];
+            }
 
-            $response = $this->adapter->completeCapture($captureData, $data['store_id']);
+            $response = $this->adapter->completeCapture($captureData, $data['store_id'], $data['amazon_order_reference_id']);
+            $response['reauthorized'] = false;
         } else {
             // if invalid - reauthorize and capture
             $captureData = [
@@ -49,6 +53,9 @@ class SettlementClient extends AbstractClient
                 'custom_information' => $data['custom_information'],
                 'platform_id' => $data['platform_id']
             ];
+            if (isset($data['seller_note'])) {
+                $captureData['seller_authorization_note'] = $data['seller_note'];
+            }
             $response = $this->adapter->authorize($data, true);
             $response['reauthorized'] = true;
         }

--- a/Gateway/Request/AuthorizationRequestBuilder.php
+++ b/Gateway/Request/AuthorizationRequestBuilder.php
@@ -100,8 +100,13 @@ class AuthorizationRequestBuilder implements BuilderInterface
         $storeId = $orderDO->getStoreId();
         $storeName = '';
 
-        $currencyCode = $orderDO->getCurrencyCode();
-        $total = $buildSubject['amount'];
+        $currencyCode = $payment->getOrder()->getOrderCurrencyCode();
+        if ($payment->getAmazonDisplayInvoiceAmount()) {
+            $total = $payment->getAmazonDisplayInvoiceAmount();
+        }
+        else {
+            $total = $payment->getAmountOrdered();
+        }
 
         // capture sale or new auth/capture for partial capture
         if (isset($buildSubject['multicurrency']) && $buildSubject['multicurrency']['multicurrency']) {

--- a/Gateway/Request/RefundRequestBuilder.php
+++ b/Gateway/Request/RefundRequestBuilder.php
@@ -91,8 +91,8 @@ class RefundRequestBuilder implements BuilderInterface
 
         $orderDO = $paymentDO->getOrder();
 
-        $currencyCode = $orderDO->getCurrencyCode();
-        $total = $buildSubject['amount'];
+        $currencyCode = $payment->getOrder()->getOrderCurrencyCode();
+        $total = $payment->getCreditMemo()->getGrandTotal();
         $storeId = $orderDO->getStoreId();
 
         // The magento order adapter doesn't expose everything we need to send a request to the AP API so we

--- a/Gateway/Request/SettlementRequestBuilder.php
+++ b/Gateway/Request/SettlementRequestBuilder.php
@@ -82,6 +82,41 @@ class SettlementRequestBuilder implements BuilderInterface
         $this->logger = $logger;
     }
 
+    /**
+     * @param \Magento\Sales\Model\Order\Payment $payment
+     * @return \Magento\Sales\Model\Order\Invoice
+     */
+    protected function getCurrentInvoice($payment)
+    {
+        $result = null;
+        $order = $payment->getOrder();
+        foreach ($order->getInvoiceCollection() as $invoice) {
+            if (!$invoice->getId()) {
+                $result = $invoice;
+                break;
+            }
+        }
+        return $result;
+    }
+
+    /**
+     * @param \Magento\Sales\Model\Order\Payment $payment
+     * @return string
+     */
+    protected function getSellerNote($payment)
+    {
+        $result = '';
+        $invoice = $this->getCurrentInvoice($payment);
+        if ($invoice && $invoice->getComments()) {
+            foreach ($invoice->getComments() as $comment) {
+                if ($comment->getComment()) {
+                    $result = $comment->getComment();
+                    break;
+                }
+            }
+        }
+        return $result;
+    }
 
     /**
      * @param array $buildSubject
@@ -93,11 +128,17 @@ class SettlementRequestBuilder implements BuilderInterface
         $data = [];
 
         $paymentDO = $this->subjectReader->readPayment($buildSubject);
-
         $orderDO = $paymentDO->getOrder();
+        $order = $paymentDO->getPayment()->getOrder();
+        $payment = $paymentDO->getPayment();
 
-        $currencyCode = $orderDO->getCurrencyCode();
-        $total = $buildSubject['amount'];
+        $currencyCode = $order->getOrderCurrencyCode();
+        if ($payment->getAmazonDisplayInvoiceAmount()) {
+            $total = $payment->getAmazonDisplayInvoiceAmount();
+        }
+        else {
+            $total = $payment->getAmountOrdered();
+        }
 
         if ($buildSubject['multicurrency']['multicurrency']) {
             $currencyCode = $buildSubject['multicurrency']['order_currency'];
@@ -125,6 +166,10 @@ class SettlementRequestBuilder implements BuilderInterface
                 }
         }
 
+        if ($this->coreHelper->isSandboxEnabled('store', $orderDO->getStoreId())) {
+            $data['seller_note'] = $this->getSellerNote($paymentDO->getPayment());
+        }
+
         return $data;
     }
 }

--- a/Gateway/Response/SettlementHandler.php
+++ b/Gateway/Response/SettlementHandler.php
@@ -18,8 +18,8 @@ namespace Amazon\Payment\Gateway\Response;
 
 use Magento\Payment\Gateway\Response\HandlerInterface;
 use Magento\Payment\Model\Method\Logger;
+use Amazon\Payment\Api\Data\PendingCaptureInterfaceFactory;
 use Amazon\Payment\Gateway\Helper\SubjectReader;
-use Amazon\Core\Helper\Data;
 use Magento\Sales\Api\OrderRepositoryInterface;
 use Magento\Quote\Api\CartRepositoryInterface;
 
@@ -37,9 +37,9 @@ class SettlementHandler implements HandlerInterface
     private $subjectReader;
 
     /**
-     * @var Data
+     * @var PendingCaptureInterfaceFactory
      */
-    private $coreHelper;
+    private $pendingCaptureFactory;
 
     /**
      * @var OrderRepositoryInterface
@@ -56,20 +56,20 @@ class SettlementHandler implements HandlerInterface
      *
      * @param Logger                   $logger
      * @param SubjectReader            $subjectReader
-     * @param Data                     $coreHelper
+     * @param PendingCaptureInterfaceFactory $pendingCaptureFactory
      * @param OrderRepositoryInterface $orderRepository
      * @param CartRepositoryInterface  $quoteRepository
      */
     public function __construct(
         Logger $logger,
         SubjectReader $subjectReader,
-        Data $coreHelper,
+        PendingCaptureInterfaceFactory $pendingCaptureFactory,
         OrderRepositoryInterface $orderRepository,
         CartRepositoryInterface $quoteRepository
     ) {
         $this->logger = $logger;
         $this->subjectReader = $subjectReader;
-        $this->coreHelper = $coreHelper;
+        $this->pendingCaptureFactory = $pendingCaptureFactory;
         $this->orderRepository = $orderRepository;
         $this->quoteRepository = $quoteRepository;
     }
@@ -98,6 +98,16 @@ class SettlementHandler implements HandlerInterface
                 $quoteLink->setConfirmed(true)->save();
             }
         } else {
+            if ($response['pending']) {
+                $this->pendingCaptureFactory->create()
+                    ->setCaptureId($response['transaction_id'])
+                    ->setOrderId($paymentDO->getOrder()->getId())
+                    ->setPaymentId($payment->getId())
+                    ->save();
+
+                $payment->setIsTransactionPending(true);
+                $payment->setIsTransactionClosed(false);
+            }
             // finish capture
             $payment->setTransactionId($response['transaction_id']);
         }

--- a/Gateway/Validator/CurrencyValidator.php
+++ /dev/null
@@ -1,79 +0,0 @@
-<?php
-/**
- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License").
- * You may not use this file except in compliance with the License.
- * A copy of the License is located at
- *
- *  http://aws.amazon.com/apache2.0
- *
- * or in the "license" file accompanying this file. This file is distributed
- * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
- * express or implied. See the License for the specific language governing
- * permissions and limitations under the License.
- */
-
-namespace Amazon\Payment\Gateway\Validator;
-
-use Magento\Payment\Gateway\Validator\AbstractValidator;
-use Magento\Payment\Gateway\ConfigInterface;
-use Magento\Payment\Gateway\Validator\ResultInterfaceFactory;
-use Amazon\Core\Helper\Data;
-
-/**
- * Class CurrencyValidator
- * Validates allowable currencies for Amazon Pay
- */
-class CurrencyValidator extends AbstractValidator
-{
-
-    /**
-     * @var \Magento\Payment\Gateway\ConfigInterface
-     */
-    private $config;
-
-    /**
-     * @var Data
-     */
-    private $coreHelper;
-
-    /**
-     * CurrencyValidator constructor.
-     *
-     * @param ResultInterfaceFactory $resultFactory
-     * @param ConfigInterface        $config
-     * @param Data                   $coreHelper
-     */
-    public function __construct(
-        ResultInterfaceFactory $resultFactory,
-        ConfigInterface $config,
-        Data $coreHelper
-    ) {
-        $this->coreHelper = $coreHelper;
-        $this->config = $config;
-        parent::__construct($resultFactory);
-    }
-
-    /**
-     * @param array $validationSubject
-     * @return \Magento\Payment\Gateway\Validator\ResultInterface
-     */
-    public function validate(array $validationSubject)
-    {
-
-        $allowedCurrency = $this->coreHelper->getCurrencyCode('store', $validationSubject['storeId']);
-
-        if ($allowedCurrency == $validationSubject['currency']) {
-            return $this->createResult(
-                true,
-                ['status' => 200]
-            );
-        }
-
-        return $this->createResult(
-            false,
-            [__('The currency selected is not supported by Amazon Pay.')]
-        );
-    }
-}

--- a/Helper/Address.php
+++ b/Helper/Address.php
@@ -79,6 +79,9 @@ class Address
         $address->setTelephone($amazonAddress->getTelephone());
         $address->setCountryId($this->getCountryId($amazonAddress));
 
+        $company = !empty($amazonAddress->getCompany()) ? $amazonAddress->getCompany() : '';
+        $address->setCompany($company);
+
         /*
          * The number of lines in a street address is configurable via 'customer/address/street_lines'.
          * To avoid discarding information, we'll concatenate additional lines so that they fit within the configured
@@ -95,9 +98,6 @@ class Address
         }
         $address->setStreet(array_values($lines));
 
-        $company = !empty($amazonAddress->getCompany()) ? $amazonAddress->getCompany() : '';
-        $address->setCompany($company);
-
         if ($amazonAddress->getState()) {
             $address->setRegion($this->getRegionData($amazonAddress, $address->getCountryId()));
         }

--- a/Model/Adapter/AmazonPaymentAdapter.php
+++ b/Model/Adapter/AmazonPaymentAdapter.php
@@ -24,8 +24,6 @@ use Amazon\Payment\Domain\AmazonAuthorizationResponseFactory;
 use Amazon\Payment\Domain\AmazonCaptureResponseFactory;
 use Amazon\Payment\Gateway\Helper\SubjectReader;
 use Amazon\Core\Helper\Data;
-use Amazon\Payment\Api\Data\PendingAuthorizationInterfaceFactory;
-use Amazon\Payment\Api\Data\PendingCaptureInterfaceFactory;
 use Magento\Framework\UrlInterface;
 use Magento\Sales\Model\OrderRepository;
 use Magento\Framework\App\ObjectManager;
@@ -39,6 +37,8 @@ class AmazonPaymentAdapter
 {
     const SUCCESS_CODES = ['Open', 'Closed', 'Completed'];
 
+    const PENDING_CODE = 'Pending';
+
     /**
      * @var Logger
      */
@@ -74,16 +74,6 @@ class AmazonPaymentAdapter
      */
     private $coreHelper;
 
-    /**
-     * @var PendingCaptureInterfaceFactory
-     */
-    private $pendingCaptureFactory;
-
-    /**
-     * @var PendingAuthorizationInterfaceFactory
-     */
-    private $pendingAuthorizationFactory;
-
     /**
      * @var UrlInterface
      */
@@ -105,8 +95,6 @@ class AmazonPaymentAdapter
      * @param AmazonCaptureResponseFactory $amazonCaptureResponseFactory
      * @param AmazonSetOrderDetailsResponseFactory $amazonSetOrderDetailsResponseFactory
      * @param AmazonAuthorizationResponseFactory $amazonAuthorizationResponseFactory
-     * @param PendingCaptureInterfaceFactory $pendingCaptureFactory
-     * @param PendingAuthorizationInterfaceFactory $pendingAuthorizationFactory
      * @param SubjectReader $subjectReader
      * @param Data $coreHelper
      * @param Logger $logger
@@ -119,8 +107,6 @@ class AmazonPaymentAdapter
         AmazonCaptureResponseFactory $amazonCaptureResponseFactory,
         AmazonSetOrderDetailsResponseFactory $amazonSetOrderDetailsResponseFactory,
         AmazonAuthorizationResponseFactory $amazonAuthorizationResponseFactory,
-        PendingCaptureInterfaceFactory $pendingCaptureFactory,
-        PendingAuthorizationInterfaceFactory $pendingAuthorizationFactory,
         SubjectReader $subjectReader,
         Data $coreHelper,
         Logger $logger,
@@ -135,8 +121,6 @@ class AmazonPaymentAdapter
         $this->amazonAuthorizationResponseFactory = $amazonAuthorizationResponseFactory;
         $this->subjectReader = $subjectReader;
         $this->coreHelper = $coreHelper;
-        $this->pendingCaptureFactory = $pendingCaptureFactory;
-        $this->pendingAuthorizationFactory = $pendingAuthorizationFactory;
         $this->urlBuilder = $urlBuilder ?: ObjectManager::getInstance()->get(UrlInterface::class);
         $this->orderLinkFactory = $orderLinkFactory ?: ObjectManager::getInstance()->get(OrderLinkFactory::class);
         $this->orderRepository = $orderRepository ?: ObjectManager::getInstance()->get(OrderRepository::class);
@@ -288,7 +272,7 @@ class AmazonPaymentAdapter
         if ($authorizeResponse->getCaptureTransactionId() || $authorizeResponse->getAuthorizeTransactionId()) {
             $response['authorize_transaction_id'] = $authorizeResponse->getAuthorizeTransactionId();
 
-            if ($authorizeResponse->getStatus()->getState() == 'Pending' && $authMode == 'synchronous_possible') {
+            if ($authorizeResponse->getStatus()->getState() == self::PENDING_CODE && $authMode == 'synchronous_possible') {
                 if ($captureNow) {
                     $response['capture_transaction_id'] = $authorizeResponse->getCaptureTransactionId();
                 }
@@ -325,8 +309,8 @@ class AmazonPaymentAdapter
     }
 
     /**
-     * @param $data
-     * @param $storeId
+     * @param array $data
+     * @param string $storeId
      * @return array
      */
     public function completeCapture($data, $storeId)
@@ -340,25 +324,14 @@ class AmazonPaymentAdapter
             $captureResponse = $this->amazonCaptureResponseFactory->create(['response' => $responseParser]);
             $capture = $captureResponse->getDetails();
 
-            if (in_array($capture->getStatus()->getState(), self::SUCCESS_CODES)) {
+            $captureCode = $capture->getStatus()->getState();
+            $successCodes = array_merge(self::SUCCESS_CODES, [self::PENDING_CODE]);
+            if (in_array($captureCode, $successCodes)) {
                 $response = [
                     'status' => true,
                     'transaction_id' => $capture->getTransactionId(),
-                    'reauthorized' => false
+                    'pending' => $captureCode == self::PENDING_CODE,
                 ];
-            } elseif ($capture->getStatus()->getState() == 'Pending') {
-                $order = $this->subjectReader->getOrder();
-
-                try {
-                    $this->pendingCaptureFactory->create()
-                        ->setCaptureId($capture->getTransactionId())
-                        ->setOrderId($order->getId())
-                        ->setPaymentId($order->getPayment()->getEntityId())
-                        ->save();
-                } catch (\Exception $e) {
-                    $log['error'] = __('AmazonPaymentAdapter: Unable to capture pending information for capture.');
-                    $this->logger->debug($log);
-                }
             } else {
                 $response['response_code'] = $capture->getReasonCode();
             }

--- a/Model/AddressManagement.php
+++ b/Model/AddressManagement.php
@@ -135,6 +135,9 @@ class AddressManagement implements AddressManagementInterface
 
             if (isset($data['OrderReferenceDetails']['Destination']['PhysicalDestination'])) {
                 $shippingAddress = $data['OrderReferenceDetails']['Destination']['PhysicalDestination'];
+                if (!isset($shippingAddress['Phone']) || empty($shippingAddress['Phone'])) {
+                    $shippingAddress['Phone'] = '000-000-0000';
+                }
 
                 return $this->convertToMagentoAddress($shippingAddress, true);
             }
@@ -276,7 +279,6 @@ class AddressManagement implements AddressManagementInterface
     {
         $orderStatus = $data['OrderReferenceDetails']['OrderReferenceStatus'] ?? false;
 
-        return ($orderStatus && $orderStatus['State'] == AmazonOrderStatus::STATE_SUSPENDED
-            && $orderStatus['ReasonCode'] == AmazonAuthorizationStatus::REASON_INVALID_PAYMENT_METHOD);
+        return $orderStatus && $orderStatus['State'] == AmazonOrderStatus::STATE_SUSPENDED;
     }
 }

--- a/Model/OrderInformationManagement.php
+++ b/Model/OrderInformationManagement.php
@@ -18,6 +18,7 @@ namespace Amazon\Payment\Model;
 use Amazon\Core\Client\ClientFactoryInterface;
 use Amazon\Core\Exception\AmazonServiceUnavailableException;
 use Amazon\Core\Helper\Data as CoreHelper;
+use Amazon\Core\Model\AmazonConfig;
 use Amazon\Payment\Gateway\Config\Config;
 use Amazon\Payment\Api\Data\QuoteLinkInterfaceFactory;
 use Amazon\Payment\Api\OrderInformationManagementInterface;
@@ -54,6 +55,11 @@ class OrderInformationManagement implements OrderInformationManagementInterface
      */
     private $coreHelper;
 
+    /**
+     * @var AmazonConfig
+     */
+    private $amazonConfig;
+
     /**
      * @var AmazonSetOrderDetailsResponseFactory
      */
@@ -79,6 +85,7 @@ class OrderInformationManagement implements OrderInformationManagementInterface
      * @param Session $session
      * @param ClientFactoryInterface $clientFactory
      * @param CoreHelper $coreHelper
+     * @param AmazonConfig $amazonConfig
      * @param Config $config
      * @param AmazonSetOrderDetailsResponseFactory $amazonSetOrderDetailsResponseFactory
      * @param QuoteLinkInterfaceFactory $quoteLinkFactory
@@ -88,6 +95,7 @@ class OrderInformationManagement implements OrderInformationManagementInterface
         Session $session,
         ClientFactoryInterface $clientFactory,
         CoreHelper $coreHelper,
+        AmazonConfig $amazonConfig,
         Config $config,
         AmazonSetOrderDetailsResponseFactory $amazonSetOrderDetailsResponseFactory,
         QuoteLinkInterfaceFactory $quoteLinkFactory,
@@ -97,6 +105,7 @@ class OrderInformationManagement implements OrderInformationManagementInterface
         $this->session                              = $session;
         $this->clientFactory                        = $clientFactory;
         $this->coreHelper                           = $coreHelper;
+        $this->amazonConfig                         = $amazonConfig;
         $this->config                               = $config;
         $this->amazonSetOrderDetailsResponseFactory = $amazonSetOrderDetailsResponseFactory;
         $this->quoteLinkFactory                     = $quoteLinkFactory;
@@ -118,9 +127,6 @@ class OrderInformationManagement implements OrderInformationManagementInterface
             $this->setReservedOrderId($quote);
 
             $storeName = $this->coreHelper->getStoreName(ScopeInterface::SCOPE_STORE, $storeId);
-            if (!$storeName) {
-                $storeName = $quote->getStore()->getName();
-            }
 
             $data = [
                 'amazon_order_reference_id' => $amazonOrderReferenceId,
@@ -150,7 +156,7 @@ class OrderInformationManagement implements OrderInformationManagementInterface
 
     protected function validateCurrency($code)
     {
-        if ($this->coreHelper->getCurrencyCode() !== $code) {
+        if ($this->coreHelper->getCurrencyCode() !== $code && !$this->amazonConfig->canUseCurrency($code)) {
             throw new LocalizedException(__('The currency selected is not supported by Amazon Pay'));
         }
     }

--- a/Model/PaymentManagement/Authorization.php
+++ b/Model/PaymentManagement/Authorization.php
@@ -290,6 +290,9 @@ class Authorization extends AbstractOperation
             }
 
             $formattedAmount = $order->getBaseCurrency()->formatTxt($invoice->getBaseGrandTotal());
+            if ($order->getBaseCurrencyCode() != $order->getOrderCurrencyCode()) {
+                $formattedAmount = $formattedAmount .' ['. $order->formatPriceTxt($payment->getGrandTotal()) .']';
+            }
             $message = __('Captured amount of %1 online', $formattedAmount);
             $payment->setDataUsingMethod(
                 'base_amount_paid_online',
@@ -297,7 +300,10 @@ class Authorization extends AbstractOperation
             );
         } else {
             $formattedAmount = $order->getBaseCurrency()->formatTxt($payment->getBaseAmountAuthorized());
-            $message = __('Authorized amount of %1 online', $formattedAmount);
+            if ($order->getBaseCurrencyCode() != $order->getOrderCurrencyCode()) {
+                $formattedAmount = $formattedAmount .' ['. $order->formatPriceTxt($payment->getAmountOrdered()) .']';
+            }
+            $message = __('Authorized amount of %1', $formattedAmount);
         }
 
         $transaction = ($newTransaction) ?: $this->paymentManagement->getTransaction($transactionId, $payment, $order);
@@ -366,8 +372,14 @@ class Authorization extends AbstractOperation
             $invoice = $this->getInvoice($transactionId, $order);
             $this->setPaymentReview($order);
             $formattedAmount = $order->getBaseCurrency()->formatTxt($invoice->getBaseGrandTotal());
+            if ($order->getBaseCurrencyCode() != $order->getOrderCurrencyCode()) {
+                $formattedAmount = $formattedAmount .' ['. $order->formatPriceTxt($payment->getGrandTotal()) .']';
+            }
         } else {
             $formattedAmount = $order->getBaseCurrency()->formatTxt($payment->getBaseAmountAuthorized());
+            if ($order->getBaseCurrencyCode() != $order->getOrderCurrencyCode()) {
+                $formattedAmount = $formattedAmount .' ['. $order->formatPriceTxt($payment->getAmountOrdered()) .']';
+            }
         }
 
         $message = __('Declined amount of %1 online', $formattedAmount);
@@ -409,9 +421,15 @@ class Authorization extends AbstractOperation
         if ($capture) {
             $invoice = $this->getInvoiceAndSetCancelled($transactionId, $order);
             $formattedAmount = $order->getBaseCurrency()->formatTxt($invoice->getBaseGrandTotal());
+            if ($order->getBaseCurrencyCode() != $order->getOrderCurrencyCode()) {
+                $formattedAmount = $formattedAmount .' ['. $order->formatPriceTxt($payment->getGrandTotal()) .']';
+            }
             $this->addCaptureDeclinedNotice($order);
         } else {
             $formattedAmount = $order->getBaseCurrency()->formatTxt($payment->getBaseAmountAuthorized());
+            if ($order->getBaseCurrencyCode() != $order->getOrderCurrencyCode()) {
+                $formattedAmount = $formattedAmount .' ['. $order->formatPriceTxt($payment->getAmountOrdered()) .']';
+            }
         }
 
         $message = __('Declined amount of %1 online', $formattedAmount);

--- a/Model/PaymentManagement/Capture.php
+++ b/Model/PaymentManagement/Capture.php
@@ -221,6 +221,9 @@ class Capture extends AbstractOperation
         $transaction = $this->paymentManagement->getTransaction($transactionId, $payment, $order);
         $invoice = $this->getInvoice($transactionId, $order);
         $formattedAmount = $order->getBaseCurrency()->formatTxt($invoice->getBaseGrandTotal());
+        if ($order->getBaseCurrencyCode() != $order->getOrderCurrencyCode()) {
+            $formattedAmount = $formattedAmount .' ['. $order->formatPriceTxt($payment->getGrandTotal()) .']';
+        }
         $message = __('Captured amount of %1 online', $formattedAmount);
 
         $this->getInvoiceAndSetPaid($transactionId, $order);
@@ -242,6 +245,9 @@ class Capture extends AbstractOperation
         $transaction = $this->paymentManagement->getTransaction($transactionId, $payment, $order);
         $invoice = $this->getInvoice($transactionId, $order);
         $formattedAmount = $order->getBaseCurrency()->formatTxt($invoice->getBaseGrandTotal());
+        if ($order->getBaseCurrencyCode() != $order->getOrderCurrencyCode()) {
+            $formattedAmount = $formattedAmount .' ['. $order->formatPriceTxt($payment->getGrandTotal()) .']';
+        }
         $message = __('Declined amount of %1 online', $formattedAmount);
 
         $this->getInvoiceAndSetCancelled($transactionId, $order);

--- /dev/null
+++ b/Observer/OrderPaymentCapture.php
@@ -0,0 +1,39 @@
+<?php
+/**
+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+namespace Amazon\Payment\Observer;
+
+
+use Magento\Framework\Event\Observer;
+use Magento\Framework\Event\ObserverInterface;
+
+/**
+ * Class OrderPaymentCapture
+ * @package Amazon\Payment\Observer
+ */
+class OrderPaymentCapture implements ObserverInterface
+{
+    /**
+     * @param Observer $observer
+     */
+    public function execute(Observer $observer)
+    {
+        $payment = $observer->getPayment();
+        $invoice = $observer->getInvoice();
+
+        // set custom invoice amount on the payment in the display currency, as Magento does everything on the base currency
+        $payment->setAmazonDisplayInvoiceAmount($invoice->getGrandTotal());
+    }
+}

--- a/Plugin/ConfirmOrderReference.php
+++ b/Plugin/ConfirmOrderReference.php
@@ -103,7 +103,7 @@ class ConfirmOrderReference
         if ($paymentMethod->getMethod() == GatewayConfig::CODE) {
             $quote = $this->quoteRepository->get($cartId);
             $quoteExtensionAttributes = $quote->getExtensionAttributes();
-            if ($quoteExtensionAttributes) {
+            if ($quoteExtensionAttributes && $quoteExtensionAttributes->getAmazonOrderReferenceId()) {
                 $amazonOrderReferenceId = $quoteExtensionAttributes
                     ->getAmazonOrderReferenceId()
                     ->getAmazonOrderReferenceId();

--- /dev/null
+++ b/Plugin/OrderCurrencyComment.php
@@ -0,0 +1,77 @@
+<?php
+/**
+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+namespace Amazon\Payment\Plugin;
+
+use Magento\Framework\Phrase;
+use Magento\Sales\Model\Order\Payment;
+use Amazon\Payment\Gateway\Config\Config;
+
+/**
+ * Class OrderCurrencyComment
+ * @package Amazon\Payment\Plugin
+ */
+class OrderCurrencyComment
+{
+    /**
+     * @param Payment $subject
+     * @param $messagePrependTo
+     * @return array|null
+     */
+    public function beforePrependMessage(Payment $subject, $messagePrependTo)
+    {
+        if ($subject->getMethod() == Config::CODE) {
+            $order = $subject->getOrder();
+            if ($order->getBaseCurrencyCode() != $order->getOrderCurrencyCode()) {
+                if ($subject->getOrder()->getPayment()->getCreditmemo()) {
+                    $displayCurrencyAmount = $subject->getCreditmemo()->getGrandTotal();
+                }
+                else {
+                    $displayCurrencyAmount = $subject->getOrder()->getPayment()->getAmazonDisplayInvoiceAmount() ?: $subject->getAmountOrdered();
+                }
+                $messagePrependTo = __(
+                    $messagePrependTo->getText(),
+                    $order->getBaseCurrency()
+                        ->formatTxt($messagePrependTo->getArguments()[0]) .' ['. $order->formatPriceTxt($displayCurrencyAmount) .']'
+                );
+
+                return [$messagePrependTo];
+            }
+        }
+
+        return null;
+    }
+
+    /**
+     * @param Payment $subject
+     * @param $result
+     * @return string
+     */
+    public function afterFormatPrice(Payment $subject, $result)
+    {
+        if ($subject->getMethod() == Config::CODE) {
+            $order = $subject->getOrder();
+            if (($order->getBaseCurrencyCode() != $order->getOrderCurrencyCode()
+                && $subject->getMessage() instanceof Phrase
+                && $subject->getMessage()->getText() == 'Canceled order online')
+                || strpos($subject->getTransactionId(), '-void') !== FALSE
+            ) {
+                return $result .' ['. $order->formatPriceTxt($subject->getCreditmemo()->getGrandTotal()) .']';
+            }
+        }
+
+        return $result;
+    }
+}

--- a/Plugin/ShippingInformationManagement.php
+++ b/Plugin/ShippingInformationManagement.php
@@ -80,6 +80,10 @@ class ShippingInformationManagement
             return $return;
         }
 
+        if (!$quote->getExtensionAttributes()->getAmazonOrderReferenceId()) {
+            return $return;
+        }
+
         $amazonOrderReferenceId = $quote->getExtensionAttributes()
             ->getAmazonOrderReferenceId()
             ->getAmazonOrderReferenceId();

--- a/Test/Mftf/ActionGroup/AmazonCheckoutBeginActionGroup.xml
+++ /dev/null
@@ -1,16 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
-    <!--Begin checkout and proceed to final step-->
-    <actionGroup name="AmazonCheckoutBeginActionGroup">
-        <waitForElement selector="{{CheckoutShippingMethodsSection.shippingMethodRow}}" time="20" stepKey="apWaitForShipping"/>
-        <waitForPageLoad stepKey="apWaitPageLoadShipping" />
-
-        <click selector="{{CheckoutShippingMethodsSection.firstShippingMethod}}" stepKey="clickShippingMethod"/>
-        <waitForPageLoad stepKey="waitForPageLoadPayment1" />
-        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskToDisappear1"/>
-
-        <click selector="{{CheckoutShippingMethodsSection.next}}" stepKey="clickContinueButton"/>
-        <waitForPageLoad stepKey="waitForPageLoadPayment2" />
-        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskToDisappear2"/>
-    </actionGroup>
-</actionGroups>

--- a/Test/Mftf/ActionGroup/AmazonCheckoutCcActionGroup.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
-    <!--Select credit card number and submit-->
-    <actionGroup name="AmazonCheckoutCcActionGroup">
-        <arguments>
-            <argument name="cc" defaultValue="1111" type="string"/>
-        </arguments>
-        <executeJS function="return window.name;" stepKey="topName"/>
-        <!--Get wallet iframe name (dynamic)-->
-        <executeJS function="return jQuery('#walletWidgetDiv iframe').attr('name');" stepKey="iframeName"/>
-        <!--Expand Wallet Widget to expose all CC# (and avoid JS paging)-->
-        <executeJS function="jQuery('#walletWidgetDiv').css('height', '450px');" stepKey="executeJsHeight"/>
-        <!--Select CC#-->
-        <switchToIFrame userInput="{$iframeName}" stepKey="switchToIFrameWidget"/>
-        <executeJS function="$('.card-number:contains({{cc}})').closest('a').click();" stepKey="executeJsCc"/>
-        <!--Place order-->
-        <switchToWindow userInput="{$topName}" stepKey="switchToWindowTop" />
-        <waitForPageLoad stepKey="waitForPageLoadPayment1" />
-        <click selector="{{CheckoutPaymentSection.placeOrder}}" stepKey="clickPlaceOrder"/>
-    </actionGroup>
-</actionGroups>

--- a/Test/Mftf/ActionGroup/AmazonCheckoutSubmitActionGroup.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
-    <!--Place order-->
-    <actionGroup name="AmazonCheckoutSubmitActionGroup" extends="AmazonCheckoutBeginActionGroup">
-        <!--Click Place Order button-->
-        <click selector="{{CheckoutPaymentSection.placeOrder}}" stepKey="clickPlaceOrder"/>
-
-        <!--See success messages-->
-        <see selector="{{CheckoutSuccessMainSection.successTitle}}" userInput="Thank you for your purchase!" stepKey="waitForLoadSuccessPage"/>
-    </actionGroup>
-</actionGroups>

--- a/Test/Mftf/ActionGroup/AmazonLoginPopupActionGroup.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
-    <!--Open login popup and complete form-->
-    <actionGroup name="AmazonLoginPopupActionGroup">
-        <!--Save opener window name since popup auto-closes-->
-        <executeJS function="return window.name;" stepKey="openerName"/>
-
-        <switchToWindow userInput="amazonloginpopup" stepKey="switchToWindowLoginpopup"/>
-        <waitForPageLoad stepKey="waitForPageLoadPopup"/>
-
-        <!-- Fill in login form -->
-        <waitForElement selector="{{AmazonLoginSection.apEmail}}" time="30" stepKey="apWaitForLogin"/>
-        <fillField selector="{{AmazonLoginSection.apEmail}}" userInput="{{AmazonLogin.email}}" stepKey="apEnterEmail"/>
-        <fillField selector="{{AmazonLoginSection.apPassword}}" userInput="{{AmazonLogin.password}}" stepKey="apEnterPassword"/>
-        <click selector="{{AmazonLoginSection.apSignin}}" stepKey="clickSigninButton"/>
-
-        <!--Prevent "NoSuchWindowException: window was already closed"-->
-        <switchToWindow userInput="{$openerName}" stepKey="switchToWindowOpener" />
-    </actionGroup>
-</actionGroups>

--- a/Test/Mftf/ActionGroup/AmazonLoginRedirectActionGroup.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
-    <!--Fill in login from redirect form and submit-->
-    <actionGroup name="AmazonLoginRedirectActionGroup">
-        <waitForElement selector="{{AmazonLoginSection.apEmail}}" time="10" stepKey="apWaitForLogin"/>
-        <fillField selector="{{AmazonLoginSection.apEmail}}" userInput="{{AmazonLogin.email}}" stepKey="apEnterEmail"/>
-        <fillField selector="{{AmazonLoginSection.apPassword}}" userInput="{{AmazonLogin.password}}" stepKey="apEnterPassword"/>
-        <click selector="{{AmazonLoginSection.apSignin}}" stepKey="clickSigninButton"/>
-        <waitForPageLoad stepKey="waitForPageLoadLogin"/>
-        <conditionalClick selector="{{AmazonLoginSection.apConsent}}" dependentSelector="{{AmazonLoginSection.apConsent}}" visible="true" stepKey="clickLoginConsent"/>
-    </actionGroup>
-</actionGroups>

--- a/Test/Mftf/Section/AmazonLoginSection.xml
+++ b/Test/Mftf/Section/AmazonLoginSection.xml
@@ -11,7 +11,7 @@
     <section name="AmazonLoginSection">
         <element name="apEmail" type="input" selector="#ap_email"/>
         <element name="apPassword" type="input" selector="#ap_password"/>
-        <element name="apSignin" type="button" selector="#signInSubmit button"/>
+        <element name="apSignin" type="button" selector="#signInSubmit"/>
         <element name="apConsent" type="button" selector="[name=consentApproved]"/>
     </section>
 </sections>

--- a/Test/Mftf/Test/AmazonCheckoutAddProductDetailTest.xml
+++ /dev/null
@@ -1,38 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutAddProductDetail">
-        <annotations>
-            <features value="Amazon Pay"/>
-            <stories value="Prepares product to be checked out"/>
-            <title value="Amazon Pay Add Product to Cart from Detail Page"/>
-            <description value="Creates and loads simple product and adds it to cart using Amazon Pay button on product detail page."/>
-            <severity value="BLOCKER"/>
-            <group value="amazon_checkout"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <createData entity="SimpleTwo" stepKey="createSimpleProduct"/>
-            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </before>
-
-        <after>
-            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </after>
-
-        <!--Go to product page-->
-        <amOnPage url="$$createSimpleProduct.custom_attributes[url_key]$$.html" stepKey="navigateToSimpleProductPage"/>
-        <waitForPageLoad stepKey="waitForPageLoadCatalog" time="30"/>
-
-        <!--Add to cart via Amazon Pay button on product page-->
-        <waitForElement selector="{{AmazonCheckoutSection.productPayButton}}" time="30" stepKey="apWaitForPayButton"/>
-        <waitForElement selector="#OffAmazonPaymentsWidgets0" time="30" stepKey="apWaitForPayButton2"/>
-        <waitForJS function="return document.getElementById('{{AmazonCheckoutSection.productPayButton}}'.substr(1)).clientHeight > 10;" stepKey="waitForPayButtonClickable" />
-        <click selector="{{AmazonCheckoutSection.productPayButton}}" stepKey="clickProductPayButton"/>
-
-        <!--Login (redirect)-->
-        <actionGroup ref="AmazonLoginRedirectActionGroup" stepKey="AmazonLoginRedirectActionGroup" />
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutAddProductTest.xml
+++ /dev/null
@@ -1,34 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutAddProduct">
-        <annotations>
-            <features value="Amazon Pay"/>
-            <stories value="Prepares product to be checked out"/>
-            <title value="Amazon Pay Add Product to Cart"/>
-            <description value="Adds product to cart."/>
-            <severity value="BLOCKER"/>
-            <group value="amazon_checkout"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <createData entity="SimpleTwo" stepKey="createSimpleProduct"/>
-            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </before>
-
-        <after>
-            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </after>
-
-        <!--Go to product page-->
-        <amOnPage url="$$createSimpleProduct.custom_attributes[url_key]$$.html" stepKey="navigateToSimpleProductPage"/>
-        <waitForPageLoad stepKey="waitForPageLoadCatalog"/>
-
-        <!--Add Product to Shopping Cart-->
-        <actionGroup ref="AddToCartFromStorefrontProductPageActionGroup" stepKey="addToCartFromStorefrontProductPage">
-            <argument name="productName" value="$$createSimpleProduct.name$$"/>
-        </actionGroup>
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutAddressFailureTest.xml
+++ /dev/null
@@ -1,51 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutAddressFailure" extends="AmazonCheckoutAddProductDetail">
-        <annotations>
-            <stories value="Test new shipping address validation"/>
-            <title value="Amazon Pay Invalid Shipping Address"/>
-            <description value="Adds an invalid address to Amazon Address widget to test Magento shipping address validation"/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_decline"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <createData entity="SimpleTwo" stepKey="createSimpleProduct"/>
-            <createData entity="SingleCountryAllowConfig" stepKey="SingleCountryAllowConfig"/>
-            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </before>
-
-        <after>
-            <createData entity="DefaultCountryAllowConfig" stepKey="DefaultCountryAllowConfig"/>
-            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </after>
-
-        <!--Save opener window name since popup auto-closes-->
-        <executeJS function="return window.name;" stepKey="openerName"/>
-        <!--Get address widget iframe name (dynamic)-->
-        <executeJS function="return jQuery('#addressBookWidgetDiv iframe').attr('name');" stepKey="iframeName"/>
-        <switchToIFrame userInput="{$iframeName}" stepKey="switchToIFrameWidget"/>
-        <!--Open new address pop-up-->
-        <click selector="{{AmazonCheckoutSection.addNewAddress}}" stepKey="clickAddNew"/>
-        <waitForPageLoad stepKey="waitForPageLoadPopup"/>
-        <executeJS function="return document.getElementById('addShippingAddressForm').target;" stepKey="windowAddressName"/>
-        <switchToWindow userInput="{$windowAddressName}" stepKey="switchToWindowAddress"/>
-        <waitForElement selector="{{AmazonAddressSection.name}}" time="10" stepKey="apWait"/>
-        <!--Add new address-->
-        <!--Select is hidden, so must change with JS-->
-        <executeJS function="document.getElementById('{{AmazonAddressSection.country}}').value = '{{AmazonAddressFail.country}}'" stepKey="apcountry"/>
-        <fillField selector="{{AmazonAddressSection.name}}" userInput="{{AmazonAddressFail.name}}" stepKey="enterName"/>
-        <fillField selector="{{AmazonAddressSection.address}}" userInput="{{AmazonAddressFail.address}}" stepKey="enterAddress"/>
-        <fillField selector="{{AmazonAddressSection.city}}" userInput="{{AmazonAddressFail.city}}" stepKey="enterCity"/>
-        <fillField selector="{{AmazonAddressSection.region}}" userInput="{{AmazonAddressFail.region}}" stepKey="enterRegion"/>
-        <fillField selector="{{AmazonAddressSection.postal}}" userInput="{{AmazonAddressFail.postal}}" stepKey="enterPostal"/>
-        <fillField selector="{{AmazonAddressSection.phone}}" userInput="{{AmazonAddressFail.phone}}" stepKey="enterPhone"/>
-        <click selector="{{AmazonAddressSection.submit}}" stepKey="clickAddAddressButton"/>
-        <!--Switch back to Magento and detect error from new address-->
-        <switchToWindow userInput="{$openerName}" stepKey="switchToWindowOpener" />
-        <waitForText userInput="The country associated with your address is not allowed" selector=".message" stepKey="waitForText"/>
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutCartTest.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutCart" extends="AmazonCheckoutAddProduct">
-        <annotations>
-            <features value="Amazon Pay"/>
-            <stories value="Success page elements are presented for placed order with Amazon Pay"/>
-            <title value="Amazon Pay Checkout from Cart"/>
-            <description value="Perform checkout from cart page and ensure Success page."/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_checkout"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <!--Go to Cart-->
-        <actionGroup ref="StorefrontOpenCartFromMinicartActionGroup" stepKey="cartOpenCart" />
-
-        <waitForAjaxLoad stepKey="waitForAjaxLoad"/>
-
-        <!--Login (popup)-->
-        <click selector="{{AmazonCheckoutSection.cartPayButton}}" stepKey="clickAmazonCartButton"/>
-        <actionGroup ref="AmazonLoginPopupActionGroup" stepKey="AmazonLoginPopupActionGroup" />
-
-        <!--Place order-->
-        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutConfigurableProductTest.xml
+++ /dev/null
@@ -1,137 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutConfigurableProduct">
-        <annotations>
-            <features value="Amazon Pay"/>
-            <stories value="Complete checkout with configurable product"/>
-            <title value="Amazon Pay Checkout Configurable Product"/>
-            <description value="Perform checkout with configurable product and ensure Success page."/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_checkout"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
-            <!-- Create Default Category -->
-            <createData entity="_defaultCategory" stepKey="createCategory"/>
-
-            <!-- Create an attribute with three options to be used in the first child product -->
-            <createData entity="productAttributeWithTwoOptions" stepKey="createConfigProductAttribute"/>
-            <createData entity="productAttributeOption1" stepKey="createConfigProductAttributeOption1">
-                <requiredEntity createDataKey="createConfigProductAttribute"/>
-            </createData>
-            <createData entity="productAttributeOption2" stepKey="createConfigProductAttributeOption2">
-                <requiredEntity createDataKey="createConfigProductAttribute"/>
-            </createData>
-            <createData entity="productAttributeOption3" stepKey="createConfigProductAttributeOption3">
-                <requiredEntity createDataKey="createConfigProductAttribute"/>
-            </createData>
-
-            <!-- Add the attribute just created to default attribute set -->
-            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet">
-                <requiredEntity createDataKey="createConfigProductAttribute"/>
-            </createData>
-
-            <!-- Get the first option of the attribute created -->
-            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOption1">
-                <requiredEntity createDataKey="createConfigProductAttribute"/>
-            </getData>
-
-            <!-- Get the second option of the attribute created -->
-            <getData entity="ProductAttributeOptionGetter" index="2" stepKey="getConfigAttributeOption2">
-                <requiredEntity createDataKey="createConfigProductAttribute"/>
-            </getData>
-
-            <!-- Get the third option of the attribute created -->
-            <getData entity="ProductAttributeOptionGetter" index="3" stepKey="getConfigAttributeOption3">
-                <requiredEntity createDataKey="createConfigProductAttribute"/>
-            </getData>
-
-            <!-- Create Configurable product -->
-            <createData entity="BaseConfigurableProduct" stepKey="createConfigProduct">
-                <requiredEntity createDataKey="createCategory"/>
-            </createData>
-
-            <!-- Create a simple product and give it the attribute with the first option -->
-            <createData entity="ApiSimpleOne" stepKey="createConfigChildProduct1">
-                <requiredEntity createDataKey="createConfigProductAttribute"/>
-                <requiredEntity createDataKey="getConfigAttributeOption1"/>
-                <field key="price">10.00</field>
-            </createData>
-
-            <!--Create a simple product and give it the attribute with the second option -->
-            <createData entity="ApiSimpleTwo" stepKey="createConfigChildProduct2">
-                <requiredEntity createDataKey="createConfigProductAttribute"/>
-                <requiredEntity createDataKey="getConfigAttributeOption2"/>
-                <field key="price">20.00</field>
-            </createData>
-
-            <!--Create a simple product and give it the attribute with the Third option -->
-            <createData entity="ApiSimpleTwo" stepKey="createConfigChildProduct3">
-                <requiredEntity createDataKey="createConfigProductAttribute"/>
-                <requiredEntity createDataKey="getConfigAttributeOption3"/>
-                <field key="price">30.00</field>
-            </createData>
-
-            <!-- Create the configurable product -->
-            <createData entity="ConfigurableProductThreeOptions" stepKey="createConfigProductOption">
-                <requiredEntity createDataKey="createConfigProduct"/>
-                <requiredEntity createDataKey="createConfigProductAttribute"/>
-                <requiredEntity createDataKey="getConfigAttributeOption1"/>
-                <requiredEntity createDataKey="getConfigAttributeOption2"/>
-                <requiredEntity createDataKey="getConfigAttributeOption3"/>
-            </createData>
-
-            <!-- Add the first simple product to the configurable product -->
-            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild1">
-                <requiredEntity createDataKey="createConfigProduct"/>
-                <requiredEntity createDataKey="createConfigChildProduct1"/>
-            </createData>
-
-            <!-- Add the second simple product to the configurable product -->
-            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild2">
-                <requiredEntity createDataKey="createConfigProduct"/>
-                <requiredEntity createDataKey="createConfigChildProduct2"/>
-            </createData>
-
-            <!-- Add the third simple product to the configurable product -->
-            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild3">
-                <requiredEntity createDataKey="createConfigProduct"/>
-                <requiredEntity createDataKey="createConfigChildProduct3"/>
-            </createData>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-            <magentoCLI command="indexer:reindex" stepKey="reindex"/>
-        </before>
-
-        <after>
-            <deleteData createDataKey="createConfigChildProduct1" stepKey="deleteSimpleProduct1"/>
-            <deleteData createDataKey="createConfigChildProduct2" stepKey="deleteSimpleProduct2"/>
-            <deleteData createDataKey="createConfigChildProduct3" stepKey="deleteSimpleProduct3"/>
-            <deleteData createDataKey="createConfigProduct" stepKey="deleteProduct"/>
-            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
-            <deleteData createDataKey="createConfigProductAttribute" stepKey="deleteProductAttribute"/>
-            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
-        </after>
-
-        <!-- Add Configurable Product to the cart -->
-        <actionGroup ref="StorefrontAddConfigurableProductToTheCartActionGroup" stepKey="addConfigurableProductToCart">
-            <argument name="urlKey" value="$$createConfigProduct.custom_attributes[url_key]$$" />
-            <argument name="productAttribute" value="$$createConfigProductAttribute.default_value$$"/>
-            <argument name="productOption" value="$$getConfigAttributeOption2.label$$"/>
-            <argument name="qty" value="2"/>
-        </actionGroup>
-
-        <!--Open minicart-->
-        <waitForElement selector="{{StorefrontMinicartSection.showCart}}" stepKey="waitForShowMinicart" />
-        <waitForElement selector="{{StorefrontMinicartSection.viewAndEditCart}}" stepKey="waitForCartLink" />
-        <click selector="{{StorefrontMinicartSection.showCart}}" stepKey="clickShowMinicart" />
-
-        <!--Login (redirect)-->
-        <click selector="{{AmazonCheckoutSection.miniCartPayButton}}" stepKey="clickAmazonCartButton"/>
-        <actionGroup ref="AmazonLoginRedirectActionGroup" stepKey="AmazonLoginRedirectActionGroup" />
-
-        <!--Place order-->
-        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutCustomerTest.xml
+++ /dev/null
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutCustomer" extends="AmazonCheckoutAddProduct">
-        <annotations>
-            <features value="Amazon Pay"/>
-            <stories value="Success page elements are presented for placed order with Amazon Pay"/>
-            <title value="Amazon Pay Checkout from Customer Account page"/>
-            <description value="Perform checkout after logging in from customer account page and ensure Success page."/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_checkout"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <magentoCLI command="config:set {{AmazonLwaConfig.path}} 1" stepKey="enableAmazonLwa"/>
-        </before>
-
-        <after>
-            <magentoCLI command="config:set {{AmazonLwaConfig.path}} 0" stepKey="disableAmazonLwa"/>
-        </after>
-
-        <!--Go to Customer page-->
-        <amOnPage url="/customer/account/" stepKey="goToMyAccountPage" />
-
-        <!--Login (popup)-->
-        <click selector="{{AmazonCheckoutSection.loginButton}}" stepKey="clickAmazonCartButton"/>
-        <actionGroup ref="AmazonLoginPopupActionGroup" stepKey="AmazonLoginPopupActionGroup" />
-
-        <!--Place order-->
-        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutDeclineAmazonRejectedTest.xml
+++ /dev/null
@@ -1,35 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutDeclineAmazonRejected" extends="AmazonCheckoutAddProductDetail">
-        <annotations>
-            <stories value="Test decline error messages using sandbox CC# with Amazon Pay"/>
-            <title value="Amazon Pay Decline AmazonRejected"/>
-            <description value="Test CC decline message, logout, and redirect to cart with Amazon Pay"/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_decline"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <createData entity="SimpleTwo" stepKey="createSimpleProduct"/>
-            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </before>
-
-        <after>
-            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </after>
-
-        <!--Begin checkout-->
-        <actionGroup ref="AmazonCheckoutBeginActionGroup" stepKey="AmazonCheckoutBeginActionGroup" />
-        <!--Place order with invalid test CC#-->
-        <actionGroup ref="AmazonCheckoutCcActionGroup" stepKey="AmazonCheckoutCcActionGroupBad">
-            <argument name="cc" value="2323" />
-        </actionGroup>
-        <!--Decline Error Message-->
-        <waitForText userInput="please choose another payment method" selector="{{AdminMessagesSection.errorMessage}}" stepKey="waitForText"/>
-        <!--Verify iframe wallet message-->
-        <seeInCurrentUrl url="{{CheckoutCartPage.url}}" stepKey="assertUrl"/>
-    </test>
-</tests>
\ No newline at end of file

--- a/Test/Mftf/Test/AmazonCheckoutDeclineInvalidPaymentMethodTest.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutDeclineInvalidPaymentMethod" extends="AmazonCheckoutAddProductDetail">
-        <annotations>
-            <stories value="Test decline error messages using sandbox CC# with Amazon Pay"/>
-            <title value="Amazon Pay Decline InvalidPaymentMethod"/>
-            <description value="Test CC decline message and then success page elements for placed order with Amazon Pay"/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_decline"/>
-            <group value="amazon_payment"/>
-        </annotations>
-        <!--Begin checkout-->
-        <actionGroup ref="AmazonCheckoutBeginActionGroup" stepKey="AmazonCheckoutBeginActionGroup" />
-        <!--Place order with invalid test CC#-->
-        <actionGroup ref="AmazonCheckoutCcActionGroup" stepKey="AmazonCheckoutCcActionGroupBad">
-            <argument name="cc" value="3434" />
-        </actionGroup>
-        <!--Decline Error Message-->
-        <waitForText userInput="There has been a problem with the selected payment method" selector="{{AdminMessagesSection.errorMessage}}" stepKey="waitForText"/>
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutDeclinePaymentMethodTest.xml
+++ /dev/null
@@ -1,37 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutDeclinePaymentMethod" extends="AmazonCheckoutAddProductDetail">
-        <annotations>
-            <stories value="Test decline error messages using sandbox CC# with Amazon Pay"/>
-            <title value="Amazon Pay Decline PaymentMethodNotAllowed"/>
-            <description value="Test CC decline message and then success page elements for placed order with Amazon Pay"/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_decline"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <createData entity="SimpleTwo" stepKey="createSimpleProduct"/>
-            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </before>
-
-        <after>
-            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </after>
-
-        <!--Begin checkout-->
-        <actionGroup ref="AmazonCheckoutBeginActionGroup" stepKey="AmazonCheckoutBeginActionGroup" />
-        <!--Place order with invalid test CC#-->
-        <actionGroup ref="AmazonCheckoutCcActionGroup" stepKey="AmazonCheckoutCcActionGroupBad">
-            <argument name="cc" value="4545" />
-        </actionGroup>
-        <!--Decline Error Message-->
-        <waitForText userInput="Please select a payment method" selector="{{AdminMessagesSection.errorMessage}}" stepKey="waitForText"/>
-        <!--Use default CC#-->
-        <actionGroup ref="AmazonCheckoutCcActionGroup" stepKey="AmazonCheckoutCcActionGroupGood"/>
-        <!--See success message-->
-        <waitForText selector="{{CheckoutSuccessMainSection.successTitle}}" userInput="Thank you for your purchase!" stepKey="waitForLoadSuccessPage"/>
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutDeclineTransactionTimedOutAutomaticTest.xml
+++ /dev/null
@@ -1,35 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutDeclineTransactionTimedOutAutomatic" extends="AmazonCheckoutAddProductDetail">
-        <annotations>
-            <stories value="Test decline error messages using sandbox CC# with Amazon Pay"/>
-            <title value="Amazon Pay Decline TransactionTimedOut with Automatic Authorization)"/>
-            <description value="Test CC timeout message with Amazon Pay"/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_decline"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <magentoCLI stepKey="setAuthMode" command="config:set payment/amazon_payment/authorization_mode asynchronous" />
-            <createData entity="SimpleTwo" stepKey="createSimpleProduct"/>
-            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </before>
-
-        <after>
-            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
-            <magentoCLI stepKey="setAuthMode" command="config:set payment/amazon_payment/authorization_mode synchronous" />
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </after>
-
-        <!--Begin checkout-->
-        <actionGroup ref="AmazonCheckoutBeginActionGroup" stepKey="AmazonCheckoutBeginActionGroup" />
-        <!--Place order with invalid test CC#-->
-        <actionGroup ref="AmazonCheckoutCcActionGroup" stepKey="AmazonCheckoutCcActionGroupBad">
-            <argument name="cc" value="5656" />
-        </actionGroup>
-        <!--Transaction declined error message-->
-        <waitForText userInput="Transaction has been declined" selector="{{AdminMessagesSection.errorMessage}}" stepKey="waitForText"/>
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutDeclineTransactionTimedOutInstantTest.xml
+++ /dev/null
@@ -1,37 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutDeclineTransactionTimedOutInstant" extends="AmazonCheckoutAddProductDetail">
-        <annotations>
-            <stories value="Test decline error messages using sandbox CC# with Amazon Pay"/>
-            <title value="Amazon Pay Decline TransactionTimedOut with Instant Authorization"/>
-            <description value="Test CC timeout message with Amazon Pay"/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_decline"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <magentoCLI stepKey="setAuthMode" command="config:set payment/amazon_payment/authorization_mode synchronous" />
-            <createData entity="SimpleTwo" stepKey="createSimpleProduct"/>
-            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </before>
-
-        <after>
-            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </after>
-
-        <!--Begin checkout-->
-        <actionGroup ref="AmazonCheckoutBeginActionGroup" stepKey="AmazonCheckoutBeginActionGroup" />
-        <!--Place order with invalid test CC#-->
-        <actionGroup ref="AmazonCheckoutCcActionGroup" stepKey="AmazonCheckoutCcActionGroupBad">
-            <argument name="cc" value="5656" />
-        </actionGroup>
-        <!--Timeout Error Message-->
-        <waitForText userInput="please choose another payment method" selector="{{AdminMessagesSection.errorMessage}}" stepKey="waitForText"/>
-        <!--Wait for redirect to cart-->
-        <wait time="5" stepKey="waitRedirect"/>
-        <seeInCurrentUrl url="{{CheckoutCartPage.url}}" stepKey="assertUrl"/>
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutDisplayLanguageTest.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutDisplayLanguage" extends="AmazonCheckoutAddProductDetail">
-        <annotations>
-            <features value="Amazon Pay"/>
-            <stories value="Complete checkout with non-default display language setting"/>
-            <title value="Amazon Pay Checkout Display Language"/>
-            <description value="Perform checkout with non-default display language and ensure Success page."/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_checkout"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
-            <createData entity="SimpleTwo" stepKey="createSimpleProduct"/>
-            <magentoCLI command="config:set payment/amazon_payment/button_display_language de_DE" stepKey="setDeDisplayLanguage"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </before>
-
-        <after>
-            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
-            <magentoCLI command="config:set payment/amazon_payment/button_display_language ''" stepKey="setDeDisplayLanguage"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </after>
-
-        <!--Place order-->
-        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutFreeShippingTest.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutFreeShipping" extends="AmazonCheckoutAddProductDetail">
-        <annotations>
-            <features value="Amazon Pay"/>
-            <stories value="Complete checkout with free shipping"/>
-            <title value="Amazon Pay Checkout Free Shipping"/>
-            <description value="Perform checkout with free shipping"/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_checkout"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
-            <createData entity="SimpleTwo" stepKey="createSimpleProduct"/>
-            <magentoCLI command="config:set carriers/freeshipping/active 1" stepKey="enableFreeShipping"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </before>
-
-        <after>
-            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
-            <magentoCLI command="config:set carriers/freeshipping/active 0" stepKey="disableFreeShipping"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </after>
-
-        <!--Place order-->
-        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutGroupedProductTest.xml
+++ /dev/null
@@ -1,75 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutGroupedProduct">
-        <annotations>
-            <features value="Amazon Pay"/>
-            <stories value="Complete checkout with bundled product"/>
-            <title value="Amazon Pay Checkout Bundled Product"/>
-            <description value="Perform checkout with bundled product and ensure Success page."/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_checkout"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
-            <!--Create Grouped product with three simple product -->
-            <createData entity="ApiProductWithDescription" stepKey="simple1" before="simple2">
-                <field key="price">100.00</field>
-            </createData>
-            <createData entity="ApiProductWithDescription" stepKey="simple2" before="simple3">
-                <field key="price">200.00</field>
-            </createData>
-            <createData entity="ApiProductWithDescription" stepKey="simple3" before="product">
-                <field key="price">300.00</field>
-            </createData>
-            <createData entity="ApiGroupedProduct" stepKey="product"/>
-            <createData entity="OneSimpleProductLink" stepKey="addProductOne">
-                <requiredEntity createDataKey="product"/>
-                <requiredEntity createDataKey="simple1"/>
-            </createData>
-            <updateData entity="OneMoreSimpleProductLink" createDataKey="addProductOne" stepKey="addProductTwo">
-                <requiredEntity createDataKey="product"/>
-                <requiredEntity createDataKey="simple2"/>
-            </updateData>
-            <updateData entity="OneMoreSimpleProductLink" createDataKey="addProductOne" stepKey="addProductThree">
-                <requiredEntity createDataKey="product"/>
-                <requiredEntity createDataKey="simple3"/>
-            </updateData>
-            <magentoCLI command="indexer:reindex" stepKey="reindex"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </before>
-
-        <after>
-            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
-            <deleteData createDataKey="simple1" stepKey="deleteProduct1"/>
-            <deleteData createDataKey="simple2" stepKey="deleteProduct2"/>
-            <deleteData createDataKey="simple3" stepKey="deleteProduct3"/>
-            <deleteData createDataKey="product" stepKey="deleteGroupProduct"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </after>
-
-        <!-- Fill Quantity and add Product to the cart -->
-        <actionGroup ref="StorefrontAddThreeGroupedProductToTheCartActionGroup" stepKey="addGropedProductsToTheCart">
-            <argument name="urlKey" value="$$product.custom_attributes[url_key]$$"/>
-            <argument name="product1" value="$$simple1.name$$"/>
-            <argument name="product2" value="$$simple2.name$$"/>
-            <argument name="product3" value="$$simple3.name$$"/>
-            <argument name="qty1" value="1"/>
-            <argument name="qty2" value="2"/>
-            <argument name="qty3" value="3"/>
-        </actionGroup>
-
-        <!--Open minicart-->
-        <waitForElement selector="{{StorefrontMinicartSection.showCart}}" stepKey="waitForShowMinicart" />
-        <waitForElement selector="{{StorefrontMinicartSection.viewAndEditCart}}" stepKey="waitForCartLink" />
-        <click selector="{{StorefrontMinicartSection.showCart}}" stepKey="clickShowMinicart" />
-
-        <!--Login (redirect)-->
-        <click selector="{{AmazonCheckoutSection.miniCartPayButton}}" stepKey="clickAmazonCartButton"/>
-        <actionGroup ref="AmazonLoginRedirectActionGroup" stepKey="AmazonLoginRedirectActionGroup" />
-
-        <!--Place order-->
-        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutMiniCartTest.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutMiniCart" extends="AmazonCheckoutAddProduct">
-        <annotations>
-            <features value="Amazon Pay"/>
-            <stories value="Success page elements are presented for placed order with Amazon Pay"/>
-            <title value="Amazon Pay Checkout from Minicart"/>
-            <description value="Perform checkout from minicart and ensure Success page."/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_checkout"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <!--Open minicart-->
-        <waitForElement selector="{{StorefrontMinicartSection.showCart}}" stepKey="waitForShowMinicart" />
-        <waitForElement selector="{{StorefrontMinicartSection.viewAndEditCart}}" stepKey="waitForCartLink" />
-        <click selector="{{StorefrontMinicartSection.showCart}}" stepKey="clickShowMinicart" />
-
-        <!--Login (redirect)-->
-        <click selector="{{AmazonCheckoutSection.miniCartPayButton}}" stepKey="clickAmazonCartButton"/>
-        <actionGroup ref="AmazonLoginRedirectActionGroup" stepKey="AmazonLoginRedirectActionGroup" />
-
-        <!--Place order-->
-        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutPageTest.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutPage" extends="AmazonCheckoutAddProduct">
-        <annotations>
-            <features value="Amazon Pay"/>
-            <stories value="Success page elements are presented for placed order with Amazon Pay"/>
-            <title value="Amazon Pay Checkout from Checkout page"/>
-            <description value="Perform checkout from checkout page and ensure Success page."/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_checkout"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <!--Go to Checkout-->
-        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="goToCheckoutFromMinicart"/>
-
-        <waitForAjaxLoad stepKey="waitForAjaxLoad"/>
-
-        <!--Login (popup)-->
-        <click selector="{{AmazonCheckoutSection.checkoutPayButton}}" stepKey="clickAmazonCartButton"/>
-        <actionGroup ref="AmazonLoginPopupActionGroup" stepKey="AmazonLoginPopupActionGroup" />
-
-        <!--Place order-->
-        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutProductDetailTest.xml
+++ /dev/null
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutProductDetail" extends="AmazonCheckoutAddProductDetail">
-        <annotations>
-            <features value="Amazon Pay"/>
-            <stories value="Success page elements are presented for placed order with Amazon Pay"/>
-            <title value="Amazon Pay Checkout from Product Details"/>
-            <description value="Perform checkout from product details page and ensure Success page."/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_checkout"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <!--Place order-->
-        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutSCAAbandonedTest.xml
+++ /dev/null
@@ -1,45 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutSCAAbandoned" extends="AmazonCheckoutAddProduct">
-        <annotations>
-            <features value="Amazon Pay"/>
-            <stories value="(SCA) Amazon SCA Abandoned"/>
-            <title value="(SCA) Amazon SCA Abandoned"/>
-            <description value="Perform checkout from cart page and ensure SCA Abandoned page."/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_sca"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <createData entity="SimpleTwo" stepKey="createSimpleProduct"/>
-            <createData entity="EUAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
-            <createData entity="EUAmazonCurrencyConfig" stepKey="SampleAmazonCurrencyConfig"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </before>
-
-        <after>
-            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
-            <createData entity="DefaultAmazonCurrencyConfig" stepKey="DefaultAmazonCurrencyConfig"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </after>
-
-        <!--Go to Cart-->
-        <actionGroup ref="StorefrontOpenCartFromMinicartActionGroup" stepKey="cartOpenCart" />
-
-        <waitForAjaxLoad stepKey="waitForAjaxLoad"/>
-
-        <!--Login (popup)-->
-        <click selector="{{AmazonCheckoutSection.cartPayButton}}" stepKey="clickAmazonCartButton"/>
-        <actionGroup ref="AmazonLoginPopupActionGroup" stepKey="AmazonLoginPopupActionGroup" />
-
-        <!--Begin checkout-->
-        <actionGroup ref="AmazonCheckoutBeginActionGroup" stepKey="AmazonCheckoutBeginActionGroup" />
-        <!--Place order with SCA Abandoned CC-->
-        <actionGroup ref="AmazonCheckoutCcActionGroup" stepKey="AmazonCheckoutCcActionGroupBad">
-            <argument name="cc" value="4440" />
-        </actionGroup>
-        <!--Transaction declined error message-->
-        <waitForText userInput="Something's wrong with your payment method." selector=".message" stepKey="waitForText"/>
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutSCAFailureTest.xml
+++ /dev/null
@@ -1,45 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutSCAFailure" extends="AmazonCheckoutAddProduct">
-        <annotations>
-            <features value="Amazon Pay"/>
-            <stories value="(SCA) Amazon SCA Failed"/>
-            <title value="(SCA) Amazon SCA Failed"/>
-            <description value="Perform checkout from cart page and ensure SCA Failure page."/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_sca"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <createData entity="SimpleTwo" stepKey="createSimpleProduct"/>
-            <createData entity="EUAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
-            <createData entity="EUAmazonCurrencyConfig" stepKey="SampleAmazonCurrencyConfig"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </before>
-
-        <after>
-            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
-            <createData entity="DefaultAmazonCurrencyConfig" stepKey="DefaultAmazonCurrencyConfig"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </after>
-
-        <!--Go to Cart-->
-        <actionGroup ref="StorefrontOpenCartFromMinicartActionGroup" stepKey="cartOpenCart" />
-
-        <waitForAjaxLoad stepKey="waitForAjaxLoad"/>
-
-        <!--Login (popup)-->
-        <click selector="{{AmazonCheckoutSection.cartPayButton}}" stepKey="clickAmazonCartButton"/>
-        <actionGroup ref="AmazonLoginPopupActionGroup" stepKey="AmazonLoginPopupActionGroup" />
-
-        <!--Begin checkout-->
-        <actionGroup ref="AmazonCheckoutBeginActionGroup" stepKey="AmazonCheckoutBeginActionGroup" />
-        <!--Place order with SCA Failure CC-->
-        <actionGroup ref="AmazonCheckoutCcActionGroup" stepKey="AmazonCheckoutCcActionGroupBad">
-            <argument name="cc" value="8320" />
-        </actionGroup>
-        <!--Transaction declined error message-->
-        <waitForText userInput="There was a problem with your payment." selector=".message" stepKey="waitForText"/>
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonCheckoutSCASuccessTest.xml
+++ /dev/null
@@ -1,38 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonCheckoutSCASuccess" extends="AmazonCheckoutAddProduct">
-        <annotations>
-            <features value="Amazon Pay"/>
-            <stories value="(SCA) Success page elements are presented for placed order with Amazon Pay"/>
-            <title value="(SCA) Amazon Pay Checkout from Cart"/>
-            <description value="Perform checkout from cart page and ensure Success page."/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_sca"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <createData entity="EUAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
-            <createData entity="EUAmazonCurrencyConfig" stepKey="SampleAmazonCurrencyConfig"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </before>
-
-        <after>
-            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
-            <createData entity="DefaultAmazonCurrencyConfig" stepKey="DefaultAmazonCurrencyConfig"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </after>
-
-        <!--Go to Cart-->
-        <actionGroup ref="StorefrontOpenCartFromMinicartActionGroup" stepKey="cartOpenCart" />
-
-        <waitForAjaxLoad stepKey="waitForAjaxLoad"/>
-
-        <!--Login (popup)-->
-        <click selector="{{AmazonCheckoutSection.cartPayButton}}" stepKey="clickAmazonCartButton"/>
-        <actionGroup ref="AmazonLoginPopupActionGroup" stepKey="AmazonLoginPopupActionGroup" />
-
-        <!--Place order-->
-        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
-    </test>
-</tests>
\ No newline at end of file

--- a/Test/Mftf/Test/AmazonInvoiceSingleTest.xml
+++ /dev/null
@@ -1,74 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonInvoiceSingle">
-        <annotations>
-            <stories value="Amazon Pay Invoice"/>
-            <title value="Admin user must be unable to split invoices when configuration disallows EU"/>
-            <description value="Admin user must be unable to split invoices when configuration disallows EU"/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_invoice"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <createData entity="SimpleTwo" stepKey="createSimpleProduct1"/>
-            <createData entity="SimpleTwo" stepKey="createSimpleProduct2"/>
-            <createData entity="EUAmazonPaymentConfig" stepKey="SingleInvoiceAmazonPaymentConfig"/>
-            <createData entity="EUAmazonCurrencyConfig" stepKey="SingleInvoiceAmazonCurrencyConfig"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </before>
-
-        <after>
-            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
-            <createData entity="DefaultAmazonCurrencyConfig" stepKey="DefaultAmazonCurrencyConfig"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </after>
-
-        <!-- Go to product 1 page and add to cart -->
-        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openProduct1StoreFront">
-            <argument name="productUrl" value="$$createSimpleProduct1.custom_attributes[url_key]$$"/>
-        </actionGroup>
-        <actionGroup ref="StorefrontAddToTheCartActionGroup" stepKey="addProduct1ToCart"/>
-
-        <!-- Go to product 2 page and add to cart -->
-        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openProduct2StoreFront">
-            <argument name="productUrl" value="$$createSimpleProduct2.custom_attributes[url_key]$$"/>
-        </actionGroup>
-        <actionGroup ref="StorefrontAddToTheCartActionGroup" stepKey="addProduct2ToCart"/>
-
-        <!-- Click on mini cart -->
-        <actionGroup ref="StorefrontClickOnMiniCartActionGroup" stepKey="clickOnMiniCart"/>
-
-        <!-- Login (redirect) -->
-        <click selector="{{AmazonCheckoutSection.miniCartPayButton}}" stepKey="clickAmazonCartButton"/>
-        <actionGroup ref="AmazonLoginRedirectActionGroup" stepKey="AmazonLoginRedirectActionGroup" />
-
-        <!-- Place order -->
-        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
-        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber}}" stepKey="grabOrderNumber"/>
-
-        <!-- Login as admin -->
-        <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
-
-        <!-- Open created order in backend -->
-        <amOnPage url="{{AdminOrdersPage.url}}" stepKey="goToOrders"/>
-        <waitForPageLoad stepKey="waitForOrdersPageLoad"/>
-        <actionGroup ref="OpenOrderByIdActionGroup" stepKey="filterOrderGridById">
-            <argument name="orderId" value="$grabOrderNumber"/>
-        </actionGroup>
-
-        <!-- Create Invoice -->
-        <click selector="{{AdminOrderDetailsMainActionsSection.invoice}}" stepKey="clickInvoice"/>
-        <waitForPageLoad stepKey="waitForInvoicePage"/>
-
-        <!-- Verify invoice item qtys cannot be changed -->
-        <dontSeeElement stepKey="dontSeeItemQtyToInvoice1" selector="{{AdminInvoiceItemsSection.itemQtyToInvoice('1')}}"/>
-        <dontSeeElement stepKey="dontSeeItemQtyToInvoice2" selector="{{AdminInvoiceItemsSection.itemQtyToInvoice('2')}}"/>
-        <dontSeeElement stepKey="dontSeeUpdateQty" selector="{{AdminInvoiceItemsSection.updateQty}}"/>
-
-        <!-- Submit and verify the invoice created -->
-        <click selector="{{AdminInvoiceMainActionsSection.submitInvoice}}" stepKey="submitInvoice"/>
-        <waitForPageLoad stepKey="waitForLoadPage"/>
-        <see userInput="The invoice has been created." stepKey="seeMessage"/>
-    </test>
-</tests>

--- a/Test/Mftf/Test/AmazonInvoiceSplitTest.xml
+++ /dev/null
@@ -1,76 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
-    <test name="AmazonInvoiceSplit">
-        <annotations>
-            <stories value="Amazon Pay Invoice"/>
-            <title value="Admin user must be able to split invoices when configuration allows"/>
-            <description value="Admin user must be able to split invoices when configuration allows"/>
-            <severity value="CRITICAL"/>
-            <group value="amazon_invoice"/>
-            <group value="amazon_payment"/>
-        </annotations>
-
-        <before>
-            <createData entity="SimpleTwo" stepKey="createSimpleProduct1"/>
-            <createData entity="SimpleTwo" stepKey="createSimpleProduct2"/>
-            <createData entity="SampleAmazonPaymentConfig" stepKey="SplitInvoiceAmazonPaymentConfig"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </before>
-
-        <after>
-            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
-            <magentoCLI command="cache:flush" stepKey="flushCache"/>
-        </after>
-
-        <!-- Go to product 1 page and add to cart -->
-        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openProduct1StoreFront">
-            <argument name="productUrl" value="$$createSimpleProduct1.custom_attributes[url_key]$$"/>
-        </actionGroup>
-        <actionGroup ref="StorefrontAddToTheCartActionGroup" stepKey="addProduct1ToCart"/>
-
-        <!-- Go to product 2 page and add to cart -->
-        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openProduct2StoreFront">
-            <argument name="productUrl" value="$$createSimpleProduct2.custom_attributes[url_key]$$"/>
-        </actionGroup>
-        <actionGroup ref="StorefrontAddToTheCartActionGroup" stepKey="addProduct2ToCart"/>
-
-        <!-- Click on mini cart -->
-        <actionGroup ref="StorefrontClickOnMiniCartActionGroup" stepKey="clickOnMiniCart"/>
-
-        <!-- Login (redirect) -->
-        <click selector="{{AmazonCheckoutSection.miniCartPayButton}}" stepKey="clickAmazonCartButton"/>
-        <actionGroup ref="AmazonLoginRedirectActionGroup" stepKey="AmazonLoginRedirectActionGroup" />
-
-        <!-- Place order -->
-        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
-        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber}}" stepKey="grabOrderNumber"/>
-
-        <!-- Login as admin -->
-        <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
-
-        <!-- Open created order in backend -->
-        <amOnPage url="{{AdminOrdersPage.url}}" stepKey="goToOrders"/>
-        <waitForPageLoad stepKey="waitForOrdersPageLoad"/>
-        <actionGroup ref="OpenOrderByIdActionGroup" stepKey="filterOrderGridById">
-            <argument name="orderId" value="$grabOrderNumber"/>
-        </actionGroup>
-
-        <!-- Create Invoice 1 -->
-        <click selector="{{AdminOrderDetailsMainActionsSection.invoice}}" stepKey="clickInvoice1"/>
-        <waitForPageLoad stepKey="waitForInvoicePage1"/>
-        <fillField stepKey="fillQty" userInput="1" selector="{{AdminInvoiceItemsSection.itemQtyToInvoice('1')}}"/>
-        <fillField stepKey="fillNoQty" userInput="0" selector="{{AdminInvoiceItemsSection.itemQtyToInvoice('2')}}"/>
-        <click selector="{{AdminInvoiceItemsSection.updateQty}}" stepKey="updateQty"/>
-        <waitForPageLoad stepKey="waitPageToBeLoaded"/>
-        <click selector="{{AdminInvoiceMainActionsSection.submitInvoice}}" stepKey="submitInvoice1"/>
-        <waitForPageLoad stepKey="waitForLoadPage1"/>
-        <see userInput="The invoice has been created." stepKey="seeMessage1"/>
-
-        <!-- Create Invoice 2 -->
-        <click selector="{{AdminOrderDetailsMainActionsSection.invoice}}" stepKey="clickInvoice2"/>
-        <waitForPageLoad stepKey="waitForInvoicePage2"/>
-        <click selector="{{AdminInvoiceMainActionsSection.submitInvoice}}" stepKey="submitInvoice2"/>
-        <waitForPageLoad stepKey="waitForLoadPage2"/>
-        <see userInput="The invoice has been created." stepKey="seeMessage2"/>
-    </test>
-</tests>

--- a/Test/Unit/Gateway/Command/CaptureStrategyCommandTest.php
+++ b/Test/Unit/Gateway/Command/CaptureStrategyCommandTest.php
@@ -86,7 +86,7 @@ class CaptureStrategyCommandTest extends \PHPUnit\Framework\TestCase
     /**
      * Sets up base classes needed to mock the command strategy class
      */
-    protected function setUp()
+    protected function setUp(): void
     {
         $this->commandPool = $this->getMockBuilder(CommandPoolInterface::class)
             ->disableOriginalConstructor()

--- a/composer.json
+++ b/composer.json
@@ -2,14 +2,14 @@
   "name": "amzn/amazon-pay-module",
   "description": "Amazon Pay module",
   "type": "magento2-module",
-  "version": "4.0.2",
+  "version": "4.1.1",
   "license": [
     "Apache-2.0"
   ],
   "require": {
     "php": "~7.3.0||~7.4.0",
-    "amzn/amazon-pay-and-login-with-amazon-core-module": "^4.0.2",
-    "amzn/login-with-amazon-module": "^4.0.2",
+    "amzn/amazon-pay-and-login-with-amazon-core-module": "^4.1.1",
+    "amzn/login-with-amazon-module": "^4.1.1",
     "magento/framework": "*",
     "magento/module-customer": "*",
     "magento/module-eav": "*",

--- a/etc/di.xml
+++ b/etc/di.xml
@@ -34,16 +34,10 @@
             <argument name="config" xsi:type="object">Amazon\Payment\Gateway\Config\Config</argument>
         </arguments>
     </virtualType>
-    <virtualType name="AmazonCurrencyValidator" type="Amazon\Payment\Gateway\Validator\CurrencyValidator">
-        <arguments>
-            <argument name="config" xsi:type="object">Amazon\Payment\Gateway\Config\Config</argument>
-        </arguments>
-    </virtualType>
     <virtualType name="AmazonValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
         <arguments>
             <argument name="validators" xsi:type="array">
                 <item name="country" xsi:type="string">AmazonCountryValidator</item>
-                <item name="currency" xsi:type="string">AmazonCurrencyValidator</item>
             </argument>
         </arguments>
     </virtualType>
@@ -324,4 +318,9 @@
             <argument name="connectionName" xsi:type="string">sales</argument>
         </arguments>
     </type>
+    
+    <!-- Order comments for currency differences  -->
+    <type name="Magento\Sales\Model\Order\Payment">
+        <plugin name="amazon_pay_order_payment" type="Amazon\Payment\Plugin\OrderCurrencyComment" />
+    </type>
 </config>

--- a/etc/events.xml
+++ b/etc/events.xml
@@ -40,4 +40,7 @@
     <event name="amazon_payment_pending_authorization_hard_decline_after">
         <observer name="amazon_payment_hard_decline_email" instance="Amazon\Payment\Observer\HardDeclinedEmailSender" />
     </event>
+    <event name="sales_order_payment_capture">
+        <observer name="amazon_payment_order_payment_capture" instance="Amazon\Payment\Observer\OrderPaymentCapture" />
+    </event>
 </config>

--- a/etc/module.xml
+++ b/etc/module.xml
@@ -16,7 +16,7 @@
  */
 -->
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
-    <module name="Amazon_Payment" setup_version="4.0.2" >
+    <module name="Amazon_Payment" setup_version="4.1.1" >
         <sequence>
             <module name="Amazon_Core"/>
             <module name="Amazon_Login"/>

--- a/i18n/de_AT.csv
+++ b/i18n/de_AT.csv
@@ -4,7 +4,7 @@
 "Amazon capture invalid state : %1 with reason %2","Unerwarteter Status für Amazon Pay-Capture. Status: %1; Ursachencode: %2"
 "Amazon refund invalid state : %1 with reason %2","Unerwarteter Status für die Amazon Pay-Erstattung. Status: %1; Ursachencode: %2"
 "the country for your address is not allowed for this store","Das mit Ihrer Adresse verknüpfte Land ist für diese Website nicht zulässig."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Leider können Sie ""Amazon Pay"" für diese Bestellung nicht verwenden. Wählen Sie eine andere Zahlungsweise aus."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Leider können Sie ""Amazon Pay"" für diese Bestellung nicht verwenden. Wählen Sie eine andere Zahlungsweise aus."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","Leider ist bei der ausgewählten Zahlungsweise ein Problem in Ihrem Amazon-Kundenkonto aufgetreten. Wählen Sie eine andere Zahlungsweise aus."
 "The currency selected is not supported by Amazon Pay","Die ausgewählte Währung wird von Amazon Pay auf dieser Website nicht unterstützt."
 "Captured amount of %1 online","Online erfasster Betrag ist %1."
@@ -22,3 +22,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Mit dieser Zahlungsart ist ein Problem aufgetreten. Um Ihre Bestellung abzuschließen, wählen Sie bitte eine andere aus."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","Ihre Zahlung mit Amazon Pay ist derzeit noch in Prufung. Bitte beachten Sie, dass wir uns mit Ihnen in Kurze per Email in Verbindung setzen werden, falls noch Unklarheiten bestehen sollten."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","Fall Sie ihr Passwort zurücksetzen möchten, <a href=""%1"">loggen Sie sich bitte aus</a> und klicken Sie auf der Anmeldeseite auf “Passwort vergessen”"
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","Die gewählte Zahlmethode ist für diese Transaktion nicht verfügbar. Bitte wählen Sie eine andere oder fügen Sie eine neue Zahlmethode hinzu."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","Für diese Bestellung wurde kein Zahlungsmittel ausgewählt, bitte versuchen Sie, die Seite zu aktualisieren oder ein neues Zahlungsmittel hinzuzufügen."
+"The order failed due to a technical error, please select another payment method or contact our support.","Die Bestellung ist aufgrund eines technischen Fehlers fehlgeschlagen, bitte wählen Sie eine andere Zahlungsmethode oder kontaktieren Sie unseren Support."

--- a/i18n/de_CH.csv
+++ b/i18n/de_CH.csv
@@ -4,7 +4,7 @@
 "Amazon capture invalid state : %1 with reason %2","Unerwarteter Status für Amazon Pay-Capture. Status: %1; Ursachencode: %2"
 "Amazon refund invalid state : %1 with reason %2","Unerwarteter Status für die Amazon Pay-Erstattung. Status: %1; Ursachencode: %2"
 "the country for your address is not allowed for this store","Das mit Ihrer Adresse verknüpfte Land ist für diese Website nicht zulässig."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Leider können Sie ""Amazon Pay"" für diese Bestellung nicht verwenden. Wählen Sie eine andere Zahlungsweise aus."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Leider können Sie ""Amazon Pay"" für diese Bestellung nicht verwenden. Wählen Sie eine andere Zahlungsweise aus."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","Leider ist bei der ausgewählten Zahlungsweise ein Problem in Ihrem Amazon-Kundenkonto aufgetreten. Wählen Sie eine andere Zahlungsweise aus."
 "The currency selected is not supported by Amazon Pay","Die ausgewählte Währung wird von Amazon Pay auf dieser Website nicht unterstützt."
 "Captured amount of %1 online","Online erfasster Betrag ist %1."
@@ -22,3 +22,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Mit dieser Zahlungsart ist ein Problem aufgetreten. Um Ihre Bestellung abzuschließen, wählen Sie bitte eine andere aus."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","Ihre Zahlung mit Amazon Pay ist derzeit noch in Prufung. Bitte beachten Sie, dass wir uns mit Ihnen in Kurze per Email in Verbindung setzen werden, falls noch Unklarheiten bestehen sollten."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","Fall Sie ihr Passwort zurücksetzen möchten, <a href=""%1"">loggen Sie sich bitte aus</a> und klicken Sie auf der Anmeldeseite auf “Passwort vergessen”"
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","Die gewählte Zahlmethode ist für diese Transaktion nicht verfügbar. Bitte wählen Sie eine andere oder fügen Sie eine neue Zahlmethode hinzu."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","Für diese Bestellung wurde kein Zahlungsmittel ausgewählt, bitte versuchen Sie, die Seite zu aktualisieren oder ein neues Zahlungsmittel hinzuzufügen."
+"The order failed due to a technical error, please select another payment method or contact our support.","Die Bestellung ist aufgrund eines technischen Fehlers fehlgeschlagen, bitte wählen Sie eine andere Zahlungsmethode oder kontaktieren Sie unseren Support."

--- a/i18n/de_DE.csv
+++ b/i18n/de_DE.csv
@@ -4,7 +4,7 @@
 "Amazon capture invalid state : %1 with reason %2","Unerwarteter Status für Amazon Pay-Capture. Status: %1; Ursachencode: %2"
 "Amazon refund invalid state : %1 with reason %2","Unerwarteter Status für die Amazon Pay-Erstattung. Status: %1; Ursachencode: %2"
 "the country for your address is not allowed for this store","Das mit Ihrer Adresse verknüpfte Land ist für diese Website nicht zulässig."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Leider können Sie ""Amazon Pay"" für diese Bestellung nicht verwenden. Wählen Sie eine andere Zahlungsweise aus."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Leider können Sie ""Amazon Pay"" für diese Bestellung nicht verwenden. Wählen Sie eine andere Zahlungsweise aus."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","Leider ist bei der ausgewählten Zahlungsweise ein Problem in Ihrem Amazon-Kundenkonto aufgetreten. Wählen Sie eine andere Zahlungsweise aus."
 "The currency selected is not supported by Amazon Pay","Die ausgewählte Währung wird von Amazon Pay auf dieser Website nicht unterstützt."
 "Captured amount of %1 online","Online erfasster Betrag ist %1."
@@ -23,3 +23,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Mit dieser Zahlungsart ist ein Problem aufgetreten. Um Ihre Bestellung abzuschließen, wählen Sie bitte eine andere aus."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","Ihre Zahlung mit Amazon Pay ist derzeit noch in Prufung. Bitte beachten Sie, dass wir uns mit Ihnen in Kurze per Email in Verbindung setzen werden, falls noch Unklarheiten bestehen sollten."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","Fall Sie ihr Passwort zurücksetzen möchten, <a href=""%1"">loggen Sie sich bitte aus</a> und klicken Sie auf der Anmeldeseite auf “Passwort vergessen”"
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","Die gewählte Zahlmethode ist für diese Transaktion nicht verfügbar. Bitte wählen Sie eine andere oder fügen Sie eine neue Zahlmethode hinzu."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","Für diese Bestellung wurde kein Zahlungsmittel ausgewählt, bitte versuchen Sie, die Seite zu aktualisieren oder ein neues Zahlungsmittel hinzuzufügen."
+"The order failed due to a technical error, please select another payment method or contact our support.","Die Bestellung ist aufgrund eines technischen Fehlers fehlgeschlagen, bitte wählen Sie eine andere Zahlungsmethode oder kontaktieren Sie unseren Support."

--- a/i18n/en_GB.csv
+++ b/i18n/en_GB.csv
@@ -3,7 +3,7 @@
 "Amazon capture invalid state : %1 with reason %2","Unexpected state for the Amazon Pay capture. State: %1, Reason code: %2"
 "Amazon refund invalid state : %1 with reason %2","Unexpected state for the Amazon Pay refund. State: %1, Reason code: %2"
 "the country for your address is not allowed for this store","The country associated with your address is not allowed for this store."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","There has been a problem with the selected payment method on your Amazon account. Please choose another one."
 "The currency selected is not supported by Amazon Pay","The currency selected is not supported by Amazon Pay on this store."
 "Captured amount of %1 online","Captured amount of %1 online."
@@ -20,3 +20,6 @@
 "Return to standard checkout","Return to standard checkout"
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page"
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget."
+"The order failed due to a technical error, please select another payment method or contact our support.","The order failed due to a technical error, please select another payment method or contact our support."

--- a/i18n/en_US.csv
+++ b/i18n/en_US.csv
@@ -106,7 +106,7 @@
 "The currency selected is not supported by Amazon Pay","The currency selected is not supported by Amazon Pay on this store."
 "the email address for your Amazon account is invalid","The email address for your Amazon account is invalid."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","There has been a problem with the selected payment method on your Amazon account. Please choose another one."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Unfortunately it is not possible to Pay with Amazon Pay for this order. Please choose another payment method."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method."
 "United Kingdom","United Kingdom"
 "United States","United States"
 "Update Mechanism","Update Mechanism"
@@ -120,3 +120,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Something's wrong with your payment method. To place your order, try another."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page"
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget."
+"The order failed due to a technical error, please select another payment method or contact our support.","The order failed due to a technical error, please select another payment method or contact our support."

--- a/i18n/es_AR.csv
+++ b/i18n/es_AR.csv
@@ -4,7 +4,7 @@
 "Amazon capture invalid state : %1 with reason %2","Estado inesperado de la captura de Amazon Pay. Estado: %1; Código de motivo: %2"
 "Amazon refund invalid state : %1 with reason %2","Estado inesperado del reembolso de Amazon Pay. Estado: %1; Código de motivo: %2"
 "the country for your address is not allowed for this store","Este sitio web no admite el país asociado a tu dirección."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","Lo sentimos, se ha producido un problema con el método de pago seleccionado en tu cuenta de Amazon. Elige otro método de pago."
 "The currency selected is not supported by Amazon Pay","Amazon Pay no admite la divisa seleccionada en este sitio web."
 "Captured amount of %1 online","Importe capturado por Internet de %1."
@@ -23,3 +23,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Se ha producido un error con tu método de pago. Para confirmar tu pedido, prueba con otro método de pago."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","Tu transaccion con Amazon Pay se esta verificando. Te informaremos tan pronto como sea posible."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","Para restablecer tu contraseña, <a href=""%1"">cierra la sesión</a> y pulsa “¿Has olvidado tu contraseña?” en la pagina de acceso."
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","El método de pago seleccionado no está disponible para esta transacción. Por favor, seleccione otro o introducza uno nuevo en el recuadro Metodo de pago."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","No ha sido seleccionado un método de pago para este pedido. Por favor, refresque la página o introduzca uno nuevo en el recuadro Metodo de pago."
+"The order failed due to a technical error, please select another payment method or contact our support.","El pedido no ha sido procesado debido a un error técnico. Por favor, seleccione otro método de pago o contacte nuestro servicio de soporte al cliente."

--- a/i18n/es_CL.csv
+++ b/i18n/es_CL.csv
@@ -4,7 +4,7 @@
 "Amazon capture invalid state : %1 with reason %2","Estado inesperado de la captura de Amazon Pay. Estado: %1; Código de motivo: %2"
 "Amazon refund invalid state : %1 with reason %2","Estado inesperado del reembolso de Amazon Pay. Estado: %1; Código de motivo: %2"
 "the country for your address is not allowed for this store","Este sitio web no admite el país asociado a tu dirección."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","Lo sentimos, se ha producido un problema con el método de pago seleccionado en tu cuenta de Amazon. Elige otro método de pago."
 "The currency selected is not supported by Amazon Pay","Amazon Pay no admite la divisa seleccionada en este sitio web."
 "Captured amount of %1 online","Importe capturado por Internet de %1."
@@ -23,3 +23,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Se ha producido un error con tu método de pago. Para confirmar tu pedido, prueba con otro método de pago."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","Tu transaccion con Amazon Pay se esta verificando. Te informaremos tan pronto como sea posible."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","Para restablecer tu contraseña, <a href=""%1"">cierra la sesión</a> y pulsa “¿Has olvidado tu contraseña?” en la pagina de acceso."
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","El método de pago seleccionado no está disponible para esta transacción. Por favor, seleccione otro o introducza uno nuevo en el recuadro Metodo de pago."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","No ha sido seleccionado un método de pago para este pedido. Por favor, refresque la página o introduzca uno nuevo en el recuadro Metodo de pago."
+"The order failed due to a technical error, please select another payment method or contact our support.","El pedido no ha sido procesado debido a un error técnico. Por favor, seleccione otro método de pago o contacte nuestro servicio de soporte al cliente."

--- a/i18n/es_CO.csv
+++ b/i18n/es_CO.csv
@@ -4,7 +4,7 @@
 "Amazon capture invalid state : %1 with reason %2","Estado inesperado de la captura de Amazon Pay. Estado: %1; Código de motivo: %2"
 "Amazon refund invalid state : %1 with reason %2","Estado inesperado del reembolso de Amazon Pay. Estado: %1; Código de motivo: %2"
 "the country for your address is not allowed for this store","Este sitio web no admite el país asociado a tu dirección."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","Lo sentimos, se ha producido un problema con el método de pago seleccionado en tu cuenta de Amazon. Elige otro método de pago."
 "The currency selected is not supported by Amazon Pay","Amazon Pay no admite la divisa seleccionada en este sitio web."
 "Captured amount of %1 online","Importe capturado por Internet de %1."
@@ -23,3 +23,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Se ha producido un error con tu método de pago. Para confirmar tu pedido, prueba con otro método de pago."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","Tu transaccion con Amazon Pay se esta verificando. Te informaremos tan pronto como sea posible."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","Para restablecer tu contraseña, <a href=""%1"">cierra la sesión</a> y pulsa “¿Has olvidado tu contraseña?” en la pagina de acceso."
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","El método de pago seleccionado no está disponible para esta transacción. Por favor, seleccione otro o introducza uno nuevo en el recuadro Metodo de pago."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","No ha sido seleccionado un método de pago para este pedido. Por favor, refresque la página o introduzca uno nuevo en el recuadro Metodo de pago."
+"The order failed due to a technical error, please select another payment method or contact our support.","El pedido no ha sido procesado debido a un error técnico. Por favor, seleccione otro método de pago o contacte nuestro servicio de soporte al cliente."

--- a/i18n/es_CR.csv
+++ b/i18n/es_CR.csv
@@ -4,7 +4,7 @@
 "Amazon capture invalid state : %1 with reason %2","Estado inesperado de la captura de Amazon Pay. Estado: %1; Código de motivo: %2"
 "Amazon refund invalid state : %1 with reason %2","Estado inesperado del reembolso de Amazon Pay. Estado: %1; Código de motivo: %2"
 "the country for your address is not allowed for this store","Este sitio web no admite el país asociado a tu dirección."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","Lo sentimos, se ha producido un problema con el método de pago seleccionado en tu cuenta de Amazon. Elige otro método de pago."
 "The currency selected is not supported by Amazon Pay","Amazon Pay no admite la divisa seleccionada en este sitio web."
 "Captured amount of %1 online","Importe capturado por Internet de %1."
@@ -23,3 +23,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Se ha producido un error con tu método de pago. Para confirmar tu pedido, prueba con otro método de pago."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","Tu transaccion con Amazon Pay se esta verificando. Te informaremos tan pronto como sea posible."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","Para restablecer tu contraseña, <a href=""%1"">cierra la sesión</a> y pulsa “¿Has olvidado tu contraseña?” en la pagina de acceso."
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","El método de pago seleccionado no está disponible para esta transacción. Por favor, seleccione otro o introducza uno nuevo en el recuadro Metodo de pago."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","No ha sido seleccionado un método de pago para este pedido. Por favor, refresque la página o introduzca uno nuevo en el recuadro Metodo de pago."
+"The order failed due to a technical error, please select another payment method or contact our support.","El pedido no ha sido procesado debido a un error técnico. Por favor, seleccione otro método de pago o contacte nuestro servicio de soporte al cliente."

--- a/i18n/es_ES.csv
+++ b/i18n/es_ES.csv
@@ -4,7 +4,7 @@
 "Amazon capture invalid state : %1 with reason %2","Estado inesperado de la captura de Amazon Pay. Estado: %1; Código de motivo: %2"
 "Amazon refund invalid state : %1 with reason %2","Estado inesperado del reembolso de Amazon Pay. Estado: %1; Código de motivo: %2"
 "the country for your address is not allowed for this store","Este sitio web no admite el país asociado a tu dirección."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","Lo sentimos, se ha producido un problema con el método de pago seleccionado en tu cuenta de Amazon. Elige otro método de pago."
 "The currency selected is not supported by Amazon Pay","Amazon Pay no admite la divisa seleccionada en este sitio web."
 "Captured amount of %1 online","Importe capturado por Internet de %1."
@@ -23,3 +23,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Se ha producido un error con tu método de pago. Para confirmar tu pedido, prueba con otro método de pago."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","Tu transaccion con Amazon Pay se esta verificando. Te informaremos tan pronto como sea posible."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","Para restablecer tu contraseña, <a href=""%1"">cierra la sesión</a> y pulsa “¿Has olvidado tu contraseña?” en la pagina de acceso."
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","El método de pago seleccionado no está disponible para esta transacción. Por favor, seleccione otro o introducza uno nuevo en el recuadro Metodo de pago."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","No ha sido seleccionado un método de pago para este pedido. Por favor, refresque la página o introduzca uno nuevo en el recuadro Metodo de pago."
+"The order failed due to a technical error, please select another payment method or contact our support.","El pedido no ha sido procesado debido a un error técnico. Por favor, seleccione otro método de pago o contacte nuestro servicio de soporte al cliente."

--- a/i18n/es_MX.csv
+++ b/i18n/es_MX.csv
@@ -4,7 +4,7 @@
 "Amazon capture invalid state : %1 with reason %2","Estado inesperado de la captura de Amazon Pay. Estado: %1; Código de motivo: %2"
 "Amazon refund invalid state : %1 with reason %2","Estado inesperado del reembolso de Amazon Pay. Estado: %1; Código de motivo: %2"
 "the country for your address is not allowed for this store","Este sitio web no admite el país asociado a tu dirección."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","Lo sentimos, se ha producido un problema con el método de pago seleccionado en tu cuenta de Amazon. Elige otro método de pago."
 "The currency selected is not supported by Amazon Pay","Amazon Pay no admite la divisa seleccionada en este sitio web."
 "Captured amount of %1 online","Importe capturado por Internet de %1."
@@ -23,3 +23,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Se ha producido un error con tu método de pago. Para confirmar tu pedido, prueba con otro método de pago."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","Tu transaccion con Amazon Pay se esta verificando. Te informaremos tan pronto como sea posible."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","Para restablecer tu contraseña, <a href=""%1"">cierra la sesión</a> y pulsa “¿Has olvidado tu contraseña?” en la pagina de acceso."
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","El método de pago seleccionado no está disponible para esta transacción. Por favor, seleccione otro o introducza uno nuevo en el recuadro Metodo de pago."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","No ha sido seleccionado un método de pago para este pedido. Por favor, refresque la página o introduzca uno nuevo en el recuadro Metodo de pago."
+"The order failed due to a technical error, please select another payment method or contact our support.","El pedido no ha sido procesado debido a un error técnico. Por favor, seleccione otro método de pago o contacte nuestro servicio de soporte al cliente."

--- a/i18n/es_PA.csv
+++ b/i18n/es_PA.csv
@@ -4,7 +4,7 @@
 "Amazon capture invalid state : %1 with reason %2","Estado inesperado de la captura de Amazon Pay. Estado: %1; Código de motivo: %2"
 "Amazon refund invalid state : %1 with reason %2","Estado inesperado del reembolso de Amazon Pay. Estado: %1; Código de motivo: %2"
 "the country for your address is not allowed for this store","Este sitio web no admite el país asociado a tu dirección."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","Lo sentimos, se ha producido un problema con el método de pago seleccionado en tu cuenta de Amazon. Elige otro método de pago."
 "The currency selected is not supported by Amazon Pay","Amazon Pay no admite la divisa seleccionada en este sitio web."
 "Captured amount of %1 online","Importe capturado por Internet de %1."
@@ -23,3 +23,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Se ha producido un error con tu método de pago. Para confirmar tu pedido, prueba con otro método de pago."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","Tu transaccion con Amazon Pay se esta verificando. Te informaremos tan pronto como sea posible."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","Para restablecer tu contraseña, <a href=""%1"">cierra la sesión</a> y pulsa “¿Has olvidado tu contraseña?” en la pagina de acceso."
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","El método de pago seleccionado no está disponible para esta transacción. Por favor, seleccione otro o introducza uno nuevo en el recuadro Metodo de pago."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","No ha sido seleccionado un método de pago para este pedido. Por favor, refresque la página o introduzca uno nuevo en el recuadro Metodo de pago."
+"The order failed due to a technical error, please select another payment method or contact our support.","El pedido no ha sido procesado debido a un error técnico. Por favor, seleccione otro método de pago o contacte nuestro servicio de soporte al cliente."

--- a/i18n/es_PE.csv
+++ b/i18n/es_PE.csv
@@ -4,7 +4,7 @@
 "Amazon capture invalid state : %1 with reason %2","Estado inesperado de la captura de Amazon Pay. Estado: %1; Código de motivo: %2"
 "Amazon refund invalid state : %1 with reason %2","Estado inesperado del reembolso de Amazon Pay. Estado: %1; Código de motivo: %2"
 "the country for your address is not allowed for this store","Este sitio web no admite el país asociado a tu dirección."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","Lo sentimos, se ha producido un problema con el método de pago seleccionado en tu cuenta de Amazon. Elige otro método de pago."
 "The currency selected is not supported by Amazon Pay","Amazon Pay no admite la divisa seleccionada en este sitio web."
 "Captured amount of %1 online","Importe capturado por Internet de %1."
@@ -23,3 +23,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Se ha producido un error con tu método de pago. Para confirmar tu pedido, prueba con otro método de pago."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","Tu transaccion con Amazon Pay se esta verificando. Te informaremos tan pronto como sea posible."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","Para restablecer tu contraseña, <a href=""%1"">cierra la sesión</a> y pulsa “¿Has olvidado tu contraseña?” en la pagina de acceso."
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","El método de pago seleccionado no está disponible para esta transacción. Por favor, seleccione otro o introducza uno nuevo en el recuadro Metodo de pago."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","No ha sido seleccionado un método de pago para este pedido. Por favor, refresque la página o introduzca uno nuevo en el recuadro Metodo de pago."
+"The order failed due to a technical error, please select another payment method or contact our support.","El pedido no ha sido procesado debido a un error técnico. Por favor, seleccione otro método de pago o contacte nuestro servicio de soporte al cliente."

--- a/i18n/es_VE.csv
+++ b/i18n/es_VE.csv
@@ -4,7 +4,7 @@
 "Amazon capture invalid state : %1 with reason %2","Estado inesperado de la captura de Amazon Pay. Estado: %1; Código de motivo: %2"
 "Amazon refund invalid state : %1 with reason %2","Estado inesperado del reembolso de Amazon Pay. Estado: %1; Código de motivo: %2"
 "the country for your address is not allowed for this store","Este sitio web no admite el país asociado a tu dirección."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Lo sentimos, no es posible utilizar Amazon Pay para este pedido. Elige otro método de pago."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","Lo sentimos, se ha producido un problema con el método de pago seleccionado en tu cuenta de Amazon. Elige otro método de pago."
 "The currency selected is not supported by Amazon Pay","Amazon Pay no admite la divisa seleccionada en este sitio web."
 "Captured amount of %1 online","Importe capturado por Internet de %1."
@@ -23,3 +23,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Se ha producido un error con tu método de pago. Para confirmar tu pedido, prueba con otro método de pago."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","Tu transaccion con Amazon Pay se esta verificando. Te informaremos tan pronto como sea posible."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","Para restablecer tu contraseña, <a href=""%1"">cierra la sesión</a> y pulsa “¿Has olvidado tu contraseña?” en la pagina de acceso."
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","El método de pago seleccionado no está disponible para esta transacción. Por favor, seleccione otro o introducza uno nuevo en el recuadro Metodo de pago."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","No ha sido seleccionado un método de pago para este pedido. Por favor, refresque la página o introduzca uno nuevo en el recuadro Metodo de pago."
+"The order failed due to a technical error, please select another payment method or contact our support.","El pedido no ha sido procesado debido a un error técnico. Por favor, seleccione otro método de pago o contacte nuestro servicio de soporte al cliente."

--- a/i18n/fr_CA.csv
+++ b/i18n/fr_CA.csv
@@ -4,7 +4,7 @@
 "Amazon capture invalid state : %1 with reason %2","État imprévu pour la saisie d'Amazon Pay. État : %1 ; code du motif : %2"
 "Amazon refund invalid state : %1 with reason %2","État imprévu pour le remboursement d'Amazon Pay. État : %1 ; code du motif : %2"
 "the country for your address is not allowed for this store","Le pays associé à votre adresse n'est pas autorisé pour ce site."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Nous sommes désolés, mais vous ne pouvez pas utiliser Amazon Pay pour cette commande. Sélectionnez un autre mode paiement."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Nous sommes désolés, mais vous ne pouvez pas utiliser Amazon Pay pour cette commande. Sélectionnez un autre mode paiement."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","Nous sommes désolés, mais un problème s'est produit avec le mode de paiement sélectionné sur votre compte Amazon. Sélectionnez un autre mode paiement."
 "The currency selected is not supported by Amazon Pay","La devise sélectionnée n'est pas prise en charge par Amazon Pay sur ce site."
 "Captured amount of %1 online","Montant de %1 saisi en ligne."
@@ -23,3 +23,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Un problème est survenu avec votre moyen de paiement. Pour passer votre commande, essayez un autre moyen de paiement."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","Votre transaction avec Amazon Pay est en cours de validation. Vous serez informe prochainement de son suivi."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","Pour réinitialiser votre mot de passe, veuillez-vous <a href=""%1"">Déconnexion</a> et cliquer sur “Mot de passe oublié?” depuis la page de connexion"
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","Le mode de paiement sélectionné n'est pas disponible pour cette transaction. Veuillez en sélectionner un autre ou ajouter un nouveau mode de paiement au widget de portefeuille."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","Aucun instrument de paiement n'a été sélectionné pour cette commande, veuillez essayer de rafraîchir la page ou d'ajouter un nouvel instrument de paiement dans le widget de portefeuille."
+"The order failed due to a technical error, please select another payment method or contact our support.","La commande a échoué en raison d'une erreur technique, veuillez sélectionner un autre mode de paiement ou contacter notre support."

--- a/i18n/fr_FR.csv
+++ b/i18n/fr_FR.csv
@@ -4,7 +4,7 @@
 "Amazon capture invalid state : %1 with reason %2","État imprévu pour la saisie d'Amazon Pay. État : %1 ; code du motif : %2"
 "Amazon refund invalid state : %1 with reason %2","État imprévu pour le remboursement d'Amazon Pay. État : %1 ; code du motif : %2"
 "the country for your address is not allowed for this store","Le pays associé à votre adresse n'est pas autorisé pour ce site."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Nous sommes désolés, mais vous ne pouvez pas utiliser Amazon Pay pour cette commande. Sélectionnez un autre mode paiement."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Nous sommes désolés, mais vous ne pouvez pas utiliser Amazon Pay pour cette commande. Sélectionnez un autre mode paiement."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","Nous sommes désolés, mais un problème s'est produit avec le mode de paiement sélectionné sur votre compte Amazon. Sélectionnez un autre mode paiement."
 "The currency selected is not supported by Amazon Pay","La devise sélectionnée n'est pas prise en charge par Amazon Pay sur ce site."
 "Captured amount of %1 online","Montant de %1 saisi en ligne."
@@ -23,3 +23,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Un problème est survenu avec votre moyen de paiement. Pour passer votre commande, essayez un autre moyen de paiement."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","Votre transaction avec Amazon Pay est en cours de validation. Vous serez informe prochainement de son suivi."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","Pour réinitialiser votre mot de passe, veuillez-vous <a href=""%1"">Déconnexion</a> et cliquer sur “Mot de passe oublié?” depuis la page de connexion"
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","Le mode de paiement sélectionné n'est pas disponible pour cette transaction. Veuillez en sélectionner un autre ou ajouter un nouveau mode de paiement au widget de portefeuille."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","Aucun instrument de paiement n'a été sélectionné pour cette commande, veuillez essayer de rafraîchir la page ou d'ajouter un nouvel instrument de paiement dans le widget de portefeuille."
+"The order failed due to a technical error, please select another payment method or contact our support.","La commande a échoué en raison d'une erreur technique, veuillez sélectionner un autre mode de paiement ou contacter notre support."

--- a/i18n/it_CH.csv
+++ b/i18n/it_CH.csv
@@ -4,7 +4,7 @@
 "Amazon capture invalid state : %1 with reason %2","Stato imprevisto per l'acquisizione Amazon Pay. Stato: %1; Codice motivo: %2"
 "Amazon refund invalid state : %1 with reason %2","Stato imprevisto per il rimborso Amazon Pay. Stato: %1; Codice motivo: %2"
 "the country for your address is not allowed for this store","Il paese associato al tuo indirizzo non è supportato su questo sito."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Non è possibile utilizzare Amazon Pay per questo ordine. Seleziona un altro metodo di pagamento."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Non è possibile utilizzare Amazon Pay per questo ordine. Seleziona un altro metodo di pagamento."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","Si è verificato un problema con il metodo di pagamento selezionato sul tuo account Amazon. Seleziona un altro metodo di pagamento."
 "The currency selected is not supported by Amazon Pay","La valuta selezionata non è supportata da Amazon Pay su questo sito."
 "Captured amount of %1 online","Importo acquisito di %1 online."
@@ -22,3 +22,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Si è verificato un problema con il metodo di pagamento. Per effettuare l'ordine, prova con un altro metodo di pagamento."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","La vostra transazione con Amazon Pay e in fase di validazione. Vi informeremo del risultato della transazione a breve."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","Per resettare la tua password, per favore <a href=""%1"">Esci</a> dal tuo account e seleziona “Hai dimenticato la password?" dalla pagina di Accesso"
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","Il metodo di pagamento selezionato non è disponibile per questa transazione. Per favore selezionarne o aggiungerne un altro nel wallet widget."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","Non è stato selezionato nessun metodo di pagamento per questo ordine. Per favore ricaricare la pagina o aggiungere un nuovo metodo di pagamento nel wallet widget."
+"The order failed due to a technical error, please select another payment method or contact our support.","Non è stato possibile processare l’ordine a causa di un problema tecnico. Per favore selezionare un altro metodo di pagamento o contattare il supporto."

--- a/i18n/it_IT.csv
+++ b/i18n/it_IT.csv
@@ -4,7 +4,7 @@
 "Amazon capture invalid state : %1 with reason %2","Stato imprevisto per l'acquisizione Amazon Pay. Stato: %1; Codice motivo: %2"
 "Amazon refund invalid state : %1 with reason %2","Stato imprevisto per il rimborso Amazon Pay. Stato: %1; Codice motivo: %2"
 "the country for your address is not allowed for this store","Il paese associato al tuo indirizzo non è supportato su questo sito."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Non è possibile utilizzare Amazon Pay per questo ordine. Seleziona un altro metodo di pagamento."
+"Unfortunately it is not possible to use Amazon Pay for this order, please choose another payment method.","Non è possibile utilizzare Amazon Pay per questo ordine. Seleziona un altro metodo di pagamento."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","Si è verificato un problema con il metodo di pagamento selezionato sul tuo account Amazon. Seleziona un altro metodo di pagamento."
 "The currency selected is not supported by Amazon Pay","La valuta selezionata non è supportata da Amazon Pay su questo sito."
 "Captured amount of %1 online","Importo acquisito di %1 online."
@@ -23,3 +23,6 @@
 "The SCA challenge was not completed successfully.  Please try again, or use a different payment method.","Si è verificato un problema con il metodo di pagamento. Per effettuare l'ordine, prova con un altro metodo di pagamento."
 "Your transaction with Amazon Pay is currently being validated. Please be aware that we will inform you shortly as needed.","La vostra transazione con Amazon Pay e in fase di validazione. Vi informeremo del risultato della transazione a breve."
 "In order to reset your password, please <a href=""%1"">Sign Out</a> and click on “Forgot Your Password?” from the Sign In page","Per resettare la tua password, per favore <a href=""%1"">Esci</a> dal tuo account e seleziona “Hai dimenticato la password?" dalla pagina di Accesso"
+"The selected payment method is not available for this transaction. Please select another one or add a new payment method to the wallet widget.","Il metodo di pagamento selezionato non è disponibile per questa transazione. Per favore selezionarne o aggiungerne un altro nel wallet widget."
+"No payment instrument has been selected for this order, please try to refresh the page or add a new payment instrument in the wallet widget.","Non è stato selezionato nessun metodo di pagamento per questo ordine. Per favore ricaricare la pagina o aggiungere un nuovo metodo di pagamento nel wallet widget."
+"The order failed due to a technical error, please select another payment method or contact our support.","Non è stato possibile processare l’ordine a causa di un problema tecnico. Per favore selezionare un altro metodo di pagamento o contattare il supporto."

--- a/view/frontend/requirejs-config.js
+++ b/view/frontend/requirejs-config.js
@@ -27,6 +27,9 @@ var config = {
         mixins: {
             'Amazon_Payment/js/action/place-order': {
                 'Amazon_Payment/js/model/place-order-mixin': true
+            },
+            'Magento_Tax/js/view/checkout/summary/grand-total': {
+                'Amazon_Payment/js/view/checkout/summary/grand-total-mixin': true
             }
         }
     }

--- a/view/frontend/web/js/messages.js
+++ b/view/frontend/web/js/messages.js
@@ -44,6 +44,14 @@ define(
                         }
                     });
                 }
+            },
+
+            addMessage: function (type, messageText) {
+                var messageComponent = messagesFactory();
+
+                if (type === 'error') {
+                    messageList.addErrorMessage({message: $.mage.__($("<textarea/>").html(messageText).text())});
+                }
             }
         }
     }

--- a/view/frontend/web/js/view/checkout-widget-address.js
+++ b/view/frontend/web/js/view/checkout-widget-address.js
@@ -164,6 +164,8 @@ define(
                             addressConverter.quoteAddressToFormAddressData(addressData)
                         );
                         checkoutDataResolver.resolveEstimationAddress();
+
+                        amazonStorage.isAmazonShippingAddressSelected(true);
                     }
                 ).fail(
                     function (response) {

--- /dev/null
+++ b/view/frontend/web/js/view/checkout/summary/grand-total-mixin.js
@@ -0,0 +1,22 @@
+/*global define*/
+
+define([
+    'Amazon_Payment/js/model/storage'
+], function (amazonStorage) {
+    'use strict';
+
+    return function (GrandTotal) {
+        return GrandTotal.extend({
+            /**
+             * @return {Boolean}
+             */
+            isBaseGrandTotalDisplayNeeded: function () {
+                if (!amazonStorage.isAmazonAccountLoggedIn()) {
+                    return this._super();
+                }
+
+                return false;
+            }
+        });
+    }
+});

--- a/view/frontend/web/js/view/payment/list.js
+++ b/view/frontend/web/js/view/payment/list.js
@@ -35,6 +35,12 @@ define([
         initialize: function () {
 
             self = this;
+            amazonStorage.isAmazonAccountLoggedIn.subscribe(function (value) {
+                if (!value) {
+                    this._reloadPaymentMethods();
+                }
+            }, this);
+
             this._hidePaymentMethodsOnLoad(); //hide methods on load
 
             //subscribe to payment methods to remove other payment methods from render list

--- a/view/frontend/web/js/view/shipping.js
+++ b/view/frontend/web/js/view/shipping.js
@@ -2,27 +2,22 @@
 define(
     [
         'jquery',
-        'underscore',
-        'ko',
         'Magento_Checkout/js/view/shipping',
         'Magento_Customer/js/model/customer',
-        'Magento_Checkout/js/action/set-shipping-information',
-        'Magento_Checkout/js/model/step-navigator',
-        'Amazon_Payment/js/model/storage'
+        'Amazon_Payment/js/model/storage',
+        'Amazon_Payment/js/messages'
     ],
     function (
         $,
-        _,
-        ko,
         Component,
         customer,
-        setShippingInformationAction,
-        stepNavigator,
-        amazonStorage
+        amazonStorage,
+        amazonMessages
     ) {
         'use strict';
 
         return Component.extend({
+            noShippingAddressSelectedMsg: 'No shipping address has been selected for this order, please try to refresh the page or add a new shipping address in the Address Book widget.',
 
             /**
              * Initialize shipping
@@ -49,20 +44,32 @@ define(
             },
 
             /**
-             * New setShipping Action for Amazon Pay to bypass validation
+             * Overridden validateShippingInformation for Amazon Pay to bypass validation
+             *
+             * @inheritDoc
              */
-            setShippingInformation: function () {
-                if (amazonStorage.isAmazonAccountLoggedIn()) {
-                    if (customer.isLoggedIn() || this.validateGuestEmail()) {
-                        setShippingInformationAction().done(
-                            function () {
-                                stepNavigator.next();
-                            }
-                        );
+            validateShippingInformation: function () {
+                if (!amazonStorage.isAmazonAccountLoggedIn()) {
+                    return this._super();
+                }
+
+                if (!customer.isLoggedIn()) {
+                    if (!(amazonStorage.isAmazonShippingAddressSelected() && this.validateGuestEmail())) {
+                        amazonMessages.addMessage('error', this.noShippingAddressSelectedMsg);
+                        amazonMessages.displayMessages();
+
+                        return false;
                     }
-                } else {
-                    this._super();
                 }
+
+                if (!(amazonStorage.isAmazonShippingAddressSelected())) {
+                    amazonMessages.addMessage('error', this.noShippingAddressSelectedMsg);
+                    amazonMessages.displayMessages();
+
+                    return false;
+                }
+
+                return true;
             }
         });
     }

--- a/view/frontend/web/template/form/element/email.html
+++ b/view/frontend/web/template/form/element/email.html
@@ -53,7 +53,7 @@
                 </label>
                 <div class="control">
                     <input class="input-text"
-                           placeholder="optional"
+                           placeholder="Password"
                            type="password"
                            name="password"
                            id="customer-password"

