--- a/Block/CheckoutErrorMessage.php
+++ /dev/null
@@ -1,47 +0,0 @@
-<?php
-/**
- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License").
- * You may not use this file except in compliance with the License.
- * A copy of the License is located at
- *
- *  http://aws.amazon.com/apache2.0
- *
- * or in the "license" file accompanying this file. This file is distributed
- * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
- * express or implied. See the License for the specific language governing
- * permissions and limitations under the License.
- */
-
-namespace Amazon\Payment\Block;
-use Magento\Framework\View\Element\Template;
-use \Magento\Checkout\Model\Session as CheckoutSession;
-use \Magento\Framework\View\Element\Template\Context;
-
-class CheckoutErrorMessage extends Template
-{
-    public function __construct(
-        Context $context,
-        CheckoutSession $checkoutSession
-    ) {
-        parent::__construct($context);
-        $this->checkoutSession = $checkoutSession;
-    }
-    protected function _prepareLayout()
-    {
-    }
-
-    public function getError() {
-        $errorString = '';
-        foreach($this->checkoutSession->getQuote()->getErrors() as $error) {
-            $errorString .= $error->getText() . "\n";
-        }
-        return $errorString;
-    }
-
-    public function getCheckoutUrl() {
-        return $this->getUrl('checkout');
-    }
-}
-

--- a/Controller/Payment/CompleteCheckout.php
+++ b/Controller/Payment/CompleteCheckout.php
@@ -24,6 +24,7 @@ use Magento\Quote\Api\GuestCartManagementInterface;
 use Magento\Checkout\Model\Session as CheckoutSession;
 use Magento\Customer\Model\Session;
 use Magento\Framework\View\Result\PageFactory;
+use \Magento\Framework\Message\ManagerInterface as MessageManager;
 
 /**
  * Class CompleteCheckout
@@ -71,7 +72,8 @@ class CompleteCheckout extends Action
         GuestCartManagementInterface $guestCartManagement,
         CheckoutSession $checkoutSession,
         Session $session,
-        PageFactory $pageFactory
+        PageFactory $pageFactory,
+        MessageManager $messageManager
     ) {
         parent::__construct($context);
         $this->amazonConfig = $amazonConfig;
@@ -79,6 +81,7 @@ class CompleteCheckout extends Action
         $this->checkoutSession = $checkoutSession;
         $this->session = $session;
         $this->pageFactory = $pageFactory;
+        $this->messageManager = $messageManager;
     }
 
     /*
@@ -96,22 +99,22 @@ class CompleteCheckout extends Action
                     $this->cartManagement->placeOrder($this->checkoutSession->getQuoteId());
                     return $this->_redirect('checkout/onepage/success');
                 } catch (AmazonWebapiException $e) {
-                    $this->checkoutSession->getQuote()->addMessage($e->getMessage());
+                    $this->messageManager->addErrorMessage($e->getMessage());
                 }
                 break;
             case 'Failure':
-                $this->checkoutSession->getQuote()->addMessage(__(
+                $this->messageManager->addErrorMessage(__(
                     'Amazon Pay was unable to authenticate the payment instrument.  '
                     . 'Please try again, or use a different payment method.'
                 ));
                 break;
             case 'Abandoned':
             default:
-                $this->checkoutSession->getQuote()->addMessage(__(
+                $this->messageManager->addErrorMessage(__(
                     'The SCA challenge was not completed successfully.  '
                     . 'Please try again, or use a different payment method.'
                 ));
         }
-        return $this->pageFactory->create();
+        return $this->_redirect('checkout/cart');
     }
 }

--- a/Plugin/ShippingInformationManagement.php
+++ b/Plugin/ShippingInformationManagement.php
@@ -80,7 +80,9 @@ class ShippingInformationManagement
             return $return;
         }
 
-        $amazonOrderReferenceId = $quote->getExtensionAttributes()->getAmazonOrderReferenceId();
+        $amazonOrderReferenceId = $quote->getExtensionAttributes()
+            ->getAmazonOrderReferenceId()
+            ->getAmazonOrderReferenceId();
 
         if ($amazonOrderReferenceId) {
             $this->orderInformationManagement->saveOrderInformation(
@@ -92,6 +94,16 @@ class ShippingInformationManagement
             );
         }
 
+        /*
+         * Magento\Quote\Model\Quote::setShippingAddress merges into the existing shipping address,
+         *  rather than replacing it.  Because not all addresses have a region_id, make sure that
+         *  the region_id is explicitly emptied, to prevent the old one being used.
+         */
+        $shippingAddress = $shippingInformation->getShippingAddress();
+        if(!$shippingAddress->hasData('region_id')) {
+            $shippingAddress->setRegionId("");
+        }
+
         return $return;
     }
 }

--- a/Test/Mftf/Test/AmazonCheckoutDeclineTest.xml
+++ b/Test/Mftf/Test/AmazonCheckoutDeclineTest.xml
@@ -15,6 +15,9 @@
             <description value="Test CC decline message and then success page elements for placed order with Amazon Pay"/>
             <severity value="CRITICAL"/>
             <group value="amazon_decline"/>
+            <skip>
+                <issueId>AmazonPayCredentialSupport</issueId>
+            </skip>
         </annotations>
         <!--Begin checkout-->
         <actionGroup ref="AmazonCheckoutBeginActionGroup" stepKey="AmazonCheckoutBeginActionGroup" />
@@ -36,6 +39,9 @@
             <description value="Test CC decline message and then success page elements for placed order with Amazon Pay"/>
             <severity value="CRITICAL"/>
             <group value="amazon_decline"/>
+            <skip>
+                <issueId>AmazonPayCredentialSupport</issueId>
+            </skip>
         </annotations>
         <!--Begin checkout-->
         <actionGroup ref="AmazonCheckoutBeginActionGroup" stepKey="AmazonCheckoutBeginActionGroup" />
@@ -63,6 +69,9 @@
             <description value="Test CC decline message, logout, and redirect to cart with Amazon Pay"/>
             <severity value="CRITICAL"/>
             <group value="amazon_decline"/>
+            <skip>
+                <issueId>AmazonPayCredentialSupport</issueId>
+            </skip>
         </annotations>
         <!--Begin checkout-->
         <actionGroup ref="AmazonCheckoutBeginActionGroup" stepKey="AmazonCheckoutBeginActionGroup" />
@@ -90,6 +99,9 @@
             <description value="Test CC timeout message with Amazon Pay"/>
             <severity value="CRITICAL"/>
             <group value="amazon_decline"/>
+            <skip>
+                <issueId>AmazonPayCredentialSupport</issueId>
+            </skip>
         </annotations>
         <!--Begin checkout-->
         <actionGroup ref="AmazonCheckoutBeginActionGroup" stepKey="AmazonCheckoutBeginActionGroup" />
@@ -116,6 +128,9 @@
             <description value="Test CC timeout message with Amazon Pay"/>
             <severity value="CRITICAL"/>
             <group value="amazon_decline"/>
+            <skip>
+                <issueId>AmazonPayCredentialSupport</issueId>
+            </skip>
         </annotations>
         <!--Begin checkout-->
         <actionGroup ref="AmazonCheckoutBeginActionGroup" stepKey="AmazonCheckoutBeginActionGroup" />
@@ -126,4 +141,64 @@
         <!--Transaction declined error message-->
         <waitForText userInput="Transaction has been declined" selector="{{AdminMessagesSection.errorMessage}}" stepKey="waitForText"/>
     </test>
+    <test name="AmazonCheckoutSCAAbandoned" extends="AmazonCheckoutAddProduct">
+        <annotations>
+            <features value="Amazon Pay"/>
+            <stories value="(SCA) Amazon SCA Abandoned"/>
+            <title value="(SCA) Amazon SCA Abandoned"/>
+            <description value="Perform checkout from cart page and ensure SCA Abandoned page."/>
+            <severity value="CRITICAL"/>
+            <group value="amazon_sca"/>
+            <skip>
+                <issueId>AmazonPayCredentialSupport</issueId>
+            </skip>
+        </annotations>
+        <!--Go to Cart-->
+        <actionGroup ref="StorefrontOpenCartFromMinicartActionGroup" stepKey="cartOpenCart" />
+
+        <waitForAjaxLoad stepKey="waitForAjaxLoad"/>
+
+        <!--Login (popup)-->
+        <click selector="{{AmazonCheckoutSection.cartPayButton}}" stepKey="clickAmazonCartButton"/>
+        <actionGroup ref="AmazonLoginPopupActionGroup" stepKey="AmazonLoginPopupActionGroup" />
+
+        <!--Begin checkout-->
+        <actionGroup ref="AmazonCheckoutBeginActionGroup" stepKey="AmazonCheckoutBeginActionGroup" />
+        <!--Place order with SCA Abandoned CC-->
+        <actionGroup ref="AmazonCheckoutCcActionGroup" stepKey="AmazonCheckoutCcActionGroupBad">
+            <argument name="cc" value="4440" />
+        </actionGroup>
+        <!--Transaction declined error message-->
+        <waitForText userInput="The SCA challenge was not completed successfully." selector="#checkoutError" stepKey="waitForText"/>
+    </test>
+    <test name="AmazonCheckoutSCAFailure" extends="AmazonCheckoutAddProduct">
+        <annotations>
+            <features value="Amazon Pay"/>
+            <stories value="(SCA) Amazon SCA Failed"/>
+            <title value="(SCA) Amazon SCA Failed"/>
+            <description value="Perform checkout from cart page and ensure SCA Failure page."/>
+            <severity value="CRITICAL"/>
+            <group value="amazon_sca"/>
+            <skip>
+                <issueId>AmazonPayCredentialSupport</issueId>
+            </skip>
+        </annotations>
+        <!--Go to Cart-->
+        <actionGroup ref="StorefrontOpenCartFromMinicartActionGroup" stepKey="cartOpenCart" />
+
+        <waitForAjaxLoad stepKey="waitForAjaxLoad"/>
+
+        <!--Login (popup)-->
+        <click selector="{{AmazonCheckoutSection.cartPayButton}}" stepKey="clickAmazonCartButton"/>
+        <actionGroup ref="AmazonLoginPopupActionGroup" stepKey="AmazonLoginPopupActionGroup" />
+
+        <!--Begin checkout-->
+        <actionGroup ref="AmazonCheckoutBeginActionGroup" stepKey="AmazonCheckoutBeginActionGroup" />
+        <!--Place order with SCA Failure CC-->
+        <actionGroup ref="AmazonCheckoutCcActionGroup" stepKey="AmazonCheckoutCcActionGroupBad">
+            <argument name="cc" value="8320" />
+        </actionGroup>
+        <!--Transaction declined error message-->
+        <waitForText userInput="Amazon Pay was unable to authenticate the payment instrument." selector="#checkoutError" stepKey="waitForText"/>
+    </test>
 </tests>

--- a/Test/Mftf/Test/AmazonCheckoutSuccessTest.xml
+++ b/Test/Mftf/Test/AmazonCheckoutSuccessTest.xml
@@ -16,6 +16,9 @@
             <description value="Creates and loads simple product and adds it to cart using Amazon Pay button on product detail page."/>
             <severity value="BLOCKER"/>
             <group value="amazon_checkout"/>
+            <skip>
+                <issueId>AmazonPayCredentialSupport</issueId>
+            </skip>
         </annotations>
 
         <before>
@@ -46,6 +49,9 @@
             <description value="Adds product to cart."/>
             <severity value="BLOCKER"/>
             <group value="amazon_checkout"/>
+            <skip>
+                <issueId>AmazonPayCredentialSupport</issueId>
+            </skip>
         </annotations>
 
         <before>
@@ -74,6 +80,9 @@
             <description value="Perform checkout from product details page and ensure Success page."/>
             <severity value="CRITICAL"/>
             <group value="amazon_checkout"/>
+            <skip>
+                <issueId>AmazonPayCredentialSupport</issueId>
+            </skip>
         </annotations>
 
         <!--Place order-->
@@ -87,6 +96,9 @@
             <description value="Perform checkout from cart page and ensure Success page."/>
             <severity value="CRITICAL"/>
             <group value="amazon_checkout"/>
+            <skip>
+                <issueId>AmazonPayCredentialSupport</issueId>
+            </skip>
         </annotations>
 
         <!--Go to Cart-->
@@ -109,6 +121,9 @@
             <description value="Perform checkout from minicart and ensure Success page."/>
             <severity value="CRITICAL"/>
             <group value="amazon_checkout"/>
+            <skip>
+                <issueId>AmazonPayCredentialSupport</issueId>
+            </skip>
         </annotations>
 
         <!--Open minicart-->
@@ -131,6 +146,9 @@
             <description value="Perform checkout from checkout page and ensure Success page."/>
             <severity value="CRITICAL"/>
             <group value="amazon_checkout"/>
+            <skip>
+                <issueId>AmazonPayCredentialSupport</issueId>
+            </skip>
         </annotations>
 
         <!--Go to Checkout-->
@@ -153,6 +171,9 @@
             <description value="Perform checkout after logging in from customer account page and ensure Success page."/>
             <severity value="CRITICAL"/>
             <group value="amazon_checkout"/>
+            <skip>
+                <issueId>AmazonPayCredentialSupport</issueId>
+            </skip>
         </annotations>
 
         <!--Go to Customer page-->
@@ -162,6 +183,31 @@
         <click selector="{{AmazonCheckoutSection.loginButton}}" stepKey="clickAmazonCartButton"/>
         <actionGroup ref="AmazonLoginPopupActionGroup" stepKey="AmazonLoginPopupActionGroup" />
 
+        <!--Place order-->
+        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
+    </test>
+    <test name="AmazonCheckoutSCASuccess" extends="AmazonCheckoutAddProduct">
+        <annotations>
+            <features value="Amazon Pay"/>
+            <stories value="(SCA) Success page elements are presented for placed order with Amazon Pay"/>
+            <title value="(SCA) Amazon Pay Checkout from Cart"/>
+            <description value="Perform checkout from cart page and ensure Success page."/>
+            <severity value="CRITICAL"/>
+            <group value="amazon_sca"/>
+            <skip>
+                <issueId>AmazonPayCredentialSupport</issueId>
+            </skip>
+        </annotations>
+
+        <!--Go to Cart-->
+        <actionGroup ref="StorefrontOpenCartFromMinicartActionGroup" stepKey="cartOpenCart" />
+
+        <waitForAjaxLoad stepKey="waitForAjaxLoad"/>
+
+        <!--Login (popup)-->
+        <click selector="{{AmazonCheckoutSection.cartPayButton}}" stepKey="clickAmazonCartButton"/>
+        <actionGroup ref="AmazonLoginPopupActionGroup" stepKey="AmazonLoginPopupActionGroup" />
+
         <!--Place order-->
         <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
     </test>

--- a/Test/Unit/Gateway/Command/CaptureStrategyCommandTest.php
+++ b/Test/Unit/Gateway/Command/CaptureStrategyCommandTest.php
@@ -17,6 +17,7 @@ namespace Amazon\Payment\Test\Unit\Gateway\Command;
 
 use Amazon\Payment\Gateway\Command\CaptureStrategyCommand;
 use Amazon\Core\Helper\Data;
+use Amazon\Payment\Gateway\Data\Order\OrderAdapterFactory;
 use Magento\Framework\TestFramework\Unit\Helper\ObjectManager;
 use Magento\Framework\Api\SearchCriteriaBuilder;
 use Magento\Framework\Api\FilterBuilder;
@@ -77,6 +78,11 @@ class CaptureStrategyCommandTest extends \PHPUnit\Framework\TestCase
      */
     private $coreHelper;
 
+    /**
+     * @var OrderAdapterFactory|MockObject
+     */
+    private $orderAdapterFactory;
+
     /**
      * Sets up base classes needed to mock the command strategy class
      */
@@ -91,6 +97,7 @@ class CaptureStrategyCommandTest extends \PHPUnit\Framework\TestCase
         $this->initTransactionRepositoryMock();
         $this->initFilterBuilderMock();
         $this->initSearchCriteriaBuilderMock();
+        $this->initOrderAdapterFactoryMock();
 
         $this->coreHelper = $this->getMockBuilder(\Amazon\Core\Helper\Data::class)
             ->disableOriginalConstructor()
@@ -101,7 +108,8 @@ class CaptureStrategyCommandTest extends \PHPUnit\Framework\TestCase
             $this->transactionRepository,
             $this->searchCriteriaBuilder,
             $this->filterBuilder,
-            $this->coreHelper
+            $this->coreHelper,
+            $this->orderAdapterFactory
         );
     }
 
@@ -264,4 +272,26 @@ class CaptureStrategyCommandTest extends \PHPUnit\Framework\TestCase
             ->setMethods(['getList', 'getTotalCount', 'delete', 'get', 'save', 'create', '__wakeup'])
             ->getMock();
     }
+
+    /**
+     * Create mock for Order Adapter Factory
+     */
+    public function initOrderAdapterFactoryMock()
+    {
+        $this->orderAdapterFactory = $this->getMockBuilder(OrderAdapterFactory::class)
+            ->disableOriginalConstructor()
+            ->setMethods(['create'])
+            ->getMock();
+
+        $orderMock = $this->getMockBuilder(OrderAdapterInterface::class)
+            ->disableOriginalConstructor()
+            ->setMethods(['getAmazonOrderID'])
+            ->getMock();
+
+        $orderMock->method('getAmazonOrderID')
+            ->willReturn('123456');
+
+        $this->orderAdapterFactory->method('create')
+            ->willReturn($orderMock);
+    }
 }

--- a/composer.json
+++ b/composer.json
@@ -2,14 +2,14 @@
   "name": "amzn/amazon-pay-module",
   "description": "Amazon Pay module",
   "type": "magento2-module",
-  "version": "3.2.1",
+  "version": "3.2.7",
   "license": [
     "Apache-2.0"
   ],
   "require": {
     "php": "~7.1.3||~7.2.0",
-    "amzn/amazon-pay-and-login-with-amazon-core-module": "^3.2.1",
-    "amzn/login-with-amazon-module": "^3.2.1",
+    "amzn/amazon-pay-and-login-with-amazon-core-module": "^3.2.7",
+    "amzn/login-with-amazon-module": "^3.2.7",
     "magento/framework": "^102",
     "magento/module-customer": "^102",
     "magento/module-eav": "^102",

--- a/etc/module.xml
+++ b/etc/module.xml
@@ -16,7 +16,7 @@
  */
 -->
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
-    <module name="Amazon_Payment" setup_version="3.2.1" >
+    <module name="Amazon_Payment" setup_version="3.2.7" >
         <sequence>
             <module name="Amazon_Core"/>
             <module name="Amazon_Login"/>

--- a/view/frontend/layout/amazon_payments_payment_completecheckout.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<?xml version="1.0"?>
-<!--
-/**
- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License").
- * You may not use this file except in compliance with the License.
- * A copy of the License is located at
- *
- *  http://aws.amazon.com/apache2.0
- *
- * or in the "license" file accompanying this file. This file is distributed
- * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
- * express or implied. See the License for the specific language governing
- * permissions and limitations under the License.
- */
--->
-<page xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" layout="1column" xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_configuration.xsd">
-    <referenceBlock name="content">
-        <block
-                template="checkout-error.phtml"
-                class="Amazon\Payment\Block\CheckoutErrorMessage"
-                name="amazonpayments_payment_completecheckout_error"
-                cacheable="false"
-        />
-    </referenceBlock>
-</page>

--- a/view/frontend/templates/checkout-error.phtml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?php
-/**
- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License").
- * You may not use this file except in compliance with the License.
- * A copy of the License is located at
- *
- *  http://aws.amazon.com/apache2.0
- *
- * or in the "license" file accompanying this file. This file is distributed
- * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
- * express or implied. See the License for the specific language governing
- * permissions and limitations under the License.
- */
-?>
-<h1><?=__('An error has occurred.')?></h1>
-<p>
-    <?=__($block->getError())?><br/>
-    <a href="<?=$block->getCheckoutUrl()?>"><?=__('Click here to return to checkout.')?></a>
-</p>

