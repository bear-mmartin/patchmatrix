--- a/Gateway/Command/CaptureStrategyCommand.php
+++ b/Gateway/Command/CaptureStrategyCommand.php
@@ -108,7 +108,6 @@ class CaptureStrategyCommand implements CommandInterface
     public function execute(array $commandSubject)
     {
         try {
-            throw new \Exception('failed');
             if (isset($commandSubject['payment'])) {
                 $paymentDO = $commandSubject['payment'];
                 $paymentInfo = $paymentDO->getPayment();

--- a/composer.json
+++ b/composer.json
@@ -2,14 +2,14 @@
   "name": "amzn/amazon-pay-module",
   "description": "Amazon Pay module",
   "type": "magento2-module",
-  "version": "3.2.11",
+  "version": "3.2.12",
   "license": [
     "Apache-2.0"
   ],
   "require": {
     "php": "~7.1.3||~7.2.0",
-    "amzn/amazon-pay-and-login-with-amazon-core-module": "^3.2.11",
-    "amzn/login-with-amazon-module": "^3.2.11",
+    "amzn/amazon-pay-and-login-with-amazon-core-module": "^3.2.12",
+    "amzn/login-with-amazon-module": "^3.2.12",
     "magento/framework": "^102",
     "magento/module-customer": "^102",
     "magento/module-eav": "^102",

--- a/etc/module.xml
+++ b/etc/module.xml
@@ -16,7 +16,7 @@
  */
 -->
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
-    <module name="Amazon_Payment" setup_version="3.2.11" >
+    <module name="Amazon_Payment" setup_version="3.2.12" >
         <sequence>
             <module name="Amazon_Core"/>
             <module name="Amazon_Login"/>

--- a/view/frontend/web/js/amazon-core.js
+++ b/view/frontend/web/js/amazon-core.js
@@ -18,10 +18,11 @@ define([
     'ko',
     'mage/url',
     'amazonPaymentConfig',
+    'Magento_Ui/js/model/messageList',
     'amazonWidgetsLoader',
     'jquery/jquery-storageapi',
     'mage/cookies'
-], function ($, ko, url, amazonPaymentConfig) {
+], function ($, ko, url, amazonPaymentConfig, messageList) {
     'use strict';
 
     var amazonDefined = ko.observable(false),
@@ -55,13 +56,6 @@ define([
         $(window).trigger('OffAmazonPayments');
     };
 
-    /**
-     * Set Client ID
-     * @param {String} cid
-     */
-    function setClientId(cid) {
-    }
-
     /**
      * Log user out of amazon
      */
@@ -107,11 +101,12 @@ define([
     }
 
     function handleWidgetError(error) {
-        console.log('OffAmazonPayments.Widgets.AddressBook', error.getErrorCode(), error.getErrorMessage());
+        console.log('OffAmazonPayments.Widgets', error.getErrorCode(), error.getErrorMessage());
         switch (error.getErrorCode()) {
             case 'BuyerSessionExpired':
                 messageList.addErrorMessage({message: $.mage.__('Your Amazon session has expired.  Please sign in again by clicking the Amazon Pay Button.')});
-                amazonStorage.amazonlogOut();
+                var storage = require('Amazon_Payment/js/model/storage'); //TODO: clean up this circular dependency
+                storage.amazonlogOut();
                 break;
             case 'ITP':
                 // ITP errors are how handled within the widget code

