--- a/Block/Adminhtml/Form/Field/IpnUrl.php
+++ b/Block/Adminhtml/Form/Field/IpnUrl.php
@@ -32,16 +32,21 @@ class IpnUrl extends BaseField
     {
         $stores = $this->_storeManager->getStores();
         $valueReturn = '';
+        $urlArray = [];
 
-        if ($store = reset($stores))
-        {
+        foreach ($stores as $store) {
             $baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);
             if ($baseUrl) {
-                $value       = $baseUrl . 'amazonpayments/payment/ipn/';
-                $valueReturn = "<div>".$this->escapeHtml($value)."</div>";
+                $value      = $baseUrl . 'amazonpayments/payment/ipn/';
+                $urlArray[] = "<div>".$this->escapeHtml($value)."</div>";
             }
         }
 
+        $urlArray = array_unique($urlArray);
+        foreach ($urlArray as $uniqueUrl) {
+            $valueReturn .= "<div>".$uniqueUrl."</div>";
+        }
+
         return '<td class="value">' . $valueReturn . '</td>';
     }
 

--- a/Block/Config.php
+++ b/Block/Config.php
@@ -23,6 +23,9 @@ use Magento\Framework\View\Element\Template\Context;
 
 /**
  * Config
+ *
+ * @api
+ *
  * Provides a block that displays links to available custom error logs in Amazon Pay admin/config section.
  */
 class Config extends Template

--- a/Controller/Adminhtml/Simplepath/Poll.php
+++ b/Controller/Adminhtml/Simplepath/Poll.php
@@ -17,8 +17,6 @@ namespace Amazon\Core\Controller\Adminhtml\Simplepath;
 
 use Magento\Backend\App\Action\Context;
 use Magento\Backend\Controller\Adminhtml\System;
-use Magento\Framework\App\ObjectManager;
-use Amazon\Core\Logger\ExceptionLogger;
 
 class Poll extends System
 {
@@ -38,23 +36,16 @@ class Poll extends System
      */
     private $jsonResultFactory;
 
-    /**
-     * @var \Amazon\Core\Logger\ExceptionLogger
-     */
-    private $exceptionLogger;
-
     public function __construct(
         Context $context,
         \Amazon\Core\Model\Config\SimplePath $simplePath,
         \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig,
-        \Magento\Framework\Controller\Result\JsonFactory $jsonResultFactory,
-        \Amazon\Core\Logger\ExceptionLogger $exceptionLogger = null
+        \Magento\Framework\Controller\Result\JsonFactory $jsonResultFactory
     ) {
         parent::__construct($context);
         $this->simplePath = $simplePath;
         $this->scopeConfig = $scopeConfig;
         $this->jsonResultFactory = $jsonResultFactory;
-        $this->exceptionLogger = $exceptionLogger ?: ObjectManager::getInstance()->get(ExceptionLogger::class);
     }
 
     /**
@@ -62,24 +53,19 @@ class Poll extends System
      */
     public function execute()
     {
-        try {
-            // Keypair is destroyed when credentials are saved
-            $shouldRefresh = !($this->scopeConfig->getValue(
-                \Amazon\Core\Model\Config\SimplePath::CONFIG_XML_PATH_PUBLIC_KEY,
-                'default',
-                0
-            ));
+        // Keypair is destroyed when credentials are saved
+        $shouldRefresh = !($this->scopeConfig->getValue(
+            \Amazon\Core\Model\Config\SimplePath::CONFIG_XML_PATH_PUBLIC_KEY,
+            'default',
+            0
+        ));
 
-            if ($shouldRefresh) {
-                $this->simplePath->autoEnable();
-            }
-
-            $result = $this->jsonResultFactory->create();
-            $result->setData((int)$shouldRefresh);
-            return $result;
-        } catch(\Exception $e) {
-            $this->exceptionLogger->logException($e);
-            throw $e;
+        if ($shouldRefresh) {
+            $this->simplePath->autoEnable();
         }
+
+        $result = $this->jsonResultFactory->create();
+        $result->setData((int)$shouldRefresh);
+        return $result;
     }
 }

--- a/Controller/Simplepath/Listener.php
+++ b/Controller/Simplepath/Listener.php
@@ -16,9 +16,6 @@
 
 namespace Amazon\Core\Controller\Simplepath;
 
-use Amazon\Core\Logger\ExceptionLogger;
-use Magento\Framework\App\ObjectManager;
-
 /**
  * Class Listener
  * Retrieves entered keys from Amazon Pay popup
@@ -32,28 +29,23 @@ class Listener extends \Magento\Framework\App\Action\Action
     // @var \Amazon\Core\Model\Config\SimplePath
     private $simplepath;
 
-    // @var \Amazon\Core\Logger\ExceptionLogger
-    private $exceptionLogger;
-
     /**
      * Listener constructor.
      * @param \Magento\Framework\App\Action\Context $context
      * @param \Magento\Framework\Controller\Result\JsonFactory $jsonResultFactory
      * @param \Amazon\Core\Model\Config\SimplePath $simplepath
      * @param \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig
-     * @param \Amazon\Core\Logger\ExceptionLogger $exceptionLogger
      */
     public function __construct(
         \Magento\Framework\App\Action\Context $context,
         \Magento\Framework\Controller\Result\JsonFactory $jsonResultFactory,
         \Amazon\Core\Model\Config\SimplePath $simplepath,
-        \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig,
-        ExceptionLogger $exceptionLogger = null
-    ) {
+        \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig
+    )
+    {
         $this->simplepath = $simplepath;
         $this->jsonResultFactory = $jsonResultFactory;
         $this->scopeConfig = $scopeConfig;
-        $this->exceptionLogger = $exceptionLogger ?: ObjectManager::getInstance()->get(ExceptionLogger::class);
         parent::__construct($context);
     }
 
@@ -62,48 +54,41 @@ class Listener extends \Magento\Framework\App\Action\Action
      */
     public function execute()
     {
-        try {
-            $host = parse_url($this->getRequest()->getHeader('Origin'))['host'];
-            if(in_array($host, $this->simplepath->getListenerOrigins())) {
-                $this->getResponse()->setHeader('Access-Control-Allow-Origin', 'https://' . $host);
-            }
-            $this->getResponse()->setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
-            $this->getResponse()->setHeader('Access-Control-Allow-Headers', 'Content-Type, X-CSRF-Token');
-            $this->getResponse()->setHeader('Vary', 'Origin');
+        $url = parse_url($this->simplepath->getEndpointRegister());
+        $host = trim(preg_replace("/\r|\n/", "", $url['host']));
+        $this->getResponse()->setHeader('Access-Control-Allow-Origin', 'https://' . $host);
+        $this->getResponse()->setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
+        $this->getResponse()->setHeader('Access-Control-Allow-Headers', 'Content-Type, X-CSRF-Token');
 
-            $payload = $this->_request->getParam('payload');
+        $payload = $this->_request->getParam('payload');
 
-            $result = $this->jsonResultFactory->create();
+        $result = $this->jsonResultFactory->create();
 
-            $return = ['result' => 'error', 'message' => 'Empty payload'];
+        $return = ['result' => 'error', 'message' => 'Empty payload'];
 
-            try {
-                if (strpos($payload, 'encryptedKey') === false) {
-                    $return = ['result' => 'error', 'message' => 'Invalid payload: ' . $payload];
-                } else if ($payload) {
-                    $json = $this->simplepath->decryptPayload($payload, false);
+        try {
+            if (strpos($payload, 'encryptedKey') === false) {
+                $return = ['result' => 'error', 'message' => 'Invalid payload: ' . $payload];
+            } else if ($payload) {
+                $json = $this->simplepath->decryptPayload($payload, false);
 
-                    if ($json) {
-                        $return = ['result' => 'success'];
-                    }
-                } else {
-                    $return = ['result' => 'error', 'message' => 'payload parameter not found.'];
+                if ($json) {
+                    $return = ['result' => 'success'];
                 }
-            } catch (\Exception $e) {
-                $return = ['result' => 'error', 'message' => $e->getMessage()];
+            } else {
+                $return = ['result' => 'error', 'message' => 'payload parameter not found.'];
             }
+        } catch (\Exception $e) {
+            $return = ['result' => 'error', 'message' => $e->getMessage()];
+        }
 
-            if ($this->_request->isPost() && (empty($return['result']) || $return['result'] == 'error')) {
-                $result->setHttpResponseCode(\Magento\Framework\Webapi\Exception::HTTP_BAD_REQUEST);
-            }
+        if ($this->_request->isPost() && (empty($return['result']) || $return['result'] == 'error')) {
+            $result->setHttpResponseCode(\Magento\Framework\Webapi\Exception::HTTP_BAD_REQUEST);
+        }
 
-            $result->setData($return);
+        $result->setData($return);
 
-            return $result;
-        } catch(\Exception $e) {
-            $this->exceptionLogger->logException($e);
-            throw $e;
-        }
+        return $result;
     }
 
     /**

--- a/Domain/AmazonAddressDecoratorDe.php
+++ b/Domain/AmazonAddressDecoratorDe.php
@@ -178,6 +178,6 @@ class AmazonAddressDecoratorDe implements AmazonAddressInterface
      */
     public function getLine($lineNumber)
     {
-        return $this->amazonAddress->getLine($lineNumber);
+        $this->amazonAddress->getLine($lineNumber);
     }
 }

--- a/Domain/AmazonAddressDecoratorJp.php
+++ b/Domain/AmazonAddressDecoratorJp.php
@@ -37,13 +37,20 @@ class AmazonAddressDecoratorJp implements AmazonAddressInterface
      */
     public function getLines()
     {
-        $city = $this->amazonAddress->getCity();
+        $line1 = (string) $this->amazonAddress->getLine(1);
+        $line2 = (string) $this->amazonAddress->getLine(2);
+        $line3 = (string) $this->amazonAddress->getLine(3);
+        $city = (string) $this->amazonAddress->getCity();
 
-        /*
-         * AmazonAddressDecoratorJp->getCity() returns address line 1 when city is empty.
-         * Omit line 1 from the street address in this case.
-         */
-        return array_slice($this->amazonAddress->getLines(), empty($city) ? 1 : 0);
+        $lines = [];
+        if (empty($city)) {
+            $lines[] = trim($line1 . ' ' . $line2);
+        } else {
+            $lines[] = $line2;
+        }
+        $lines[] = $line3;
+
+        return $lines;
     }
 
     /**
@@ -115,10 +122,6 @@ class AmazonAddressDecoratorJp implements AmazonAddressInterface
      */
     public function getLine($lineNumber)
     {
-        $lines = $this->getLines();
-        if (isset($lines[$lineNumber-1])) {
-            return $lines[$lineNumber-1];
-        }
-        return null;
+        $this->amazonAddress->getLine($lineNumber);
     }
 }

--- a/Domain/AmazonAddressFactory.php
+++ b/Domain/AmazonAddressFactory.php
@@ -23,6 +23,10 @@ use Magento\Framework\Escaper;
 
 class AmazonAddressFactory
 {
+    /**
+     * @var Escaper
+     */
+    private $escaper;
 
     /**
      * @var ObjectManagerInterface
@@ -44,6 +48,7 @@ class AmazonAddressFactory
      *
      * @param ObjectManagerInterface $objectManager
      * @param AmazonNameFactory $amazonNameFactory
+     * @param Escaper $escaper
      * @param array $addressDecoratorPool Per-country custom decorators of incoming address data.
      *                                         The key as an "ISO 3166-1 alpha-2" country code and
      *                                         the value as an FQCN of a child of AmazonAddress.
@@ -51,10 +56,12 @@ class AmazonAddressFactory
     public function __construct(
         ObjectManagerInterface $objectManager,
         AmazonNameFactory $amazonNameFactory,
+        Escaper $escaper,
         array $addressDecoratorPool = []
     ) {
         $this->objectManager = $objectManager;
         $this->amazonNameFactory = $amazonNameFactory;
+        $this->escaper = $escaper;
         $this->addressDecoratorPool = $addressDecoratorPool;
     }
 
@@ -69,24 +76,21 @@ class AmazonAddressFactory
         $address = $responseData['address'];
         $amazonName = $this->amazonNameFactory->create(
             [
-                'name' => $address['Name'],
-                'country' => $address['CountryCode']]
+                'name' => $this->escaper->escapeHtml($address['Name']),
+                'country' => $this->escaper->escapeHtml($address['CountryCode'])]
         );
 
         $data = [
-            AmazonAddressInterface::POSTAL_CODE => isset($address['PostalCode']) ? $address['PostalCode'] : '',
-            AmazonAddressInterface::COUNTRY_CODE => $address['CountryCode'],
-            AmazonAddressInterface::TELEPHONE => isset($address['Phone']) ? $address['Phone'] : '',
-            AmazonAddressInterface::STATE_OR_REGION => isset($address['StateOrRegion']) ? $address['StateOrRegion'] : '',
-            AmazonAddressInterface::FIRST_NAME => $amazonName->getFirstName(),
-            AmazonAddressInterface::LAST_NAME => $amazonName->getLastName(),
+            AmazonAddressInterface::CITY => isset($address['City']) ? $this->escaper->escapeHtml($address['City']) : '',
+            AmazonAddressInterface::POSTAL_CODE => isset($address['PostalCode']) ? $this->escaper->escapeHtml($address['PostalCode']) : '',
+            AmazonAddressInterface::COUNTRY_CODE => $this->escaper->escapeHtml($address['CountryCode']),
+            AmazonAddressInterface::TELEPHONE => isset($address['Phone']) ? $this->escaper->escapeHtml($address['Phone']) : '',
+            AmazonAddressInterface::STATE_OR_REGION => isset($address['StateOrRegion']) ? $this->escaper->escapeHtml($address['StateOrRegion']) : '',
+            AmazonAddressInterface::FIRST_NAME => $this->escaper->escapeHtml($amazonName->getFirstName()),
+            AmazonAddressInterface::LAST_NAME => $this->escaper->escapeHtml($amazonName->getLastName()),
             AmazonAddressInterface::LINES => $this->getLines($address)
         ];
 
-        if (isset($address['City'])) {
-            $data[AmazonAddressInterface::CITY] = $address['City'];
-        }
-
         $amazonAddress = $this->objectManager->create(AmazonAddress::class, ['data' => $data]);
 
         $countryCode = strtoupper($address['CountryCode']);
@@ -124,7 +128,7 @@ class AmazonAddressFactory
         $lines = [];
         for ($i = 1; $i <= 3; $i++) {
             if (isset($responseData['AddressLine' . $i]) && $responseData['AddressLine' . $i]) {
-                $lines[$i] = $responseData['AddressLine' . $i];
+                $lines[$i] = $this->escaper->escapeHtml($responseData['AddressLine' . $i]);
             }
         }
 

--- a/Exception/AmazonServiceUnavailableException.php
+++ b/Exception/AmazonServiceUnavailableException.php
@@ -15,9 +15,9 @@
  */
 namespace Amazon\Core\Exception;
 
-use Magento\Framework\Exception\LocalizedException;
+use Magento\Framework\Exception\RemoteServiceUnavailableException;
 
-class AmazonServiceUnavailableException extends LocalizedException
+class AmazonServiceUnavailableException extends RemoteServiceUnavailableException
 {
     const ERROR_MESSAGE = 'Amazon could not process your request.';
 

--- a/Helper/Data.php
+++ b/Helper/Data.php
@@ -23,8 +23,6 @@ use Magento\Store\Model\ScopeInterface;
 use Magento\Store\Model\StoreManagerInterface;
 use Magento\Framework\Module\ModuleListInterface;
 use Magento\Framework\Module\StatusFactory;
-use Magento\Framework\App\Cache\TypeListInterface;
-use Magento\Framework\App\ObjectManager;
 
 /**
  * @SuppressWarnings(PHPMD.ExcessivePublicCount)
@@ -59,11 +57,6 @@ class Data extends AbstractHelper
      */
     private $moduleStatusFactory;
 
-    /**
-     * @var TypeListInterface
-     */
-    private $cacheTypeList;
-
     /**
      * Data constructor.
      *
@@ -73,7 +66,6 @@ class Data extends AbstractHelper
      * @param StoreManagerInterface $storeManager
      * @param ClientIp $clientIpHelper
      * @param StatusFactory $moduleStatusFactory
-     * @param TypeListInterface $cacheTypeList
      */
     public function __construct(
         ModuleListInterface $moduleList,
@@ -81,8 +73,7 @@ class Data extends AbstractHelper
         EncryptorInterface $encryptor,
         StoreManagerInterface $storeManager,
         ClientIp $clientIpHelper,
-        StatusFactory $moduleStatusFactory,
-        TypeListInterface $cacheTypeList = null
+        StatusFactory $moduleStatusFactory
     )
     {
         parent::__construct($context);
@@ -91,7 +82,6 @@ class Data extends AbstractHelper
         $this->storeManager = $storeManager;
         $this->clientIpHelper = $clientIpHelper;
         $this->moduleStatusFactory = $moduleStatusFactory;
-        $this->cacheTypeList = $cacheTypeList ?: ObjectManager::getInstance()->get(TypeListInterface::class);
     }
 
     /*
@@ -787,7 +777,6 @@ class Data extends AbstractHelper
         // Make sure all of them are disabled if any one of them is disabled.
         if ($isDisabled > 0 && $isDisabled != 3) {
             $this->moduleStatusFactory->create()->setIsEnabled(false, ['Amazon_Payment', 'Amazon_Login', 'Amazon_Core']);
-            $this->cacheTypeList->cleanType('config');
         }
     }
 }

--- a/LICENSE
+++ /dev/null
@@ -1,202 +0,0 @@
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "{}"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright {yyyy} {name of copyright owner}
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-

--- a/Logger/ExceptionLogger.php
+++ /dev/null
@@ -1,31 +0,0 @@
-<?php
-/**
- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License").
- * You may not use this file except in compliance with the License.
- * A copy of the License is located at
- *
- *  http://aws.amazon.com/apache2.0
- *
- * or in the "license" file accompanying this file. This file is distributed
- * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
- * express or implied. See the License for the specific language governing
- * permissions and limitations under the License.
- */
-namespace Amazon\Core\Logger;
-
-use Psr\Log\LoggerInterface;
-
-class ExceptionLogger
-{
-    private $logger;
-
-    public function __construct(LoggerInterface $logger) {
-        $this->logger = $logger;
-    }
-    public function logException(\Exception $e) {
-        $message = (string) $e;
-        $this->logger->addError($message);
-    }
-}

--- a/Model/Config/SimplePath.php
+++ b/Model/Config/SimplePath.php
@@ -166,19 +166,6 @@ class SimplePath
         return $this->getEndpointDomain() . 'register/getpublickey';
     }
 
-    /**
-     * Return listener origins
-     */
-    public function getListenerOrigins()
-    {
-        return [
-            'payments.amazon.com',
-            'payments-eu.amazon.com',
-            'sellercentral.amazon.com',
-            'sellercentral-europe.amazon.com'
-        ];
-    }
-
     /**
      * Generate and save RSA keys
      */

--- a/Model/EnvironmentChecker.php
+++ /dev/null
@@ -1,66 +0,0 @@
-<?php
-/**
- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License").
- * You may not use this file except in compliance with the License.
- * A copy of the License is located at
- *
- *  http://aws.amazon.com/apache2.0
- *
- * or in the "license" file accompanying this file. This file is distributed
- * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
- * express or implied. See the License for the specific language governing
- * permissions and limitations under the License.
- */
-namespace Amazon\Core\Model;
-
-use Amazon\Core\Helper\Data;
-use Magento\Framework\App\Config\ScopeConfigInterface;
-use Magento\Framework\App\State;
-
-class EnvironmentChecker
-{
-    /**
-     * @var ScopeConfigInterface
-     */
-    private $config;
-
-    /**
-     * @var Data
-     */
-    private $coreHelper;
-
-    /**
-     * @var State
-     */
-    private $state;
-
-    /**
-     * EnvironmentChecker constructor.
-     *
-     * @param ScopeConfigInterface $config
-     * @param Data                 $coreHelper
-     * @param State                $state
-     */
-    public function __construct(ScopeConfigInterface $config, Data $coreHelper, State $state)
-    {
-        $this->config     = $config;
-        $this->coreHelper = $coreHelper;
-        $this->state      = $state;
-    }
-
-    /**
-     * Check if behat is running
-     *
-     * @return bool
-     */
-    public function isTestMode()
-    {
-        return (
-            '1' === $this->config->getValue('is_behat_running')
-            && $this->coreHelper->isSandboxEnabled()
-            && State::MODE_PRODUCTION !== $this->state->getMode()
-        );
-    }
-}

--- a/Observer/PaymentConfigSaveAfter.php
+++ b/Observer/PaymentConfigSaveAfter.php
@@ -60,6 +60,11 @@ class PaymentConfigSaveAfter implements ObserverInterface
      */
     private $request;
 
+    /**
+     * @var WriterInterface
+     */
+    private $configWriter;
+
     /**
      * PaymentConfigSaveAfter constructor.
      *
@@ -69,6 +74,7 @@ class PaymentConfigSaveAfter implements ObserverInterface
      * @param Data $amazonCoreHelper
      * @param ReinitableConfigInterface $config
      * @param RequestInterface $request
+     * @param WriterInterface $configWriter
      */
     public function __construct(
         ApiCredentialsValidatorFactory $apiCredentialsValidatorFactory,
@@ -76,7 +82,8 @@ class PaymentConfigSaveAfter implements ObserverInterface
         Json $jsonCredentials,
         Data $amazonCoreHelper,
         ReinitableConfigInterface $config,
-        RequestInterface $request
+        RequestInterface $request,
+        WriterInterface $configWriter
     ) {
         $this->apiCredentialsValidatorFactory = $apiCredentialsValidatorFactory;
         $this->messageManager                 = $messageManager;
@@ -84,6 +91,7 @@ class PaymentConfigSaveAfter implements ObserverInterface
         $this->jsonCredentials                = $jsonCredentials;
         $this->appConfig                      = $config;
         $this->request                        = $request;
+        $this->configWriter                   = $configWriter;
     }
 
     /**
@@ -91,6 +99,9 @@ class PaymentConfigSaveAfter implements ObserverInterface
      */
     public function execute(Observer $observer)
     {
+        // Make sure address captures 3 lines to be compatible with AP
+        $this->configWriter->save('customer/address/street_lines', 3);
+
         if (!$this->request->getParam('amazon_test_creds')) {
             return;
         }

--- a/Setup/UpgradeSchema.php
+++ /dev/null
@@ -1,47 +0,0 @@
-<?php
-/**
- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License").
- * You may not use this file except in compliance with the License.
- * A copy of the License is located at
- *
- *  http://aws.amazon.com/apache2.0
- *
- * or in the "license" file accompanying this file. This file is distributed
- * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
- * express or implied. See the License for the specific language governing
- * permissions and limitations under the License.
- */
-namespace Amazon\Core\Setup;
-
-use Magento\Framework\Setup\ModuleContextInterface;
-use Magento\Framework\Setup\SchemaSetupInterface;
-use Magento\Framework\Setup\UpgradeSchemaInterface;
-
-class UpgradeSchema implements UpgradeSchemaInterface
-{
-
-    public function upgrade(SchemaSetupInterface $setup, ModuleContextInterface $context)
-    {
-        $setup->startSetup();
-
-        if (version_compare($context->getVersion(), '1.0.0', '<=')) {
-            $setup->getConnection()->addColumn(
-                $setup->getTable('quote_item'),
-                'is_excluded_product',
-                [
-                    'type' => \Magento\Framework\DB\Ddl\Table::TYPE_SMALLINT,
-                    'visible' => false,
-                    'required' => false,
-                    'default' => 0,
-                    'nullable' => false,
-                    'unsigned' => true,
-                    'comment' => 'Flags whether or not product is excluded from Amazon Pay'
-                ]
-            );
-        }
-
-        $setup->endSetup();
-    }
-}

--- a/composer.json
+++ b/composer.json
@@ -2,13 +2,14 @@
   "name": "amzn/amazon-pay-and-login-with-amazon-core-module",
   "description": "Shared functionality for Amazon Pay and Login with Amazon modules",
   "type": "magento2-module",
-  "version": "2.2.15",
+  "version": "3.0.0",
   "license": [
     "Apache-2.0"
   ],
   "require": {
-    "php": "~7.0.13|~7.1.0|~7.2.0",
+    "php": "~7.1.3||~7.2.0",
     "magento/framework": "*",
+    "magento/module-sales": "*",
     "magento/module-config": "*",
     "magento/module-store": "*",
     "magento/module-developer": "*",

--- a/etc/adminhtml/routes.xml
+++ b/etc/adminhtml/routes.xml
@@ -1,4 +1,20 @@
 <?xml version="1.0"?>
+<!--
+/**
+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+-->
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:App/etc/routes.xsd">
     <router id="admin">
         <route id="amazonlogs" frontName="amazonlogs">
@@ -8,4 +24,4 @@
             <module name="Amazon_Core" />
         </route>
     </router>
-</config>
\ No newline at end of file
+</config>

--- a/etc/adminhtml/system.xml
+++ b/etc/adminhtml/system.xml
@@ -1,4 +1,20 @@
 <?xml version="1.0"?>
+<!--
+/**
+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+-->
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Config:etc/system_file.xsd">
     <system>
         <section id="payment">
@@ -114,17 +130,17 @@
                             <config_path>payment/amazon_payment/button_size</config_path>
                         </field>
                         <field id="pwa_pp_button_is_visible" translate="label" type="select" sortOrder="70" showInDefault="1" showInWebsite="1" showInStore="1">
-                            <label>Amazon Pay button on Product Page</label>
+                            <label>Show Amazon Pay button on product page</label>
                             <source_model>Magento\Config\Model\Config\Source\Yesno</source_model>
                             <config_path>payment/amazon_payment/pwa_pp_button_is_visible</config_path>
                         </field>
                         <field id="minicart_button_is_visible" translate="label comment" type="select" sortOrder="80" showInDefault="1" showInWebsite="1" showInStore="1">
-                            <label>Amazon Pay button in minicart</label>
+                            <label>Show Amazon Pay button in minicart</label>
                             <source_model>Magento\Config\Model\Config\Source\Yesno</source_model>
                             <config_path>payment/amazon_payment/minicart_button_is_visible</config_path>
                         </field>
                         <field id="amazonloggin" translate="label comment" type="select" sortOrder="80" showInDefault="1" showInWebsite="1" showInStore="1">
-                            <label>Display Amazon Pay Method</label>
+                            <label>Show Amazon Pay in payment methods</label>
                             <comment><![CDATA[If enabled, Amazon Pay is presented as an option in the list of available payment methods during the final step of checkout.]]></comment>
                             <source_model>Magento\Config\Model\Config\Source\Yesno</source_model>
                             <config_path>payment/amazonlogin/active</config_path>
@@ -163,4 +179,4 @@
             </group>
         </section>
     </system>
-</config>
\ No newline at end of file
+</config>

--- a/etc/config.xml
+++ b/etc/config.xml
@@ -1,3 +1,20 @@
+<?xml version="1.0"?>
+<!--
+/**
+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+-->
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Store:etc/config.xsd">
     <default>
         <region>
@@ -33,10 +50,5 @@
                 <jp>https://static-fe.payments-amazon.com/OffAmazonPayments/jp/sandbox/lpa/js/Widgets.js?nomin</jp>
             </sandbox>
         </widget>
-        <customer>
-            <address>
-                <street_lines>3</street_lines>
-            </address>
-        </customer>
     </default>
 </config>

--- /dev/null
+++ b/etc/db_schema.xml
@@ -0,0 +1,46 @@
+<?xml version="1.0"?>
+<!--
+/**
+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+-->
+<schema xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+        xsi:noNamespaceSchemaLocation="urn:magento:framework:Setup/Declaration/Schema/etc/schema.xsd">
+    <table name="amazon_quote" resource="checkout" engine="innodb" comment="amazon_quote">
+        <column xsi:type="int" name="entity_id" padding="10" unsigned="true" nullable="false" identity="true" comment="Entity ID"/>
+        <column xsi:type="int" name="quote_id" padding="10" unsigned="true" nullable="false" identity="false" comment="Quote ID"/>
+        <column xsi:type="varchar" name="amazon_order_reference_id" nullable="false" length="255" comment="Amazon Order Reference ID"/>
+        <column xsi:type="varchar" name="sandbox_simulation_reference" nullable="true" length="255" comment="Sandbox simulation reference"/>
+        <column xsi:type="smallint" name="confirmed" padding="5" unsigned="true" nullable="false" identity="false" default="0" comment="Quote confirmed with Amazon"/>
+        <constraint xsi:type="primary" referenceId="PRIMARY">
+            <column name="entity_id"/>
+        </constraint>
+        <constraint xsi:type="foreign" referenceId="AMAZON_QUOTE_QUOTE_ID_QUOTE_ENTITY_ID" table="amazon_quote" column="quote_id" referenceTable="quote" referenceColumn="entity_id" onDelete="CASCADE"/>
+        <constraint xsi:type="unique" referenceId="AMAZON_QUOTE_QUOTE_ID">
+            <column name="quote_id"/>
+        </constraint>
+    </table>
+    <table name="amazon_sales_order" resource="sales" engine="innodb" comment="amazon_sales_order">
+        <column xsi:type="int" name="entity_id" padding="10" unsigned="true" nullable="false" identity="true" comment="Entity ID"/>
+        <column xsi:type="int" name="order_id" padding="10" unsigned="true" nullable="false" identity="false" comment="Order ID"/>
+        <column xsi:type="varchar" name="amazon_order_reference_id" nullable="false" length="255" comment="Amazon Order Reference ID"/>
+        <constraint xsi:type="primary" referenceId="PRIMARY">
+            <column name="entity_id"/>
+        </constraint>
+        <constraint xsi:type="foreign" referenceId="AMAZON_SALES_ORDER_ORDER_ID_SALES_ORDER_ENTITY_ID" table="amazon_sales_order" column="order_id" referenceTable="sales_order" referenceColumn="entity_id" onDelete="CASCADE"/>
+        <constraint xsi:type="unique" referenceId="AMAZON_SALES_ORDER_ORDER_ID">
+            <column name="order_id"/>
+        </constraint>
+    </table>
+</schema>

--- a/etc/db_schema_whitelist.json
+++ b/etc/db_schema_whitelist.json
@@ -7,12 +7,10 @@
             "sandbox_simulation_reference": true,
             "confirmed": true
         },
-        "index": {
-            "AMAZON_QUOTE_QUOTE_ID": true
-        },
         "constraint": {
             "PRIMARY": true,
-            "AMAZON_QUOTE_QUOTE_ID_QUOTE_ENTITY_ID": true
+            "AMAZON_QUOTE_QUOTE_ID_QUOTE_ENTITY_ID": true,
+            "AMAZON_QUOTE_QUOTE_ID": true
         }
     },
     "amazon_sales_order": {
@@ -21,12 +19,10 @@
             "order_id": true,
             "amazon_order_reference_id": true
         },
-        "index": {
-            "AMAZON_SALES_ORDER_ORDER_ID": true
-        },
         "constraint": {
             "PRIMARY": true,
-            "AMAZON_SALES_ORDER_ORDER_ID_SALES_ORDER_ENTITY_ID": true
+            "AMAZON_SALES_ORDER_ORDER_ID_SALES_ORDER_ENTITY_ID": true,
+            "AMAZON_SALES_ORDER_ORDER_ID": true
         }
     }
-}
+}
\ No newline at end of file

--- a/etc/di.xml
+++ b/etc/di.xml
@@ -1,10 +1,25 @@
 <?xml version="1.0"?>
+<!--
+/**
+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+-->
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
     <preference for="Amazon\Core\Client\ClientFactoryInterface" type="Amazon\Core\Client\ClientFactory" />
     <preference for="Amazon\Core\Api\Data\AmazonNameInterface" type="Amazon\Core\Domain\AmazonName" />
     <preference for="Amazon\Core\Api\Data\AmazonCustomerInterface" type="Amazon\Core\Domain\AmazonCustomer" />
     <preference for="Amazon\Core\Api\Data\AmazonAddressInterface" type="Amazon\Core\Domain\AmazonAddress" />
-
     <preference for="AmazonPay\ClientInterface" type="Amazon\Core\Client\Client" />
     <type name="Amazon\Core\Client\Client">
         <arguments>

--- a/etc/events.xml
+++ b/etc/events.xml
@@ -1,4 +1,20 @@
 <?xml version="1.0"?>
+<!--
+/**
+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+-->
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Event/etc/events.xsd">
     <event name="admin_system_config_changed_section_payment">
         <observer name="amazon_core_save_payment_config_after" instance="Amazon\Core\Observer\PaymentConfigSaveAfter" />

--- a/etc/frontend/routes.xml
+++ b/etc/frontend/routes.xml
@@ -1,8 +1,24 @@
 <?xml version="1.0"?>
+<!--
+/**
+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+-->
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:App/etc/routes.xsd">
     <router id="standard">
         <route id="amazon_core" frontName="amazon_core">
             <module name="Amazon_Core" />
         </route>
     </router>
-</config>
\ No newline at end of file
+</config>

--- a/etc/module.xml
+++ b/etc/module.xml
@@ -1,6 +1,22 @@
 <?xml version="1.0"?>
+<!--
+/**
+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+-->
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
-    <module name="Amazon_Core" setup_version="2.2.15">
+    <module name="Amazon_Core" setup_version="3.0.0">
         <sequence>
             <module name="Magento_Store"/>
             <module name="Magento_Customer"/>

--- a/etc/validation.xml
+++ b/etc/validation.xml
@@ -1,4 +1,20 @@
-<?xml version="1.0" encoding="UTF-8"?>
+<?xml version="1.0"?>
+<!--
+/**
+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+-->
 <validation xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Validator/etc/validation.xsd">
     <entity name="amazon_address">
         <rules>

--- a/view/adminhtml/templates/system/config/logs.phtml
+++ b/view/adminhtml/templates/system/config/logs.phtml
@@ -16,4 +16,4 @@
  */
 
 ?>
-<div id="amazon-payment-log-list"><?php echo $block->getLinks(); ?></div>
\ No newline at end of file
+<div id="amazon-payment-log-list"><?php echo /* @noEscape */ $block->getLinks(); ?></div>
\ No newline at end of file

--- a/view/adminhtml/templates/system/config/simplepath_admin.phtml
+++ b/view/adminhtml/templates/system/config/simplepath_admin.phtml
@@ -17,7 +17,7 @@
 -->
 <br/>
 <div data-mage-init='{
-        "Amazon_Core/js/simplepath": <?php echo $block->escapeHtml($block->getJsonConfig()) ?> }'
+        "Amazon_Core/js/simplepath": <?php echo /* @noEscape */ $block->getJsonConfig() ?> }'
     id="amazon_simplepath">
 
     <?php if (!$block->getCurrency()) : // SimplePath not supported ?>

--- a/view/adminhtml/web/js/simplepath.js
+++ b/view/adminhtml/web/js/simplepath.js
@@ -45,6 +45,7 @@ define(
                  */
                 initObservable: function () {
                     var self = this;
+
                     self.$amazonSimplepath = $('#amazon_simplepath');
                     self.$amazonFields = $('#payment_' + self.getCountry() + '_' + self.selector + ' .form-list');
                     self.$amazonCredentialsHeader = $('#payment_' + self.getCountry() + '_' + self.selector
@@ -79,6 +80,7 @@ define(
                  */
                 initEventHandlers: function () {
                     var self = this;
+
                     self.$amazonSpBack.click(function () {
                         self.showAmazonConfig();
                         return false;
@@ -93,20 +95,20 @@ define(
                         self.setupWindowLaunch();
                     });
 
-                    self.$amazonCredentialJson.on('input', function (e) {
+                    self.$amazonCredentialJson.on('input', function () {
                         self.updateCredentials(self);
                     });
                 },
 
                 /**
-                 * Detects when a properly formatted JSON block is pasted into the Credentials JSON field and auto populates
-                 * specified fields.
+                 * Detects when a properly formatted JSON block is pasted into the Credentials JSON field
+                 * and auto populates specified fields.
                  *
                  * @param self
                  */
                 updateCredentials: function (self) {
-                    var elJson = self.$amazonCredentialJson.val();
-                    var obj = null;
+                    var elJson = self.$amazonCredentialJson.val(), obj = null, success = true, item = null;
+
                     try {
                         obj = $.parseJSON($.trim(elJson));
                     }
@@ -119,15 +121,19 @@ define(
                     }
 
                     if (obj && typeof obj === 'object') {
-                        var success = true;
+
                         for (var prop in obj) {
-                            var item = $('#payment_' + self.getCountry() + '_amazon_payment_credentials_' + $.trim(prop));
-                            if (item && item.length) {
-                                $('#payment_' + self.getCountry() + '_amazon_payment_credentials_'
-                                    + $.trim(prop)).val($.trim(obj[prop]));
-                            }
-                            else {
-                                success = false;
+                            if (obj.hasOwnProperty(prop)) {
+                                item = $('#payment_' + self.getCountry() + '_amazon_payment_credentials_'
+                                    + $.trim(prop));
+
+                                if (item && item.length) {
+                                    $('#payment_' + self.getCountry() + '_amazon_payment_credentials_'
+                                        + $.trim(prop)).val($.trim(obj[prop]));
+                                }
+                                else {
+                                    success = false;
+                                }
                             }
                         }
 
@@ -141,7 +147,8 @@ define(
                         else {
                             self.$amazonCredentialJson.val('').attr(
                                 'placeholder',
-                                $t('One or more of your credential fields did not parse correctly. Please review your entry and try again.')
+                                $t('One or more of your credential fields did not parse correctly. ' +
+                                    'Please review your entry and try again.')
                             ).focus();
                         }
                     }
@@ -151,12 +158,19 @@ define(
                  * Sets up Amazon merchant key popup and polls for data update upon user completion.
                  */
                 setupWindowLaunch: function () {
-                    var self = this;
-                    var heights = [660, 720, 810, 900];
-                    var popupWidth = this.getCountry() !== 'us' ? 768 : 1050;
-                    var popupHeight = heights[0];
+                    var self = this,
+                        heights = [660, 720, 810, 900],
+                        popupWidth = this.getCountry() !== 'us' ? 768 : 1050, popupHeight = heights[0],
+                        region = self.region,
+                        elCheckDefault = $('#payment_' + self.getCountry()
+                            + '_amazon_payment_credentials_payment_region_inherit:checked'),
+                        elRegion = $('payment_' + self.getCountry() + '_amazon_payment_credentials_payment_region'),
+                        elJson = self.$amazonCredentialJson.val();
+
                     for (var i in heights) {
-                        popupHeight = (window.innerHeight >= heights[i]) ? heights[i] : popupHeight;
+                        if (heights.hasOwnProperty(i)) {
+                            popupHeight = window.innerHeight >= heights[i] ? heights[i] : popupHeight;
+                        }
                     }
 
                     self.launchPopup(self.amazonUrl, popupWidth, popupHeight);
@@ -171,6 +185,7 @@ define(
                     $('#save-json').click(function (e) {
                         e.stop();
                         var json = $('#json-import').value;
+
                         if (!json || !json.isJSON()) {
                             return;
                         }
@@ -179,16 +194,14 @@ define(
                     });
 
                     // Autoset payment region (for EU/UK)
-                    var region = self.region;
-                    if (self.region.indexOf('eu') != -1) {
+                    if (self.region.indexOf('eu') !== -1) {
                         region = 'de';
                     }
-                    var elCheckDefault = $('#payment_' + self.getCountry()
-                        + '_amazon_payment_credentials_payment_region_inherit:checked');
+
                     if (elCheckDefault && elCheckDefault.length) {
                         elCheckDefault[0].click();
                     }
-                    var elRegion = $('payment_' + self.getCountry() + '_amazon_payment_credentials_payment_region');
+
                     if (elRegion) {
                         elRegion.value = region;
                     }
@@ -231,6 +244,7 @@ define(
                  * Sets up dynamic form for capturing popup/form input for simple path setup.
                  */
                 generateSimplePathForm: function () {
+
                     this.$form = new Element('form', {
                         method: 'post',
                         action: this.amazonUrl,
@@ -243,26 +257,24 @@ define(
 
                     // Convert formParams JSON to hidden inputs
                     for (var key in this.formParams) {
-                        if (typeof this.formParams[key] === 'object' || typeof this.formParams[key] === 'array') {
+                        if ( $.isPlainObject(this.formParams[key]) || $.isArray(this.formParams[key])) {
                             for (var i in this.formParams[key]) {
                                 if (typeof this.formParams[key][i] !== 'function') {
-                                    var element = new Element('input', {
+                                    $(new Element('input', {
                                         type: 'hidden',
                                         name: key,
                                         value: this.formParams[key][i],
                                         novalidate: 'novalidate'
-                                    });
-                                    $(element).appendTo($("#simplepath_form"));
+                                    })).appendTo($("#simplepath_form"));
                                 }
                             }
                         } else {
-                            var element = new Element('input', {
+                            $(new Element('input', {
                                 type: 'hidden',
                                 name: key,
                                 novalidate: 'novalidate',
                                 value: this.formParams[key]
-                            });
-                            $(element).appendTo($("#simplepath_form"));
+                            })).appendTo($("#simplepath_form"));
                         }
                     }
 
@@ -307,11 +319,10 @@ define(
                  * @param requestedHeight
                  */
                 launchPopup: function (url, requestedWidth, requestedHeight) {
-                    var self = this;
                     var leftOffset = this.getLeftOffset(requestedWidth),
                         topOffset = this.getTopOffset(requestedHeight),
-                        newWindow = window.open(url, 'simplepath', 'scrollbars=yes, width=' + requestedWidth + ', height=' +
-                            requestedHeight + ', top=' + topOffset + ', left=' + leftOffset);
+                        newWindow = window.open(url, 'simplepath', 'scrollbars=yes, width=' + requestedWidth
+                            + ', height=' + requestedHeight + ', top=' + topOffset + ', left=' + leftOffset);
 
                     if (window.focus) {
                         newWindow.focus();
@@ -333,7 +344,8 @@ define(
                  */
                 getLeftOffset: function (requestedWidth) {
                     var dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : screen.left;
-                    return ((this.windowWidth() / 2) - (requestedWidth / 2)) + dualScreenLeft;
+
+                    return (this.windowWidth() / 2) - (requestedWidth / 2) + dualScreenLeft;
                 },
 
                 /**
@@ -343,7 +355,8 @@ define(
                  */
                 getTopOffset: function (requestedHeight) {
                     var dualScreenTop = window.screenTop !== undefined ? window.screenTop : screen.top;
-                    return ((this.windowHeight() / 2) - (requestedHeight / 2)) + dualScreenTop;
+
+                    return (this.windowHeight() / 2) - (requestedHeight / 2) + dualScreenTop;
                 },
 
                 /**
@@ -351,13 +364,9 @@ define(
                  * @returns {number}
                  */
                 windowWidth: function () {
-                    if (window.innerWidth) {
-                        return window.innerWidth;
-                    } else if (document.documentElement.clientWidth) {
-                        return document.documentElement.clientWidth;
-                    } else {
-                        return screen.width;
-                    }
+                    return window.innerWidth
+                        || document.documentElement.clientWidth
+                        || screen.width;
                 },
 
                 /**
@@ -365,13 +374,9 @@ define(
                  * @returns {number}
                  */
                 windowHeight: function () {
-                    if (window.innerHeight) {
-                        return window.innerHeight;
-                    } else if (document.documentElement.clientHeight) {
-                        return document.documentElement.clientHeight;
-                    } else {
-                        return screen.height;
-                    }
+                    return window.innerHeight
+                        || document.documentElement.clientHeight
+                        || screen.height;
                 }
             }
         );

