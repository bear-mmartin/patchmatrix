--- a/composer.json
+++ b/composer.json
@@ -2,13 +2,13 @@
   "name": "amzn/login-with-amazon-module",
   "description": "Login with Amazon module",
   "type": "magento2-module",
-  "version": "3.2.2",
+  "version": "3.2.9",
   "license": [
     "Apache-2.0"
   ],
   "require": {
     "php": "~7.1.3||~7.2.0",
-    "amzn/amazon-pay-and-login-with-amazon-core-module": "^3.2.2",
+    "amzn/amazon-pay-and-login-with-amazon-core-module": "^3.2.9",
     "magento/framework": "^102",
     "magento/module-customer": "^102",
     "magento/module-store": "^101",

--- a/etc/module.xml
+++ b/etc/module.xml
@@ -16,7 +16,7 @@
  */
 -->
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
-    <module name="Amazon_Login" setup_version="3.2.2">
+    <module name="Amazon_Login" setup_version="3.2.9">
         <sequence>
             <module name="Amazon_Core"/>
         </sequence>

--- a/view/frontend/templates/oAuthRedirect.phtml
+++ b/view/frontend/templates/oAuthRedirect.phtml
@@ -15,7 +15,13 @@
  */
 ?>
 <?php /** @var $block \Amazon\Login\Block\OAuthRedirect */ ?>
-<div><?= $block->escapeHtml(__('You will be redirected shortly...')); ?></div>
+<div>
+    <?= $block->escapeHtml(__('You will be redirected shortly...')); ?><br/>
+    <?= $block->escapeHtml(__(
+            'If you are not redirected automatically, try refreshing the page,'
+            . ' or return to your cart and use another payment method.'
+        )); ?>
+</div>
 <script>
 require([
     'jquery',

--- a/view/frontend/web/js/amazon-redirect.js
+++ b/view/frontend/web/js/amazon-redirect.js
@@ -44,7 +44,7 @@ define([
             // we don't have the customer's consent or invalid request
             this.redirectOnRequestWithError();
             this.setAuthStateCookies();
-            amazonCore.amazonDefined.subscribe(function () {
+            var onAmazonDefined = function () {
                 //only set this on the redirect page
                 amazon.Login.setUseCookie(true); //eslint-disable-line no-undef
                 amazonCore.verifyAmazonLoggedIn().then(function (loggedIn) {
@@ -62,7 +62,12 @@ define([
                         }]
                     });
                 });
-            }, this);
+            };
+            if (amazonCore.amazonDefined()) {
+                onAmazonDefined();
+            } else {
+                amazonCore.amazonDefined.subscribe(onAmazonDefined, this);
+            }
         },
 
         /**

