--- a/Block/ProductPagePaymentLink.php
+++ b/Block/ProductPagePaymentLink.php
@@ -18,6 +18,7 @@ namespace Amazon\Payment\Block;
 use Amazon\Core\Helper\CategoryExclusion;
 use Amazon\Core\Helper\Data;
 use Magento\Catalog\Model\Product;
+use Magento\ConfigurableProduct\Model\Product\Type\Configurable;
 use Magento\Framework\Registry;
 use Magento\Framework\View\Element\Template;
 use Magento\Framework\View\Element\Template\Context;
@@ -73,6 +74,20 @@ class ProductPagePaymentLink extends PaymentLink
             return '';
         }
 
+        // check for product stock and/or saleability
+        // configurable products
+        if ($product->getTypeId() == Configurable::TYPE_CODE) {
+            if (!$product->isSaleable()) {
+                return '';
+            }
+        }
+        // other product types
+        else {
+            if ($product->isInStock() == 0 || !$product->isSaleable()) {
+                return '';
+            }
+        }
+
         return parent::_toHtml();
     }
 }

--- a/Block/Widget/ResetPassword.php
+++ b/Block/Widget/ResetPassword.php
@@ -13,6 +13,7 @@ use Magento\Framework\View\Element\Template\Context;
 use Magento\Customer\Model\Url;
 use Magento\Customer\Model\Session;
 use Amazon\Login\Api\CustomerLinkRepositoryInterface;
+use Amazon\Core\Helper\Data;
 
 /**
  * @api
@@ -26,17 +27,21 @@ class ResetPassword extends Template
 
     private $customerLink;
 
+    private $coreHelper;
+
     public function __construct(
         Context $context,
         Url $urlModel,
         Session $session,
         CustomerLinkRepositoryInterface $customerLink,
+        Data $coreHelper,
         array $data = []
     ) {
         parent::__construct($context, $data);
         $this->urlModel = $urlModel;
         $this->session = $session;
         $this->customerLink = $customerLink;
+        $this->coreHelper = $coreHelper;
     }
 
     protected function _prepareLayout()
@@ -67,4 +72,16 @@ class ResetPassword extends Template
 
         return $url;
     }
+
+    /**
+     * @return string
+     */
+    protected function _toHtml()
+    {
+        if (!$this->coreHelper->isLoginButtonEnabled()) {
+            return '';
+        }
+
+        return parent::_toHtml();
+    }
 }

--- a/Test/Mftf/Data/AmazonCurrencyData.xml
+++ b/Test/Mftf/Data/AmazonCurrencyData.xml
@@ -6,11 +6,33 @@
             <item>EUR</item>
         </array>
     </entity>
+    <entity name="AmazonAllowMultiCurrencyValue" type="allow">
+        <array key="value">
+            <item>USD</item>
+            <item>EUR</item>
+            <item>GBP</item>
+            <item>JPY</item>
+            <item>NOK</item>
+            <item>CZK</item>
+            <item>EUR</item>
+            <item>CZK</item>
+        </array>
+    </entity>
     <entity name="MultiInvoiceAmazonCurrencyConfig" type="amazon_currency_config">
         <requiredEntity type="base">MultiInvoiceAmazonBaseCurrencyValue</requiredEntity>
         <requiredEntity type="default">MultiInvoiceAmazonDefaultCurrencyValue</requiredEntity>
         <requiredEntity type="allow">AmazonAllowCurrencyValue</requiredEntity>
     </entity>
+    <entity name="EUAmazonMultiCurrencyConfig" type="amazon_currency_config">
+        <requiredEntity type="base">EUAmazonMultiCurrencyBaseValue</requiredEntity>
+        <requiredEntity type="default">EUAmazonMultiCurrencyValue</requiredEntity>
+        <requiredEntity type="allow">AmazonAllowMultiCurrencyValue</requiredEntity>
+    </entity>
+    <entity name="EUAmazonInvalidMultiCurrencyConfig" type="amazon_currency_config">
+        <requiredEntity type="base">EUAmazonBaseCurrencyValue</requiredEntity>
+        <requiredEntity type="default">EUAmazonNoMultiCurrencyValue</requiredEntity>
+        <requiredEntity type="allow">AmazonAllowMultiCurrencyValue</requiredEntity>
+    </entity>
     <entity name="MultiInvoiceAmazonBaseCurrencyValue" type="base">
         <data key="value">USD</data>
     </entity>
@@ -28,6 +50,15 @@
     <entity name="SingleInvoiceAmazonDefaultCurrencyValue" type="default">
         <data key="value">EUR</data>
     </entity>
+    <entity name="EUAmazonMultiCurrencyBaseValue" type="default">
+        <data key="value">EUR</data>
+    </entity>
+    <entity name="EUAmazonMultiCurrencyValue" type="default">
+        <data key="value">USD</data>
+    </entity>
+    <entity name="EUAmazonNoMultiCurrencyValue" type="default">
+        <data key="value">CZK</data>
+    </entity>
     <entity name="DefaultAmazonCurrencyConfig" type="default_amazon_currency_config">
         <requiredEntity type="amazonCurrencyBaseFlagZero">DefaultAmazonCurrencyBaseFlagZero</requiredEntity>
         <requiredEntity type="amazonCurrencyDefaultFlagZero">DefaultAmazonCurrencyDefaultFlagZero</requiredEntity>

--- a/Test/Mftf/Data/AmazonPaymentData.xml
+++ b/Test/Mftf/Data/AmazonPaymentData.xml
@@ -14,6 +14,19 @@
         <requiredEntity type="amazon_pay_active">SampleAmazonPayActive</requiredEntity>
         <requiredEntity type="lwa_enabled">SampleAmazonLwaEnabled</requiredEntity>
     </entity>
+    <entity name="EUAmazonPaymentConfig" type="amazon_payment_config_state">
+        <requiredEntity type="merchant_id">SampleEUAmazonMerchantId</requiredEntity>
+        <requiredEntity type="access_key">SampleEUAmazonAccessKey</requiredEntity>
+        <requiredEntity type="secret_key">SampleEUAmazonSecretKey</requiredEntity>
+        <requiredEntity type="client_id">SampleEUAmazonClientId</requiredEntity>
+        <requiredEntity type="client_secret">SampleEUAmazonClientSecret</requiredEntity>
+        <requiredEntity type="payment_region">SampleEUAmazonPaymentRegion</requiredEntity>
+        <requiredEntity type="sandbox">SampleAmazonSandbox</requiredEntity>
+        <requiredEntity type="payment_action">SampleAmazonPaymentAction</requiredEntity>
+        <requiredEntity type="authorization_mode">SampleAmazonAuthorizationMode</requiredEntity>
+        <requiredEntity type="amazon_pay_active">SampleAmazonPayActive</requiredEntity>
+        <requiredEntity type="lwa_enabled">SampleAmazonLwaEnabled</requiredEntity>
+    </entity>
     <entity name="SampleAmazonMerchantId" type="merchant_id">
         <data key="value">{{_CREDS.amazon/v1_merchant_id}}</data>
     </entity>
@@ -29,6 +42,24 @@
     <entity name="SampleAmazonClientSecret" type="client_secret">
         <data key="value">{{_CREDS.amazon/v1_client_secret}}</data>
     </entity>
+    <entity name="SampleEUAmazonPaymentRegion" type="payment_region">
+        <data key="value">{{_CREDS.amazon/v1_eu_region}}</data>
+    </entity>
+    <entity name="SampleEUAmazonMerchantId" type="merchant_id">
+        <data key="value">{{_CREDS.amazon/v1_eu_merchant_id}}</data>
+    </entity>
+    <entity name="SampleEUAmazonAccessKey" type="access_key">
+        <data key="value">{{_CREDS.amazon/v1_eu_access_key}}</data>
+    </entity>
+    <entity name="SampleEUAmazonSecretKey" type="secret_key">
+        <data key="value">{{_CREDS.amazon/v1_eu_secret_key}}</data>
+    </entity>
+    <entity name="SampleEUAmazonClientId" type="client_id">
+        <data key="value">{{_CREDS.amazon/v1_eu_client_id}}</data>
+    </entity>
+    <entity name="SampleEUAmazonClientSecret" type="client_secret">
+        <data key="value">{{_CREDS.amazon/v1_eu_client_secret}}</data>
+    </entity>
     <entity name="SampleAmazonPaymentRegion" type="payment_region">
         <data key="value">{{_CREDS.amazon/v1_region}}</data>
     </entity>

--- /dev/null
+++ b/Test/Mftf/Test/AmazonCheckoutMulticurrencyCurrencyNoButtonTest.xml
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
+    <test name="AmazonCheckoutMulticurrencyCurrencyNoButton" extends="AmazonCheckoutAddProduct">
+        <annotations>
+            <stories value="Amazon Multicurrency Checkout No Button"/>
+            <title value="Amazon Multicurrency Checkout No Button"/>
+            <description value="User should not be able to checkout with Amazon Pay when not in an allowed multi-currency region."/>
+            <severity value="CRITICAL"/>
+            <group value="amazon_payment"/>
+            <group value="amazon_payment_multicurrency"/>
+        </annotations>
+
+        <before>
+            <createData entity="EUAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData" before="flushCache"/>
+            <createData entity="EUAmazonInvalidMultiCurrencyConfig" stepKey="SampleAmazonCurrencyConfig" before="flushCache"/>
+            <!-- enable multicurrency -->
+            <magentoCLI command="config:set payment/amazon_payment/multicurrency 1" stepKey="setMulticurrency" before="flushCache"/>
+        </before>
+
+        <after>
+            <createData entity="SampleAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
+            <createData entity="DefaultAmazonCurrencyConfig" stepKey="DefaultAmazonCurrencyConfig"/>
+            <!-- disable multicurrency -->
+            <magentoCLI command="config:set payment/amazon_payment/multicurrency 0" stepKey="disableMulticurrency" before="flushCache"/>
+            <magentoCLI command="cache:flush" stepKey="flushCache"/>
+        </after>
+
+        <!--Go to Cart-->
+        <actionGroup ref="StorefrontOpenCartFromMinicartActionGroup" stepKey="cartOpenCart" />
+
+        <!--Verify we don't see Amazon Pay Button-->
+        <dontSeeElement selector="{{AmazonCheckoutSection.cartPayButton}}" stepKey="dontSeeEnabledAmazonButton"/>
+    </test>
+</tests>

--- /dev/null
+++ b/Test/Mftf/Test/AmazonCheckoutMulticurrencyDisabledNoButtonTest.xml
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
+    <test name="AmazonCheckoutMulticurrencyDisabledNoButton" extends="AmazonCheckoutAddProduct">
+        <annotations>
+            <stories value="Amazon Checkout Multicurrency Disabled No Button"/>
+            <title value="Amazon Checkout Multicurrency Disabled No Button"/>
+            <description value="User should not be able to checkout with Amazon Pay when multi-currency is disabled."/>
+            <severity value="CRITICAL"/>
+            <group value="amazon_payment"/>
+            <group value="amazon_payment_multicurrency"/>
+        </annotations>
+
+        <before>
+            <createData entity="EUAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData" before="flushCache"/>
+            <createData entity="EUAmazonMultiCurrencyConfig" stepKey="SampleAmazonCurrencyConfig" before="flushCache"/>
+            <!-- ensure multicurrency disabled -->
+            <magentoCLI command="config:set payment/amazon_payment/multicurrency 0" stepKey="setMulticurrency" before="flushCache"/>
+        </before>
+
+        <after>
+            <createData entity="SampleAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
+            <createData entity="DefaultAmazonCurrencyConfig" stepKey="DefaultAmazonCurrencyConfig"/>
+            <magentoCLI command="cache:flush" stepKey="flushCache"/>
+        </after>
+
+        <!--Go to Cart-->
+        <actionGroup ref="StorefrontOpenCartFromMinicartActionGroup" stepKey="cartOpenCart" />
+
+        <!--Verify we don't see Amazon Pay Button-->
+        <dontSeeElement selector="{{AmazonCheckoutSection.cartPayButton}}" stepKey="dontSeeEnabledAmazonButton"/>
+    </test>
+</tests>

--- /dev/null
+++ b/Test/Mftf/Test/AmazonCheckoutMulticurrencySuccessTest.xml
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
+    <test name="AmazonCheckoutMulticurrencySuccess" extends="AmazonCheckoutAddProduct">
+        <annotations>
+            <stories value="Amazon Checkout Multicurrency"/>
+            <title value="Amazon Checkout Multicurrency Success"/>
+            <description value="User should be able to checkout with Amazon Pay when multicurrency is enabled and they are using a supported currency."/>
+            <severity value="CRITICAL"/>
+            <group value="amazon_payment"/>
+            <group value="amazon_payment_multicurrency"/>
+        </annotations>
+
+        <before>
+            <createData entity="EUAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData" before="flushCache"/>
+            <createData entity="EUAmazonMultiCurrencyConfig" stepKey="SampleAmazonCurrencyConfig" before="flushCache"/>
+            <!-- set default currency to one supported for multicurrency -->
+            <magentoCLI command="config:set currency/options/default USD" stepKey="setDefaultCurrency" before="flushCache"/>
+            <!-- enable multicurrency -->
+            <magentoCLI command="config:set payment/amazon_payment/multicurrency 1" stepKey="setMulticurrency" before="flushCache"/>
+            <magentoCLI command="config:set payment/amazon_payment/lwa_enabled 0" stepKey="setLoginWithAmazon" before="flushCache"/>
+
+        </before>
+
+        <after>
+            <createData entity="SampleAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
+            <createData entity="DefaultAmazonCurrencyConfig" stepKey="DefaultAmazonCurrencyConfig"/>
+            <!-- disable multicurrency -->
+            <magentoCLI command="config:set payment/amazon_payment/multicurrency 0" stepKey="disableMulticurrency" before="flushCache"/>
+            <magentoCLI command="cache:flush" stepKey="flushCache"/>
+        </after>
+
+        <!-- Click on mini cart -->
+        <actionGroup ref="StorefrontClickOnMiniCartActionGroup" stepKey="clickOnMiniCart"/>
+
+        <!-- Login (redirect) -->
+        <click selector="{{AmazonCheckoutSection.miniCartPayButton}}" stepKey="clickAmazonCartButton"/>
+        <actionGroup ref="AmazonLoginRedirectActionGroup" stepKey="AmazonLoginRedirectActionGroup" />
+
+        <!-- Place order -->
+        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
+        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber}}" stepKey="grabOrderNumber"/>
+
+        <!-- Login as admin -->
+        <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
+
+        <!-- Open created order in backend -->
+        <amOnPage url="{{AdminOrdersPage.url}}" stepKey="goToOrders"/>
+        <waitForPageLoad stepKey="waitForOrdersPageLoad"/>
+        <actionGroup ref="OpenOrderByIdActionGroup" stepKey="filterOrderGridById">
+            <argument name="orderId" value="$grabOrderNumber"/>
+        </actionGroup>
+
+        <!-- Create Invoice -->
+        <click selector="{{AdminOrderDetailsMainActionsSection.invoice}}" stepKey="clickInvoice"/>
+        <waitForPageLoad stepKey="waitForInvoicePage"/>
+
+        <!-- Verify invoice item qtys cannot be changed -->
+        <dontSeeElement stepKey="dontSeeItemQtyToInvoice1" selector="{{AdminInvoiceItemsSection.itemQtyToInvoice('1')}}"/>
+        <dontSeeElement stepKey="dontSeeItemQtyToInvoice2" selector="{{AdminInvoiceItemsSection.itemQtyToInvoice('2')}}"/>
+        <dontSeeElement stepKey="dontSeeUpdateQty" selector="{{AdminInvoiceItemsSection.updateQty}}"/>
+
+        <!-- Submit and verify the invoice created using the presentmentCurrency -->
+        <click selector="{{AdminInvoiceMainActionsSection.submitInvoice}}" stepKey="submitInvoice"/>
+        <waitForPageLoad stepKey="waitForLoadPage"/>
+        <see userInput="The invoice has been created." stepKey="seeMessage"/>
+        <see userInput="Captured amount of €6.23 [$8.82] online." stepKey="seeCapturedAmount"/>
+    </test>
+</tests>

--- a/composer.json
+++ b/composer.json
@@ -2,14 +2,14 @@
   "name": "amzn/amazon-pay-module",
   "description": "Amazon Pay module",
   "type": "magento2-module",
-  "version": "3.7.2",
+  "version": "3.7.4",
   "license": [
     "Apache-2.0"
   ],
   "require": {
     "php": "~7.1.3||~7.2.0||~7.3.0",
-    "amzn/amazon-pay-and-login-with-amazon-core-module": "^3.7.2",
-    "amzn/login-with-amazon-module": "^3.7.2",
+    "amzn/amazon-pay-and-login-with-amazon-core-module": "^3.7.4",
+    "amzn/login-with-amazon-module": "^3.7.4",
     "magento/framework": "^102",
     "magento/module-customer": "^102",
     "magento/module-eav": "^102",

--- a/etc/csp_whitelist.xml
+++ b/etc/csp_whitelist.xml
@@ -10,6 +10,7 @@
                 <value id="amazon_it" type="host">*.amazon.it</value>
                 <value id="amazon_fr" type="host">*.amazon.fr</value>
                 <value id="amazon_es" type="host">*.amazon.es</value>
+                <value id="amazon_de" type="host">*.amazon.de</value>
                 <value id="amazonpay_com" type="host">*.amazonpay.com</value>
                 <value id="amazonpay_co_uk" type="host">*.amazonpay.co.uk</value>
                 <value id="amazonpay_co_jp" type="host">*.amazonpay.co.jp</value>
@@ -17,6 +18,7 @@
                 <value id="amazonpay_it" type="host">*.amazonpay.it</value>
                 <value id="amazonpay_fr" type="host">*.amazonpay.fr</value>
                 <value id="amazonpay_es" type="host">*.amazonpay.es</value>
+                <value id="amazonpay_de" type="host">*.amazonpay.de</value>
                 <value id="amazonservices_com" type="host">mws.amazonservices.com</value>
                 <value id="amazonservices_co_uk" type="host">mws.amazonservices.co.uk</value>
                 <value id="amazonservices_co_jp" type="host">mws.amazonservices.co.jp</value>
@@ -24,6 +26,7 @@
                 <value id="amazonservices_it" type="host">mws.amazonservices.it</value>
                 <value id="amazonservices_fr" type="host">mws.amazonservices.fr</value>
                 <value id="amazonservices_es" type="host">mws.amazonservices.es</value>
+                <value id="amazonservices_de" type="host">mws.amazonservices.de</value>
             </values>
         </policy>
         <policy id="script-src">
@@ -35,6 +38,7 @@
                 <value id="amazon_payment_widget_it" type="host">*.payments-amazon.it</value>
                 <value id="amazon_payment_widget_fr" type="host">*.payments-amazon.fr</value>
                 <value id="amazon_payment_widget_es" type="host">*.payments-amazon.es</value>
+                <value id="amazon_payment_widget_de" type="host">*.payments-amazon.de</value>
             </values>
         </policy>
         <policy id="img-src">
@@ -68,6 +72,7 @@
                 <value id="ssl_images_amazon_it" type="host">*.ssl-images-amazon.it</value>
                 <value id="ssl_images_amazon_fr" type="host">*.ssl-images-amazon.fr</value>
                 <value id="ssl_images_amazon_es" type="host">*.ssl-images-amazon.es</value>
+                <value id="ssl_images_amazon_de" type="host">*.ssl-images-amazon.de</value>
                 <value id="media_amazon_com" type="host">*.media-amazon.com</value>
                 <value id="media_amazon_co_uk" type="host">*.media-amazon.co.uk</value>
                 <value id="media_amazon_co_jp" type="host">*.media-amazon.co.jp</value>
@@ -75,6 +80,7 @@
                 <value id="media_amazon_it" type="host">*.media-amazon.it</value>
                 <value id="media_amazon_fr" type="host">*.media-amazon.fr</value>
                 <value id="media_amazon_es" type="host">*.media-amazon.es</value>
+                <value id="media_amazon_de" type="host">*.media-amazon.de</value>
             </values>
         </policy>
         <policy id="form-action">
@@ -86,6 +92,7 @@
                 <value id="amazon_it" type="host">*.amazon.it</value>
                 <value id="amazon_fr" type="host">*.amazon.fr</value>
                 <value id="amazon_es" type="host">*.amazon.es</value>
+                <value id="amazon_de" type="host">*.amazon.de</value>
             </values>
         </policy>
         <policy id="frame-src">
@@ -97,6 +104,7 @@
                 <value id="amazon_it" type="host">*.amazon.it</value>
                 <value id="amazon_fr" type="host">*.amazon.fr</value>
                 <value id="amazon_es" type="host">*.amazon.es</value>
+                <value id="amazon_de" type="host">*.amazon.de</value>
                 <value id="amazon_payment_widget_com" type="host">*.payments-amazon.com</value>
                 <value id="amazon_payment_widget_co_uk" type="host">*.payments-amazon.co.uk</value>
                 <value id="amazon_payment_widget_co_jp" type="host">*.payments-amazon.co.jp</value>
@@ -104,6 +112,7 @@
                 <value id="amazon_payment_widget_it" type="host">*.payments-amazon.it</value>
                 <value id="amazon_payment_widget_fr" type="host">*.payments-amazon.fr</value>
                 <value id="amazon_payment_widget_es" type="host">*.payments-amazon.es</value>
+                <value id="amazon_payment_widget_de" type="host">*.payments-amazon.de</value>
             </values>
         </policy>
     </policies>

--- a/etc/module.xml
+++ b/etc/module.xml
@@ -16,7 +16,7 @@
  */
 -->
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
-    <module name="Amazon_Payment" setup_version="3.7.2" >
+    <module name="Amazon_Payment" setup_version="3.7.4" >
         <sequence>
             <module name="Amazon_Core"/>
             <module name="Amazon_Login"/>

