--- a/Gateway/Validator/CurrencyValidator.php
+++ /dev/null
@@ -1,79 +0,0 @@
-<?php
-/**
- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License").
- * You may not use this file except in compliance with the License.
- * A copy of the License is located at
- *
- *  http://aws.amazon.com/apache2.0
- *
- * or in the "license" file accompanying this file. This file is distributed
- * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
- * express or implied. See the License for the specific language governing
- * permissions and limitations under the License.
- */
-
-namespace Amazon\Payment\Gateway\Validator;
-
-use Magento\Payment\Gateway\Validator\AbstractValidator;
-use Magento\Payment\Gateway\ConfigInterface;
-use Magento\Payment\Gateway\Validator\ResultInterfaceFactory;
-use Amazon\Core\Helper\Data;
-
-/**
- * Class CurrencyValidator
- * Validates allowable currencies for Amazon Pay
- */
-class CurrencyValidator extends AbstractValidator
-{
-
-    /**
-     * @var \Magento\Payment\Gateway\ConfigInterface
-     */
-    private $config;
-
-    /**
-     * @var Data
-     */
-    private $coreHelper;
-
-    /**
-     * CurrencyValidator constructor.
-     *
-     * @param ResultInterfaceFactory $resultFactory
-     * @param ConfigInterface        $config
-     * @param Data                   $coreHelper
-     */
-    public function __construct(
-        ResultInterfaceFactory $resultFactory,
-        ConfigInterface $config,
-        Data $coreHelper
-    ) {
-        $this->coreHelper = $coreHelper;
-        $this->config = $config;
-        parent::__construct($resultFactory);
-    }
-
-    /**
-     * @param array $validationSubject
-     * @return \Magento\Payment\Gateway\Validator\ResultInterface
-     */
-    public function validate(array $validationSubject)
-    {
-
-        $allowedCurrency = $this->coreHelper->getCurrencyCode('store', $validationSubject['storeId']);
-
-        if ($allowedCurrency == $validationSubject['currency']) {
-            return $this->createResult(
-                true,
-                ['status' => 200]
-            );
-        }
-
-        return $this->createResult(
-            false,
-            [__('The currency selected is not supported by Amazon Pay.')]
-        );
-    }
-}

--- a/Model/OrderInformationManagement.php
+++ b/Model/OrderInformationManagement.php
@@ -18,6 +18,7 @@ namespace Amazon\Payment\Model;
 use Amazon\Core\Client\ClientFactoryInterface;
 use Amazon\Core\Exception\AmazonServiceUnavailableException;
 use Amazon\Core\Helper\Data as CoreHelper;
+use Amazon\Core\Model\AmazonConfig;
 use Amazon\Payment\Gateway\Config\Config;
 use Amazon\Payment\Api\Data\QuoteLinkInterfaceFactory;
 use Amazon\Payment\Api\OrderInformationManagementInterface;
@@ -54,6 +55,11 @@ class OrderInformationManagement implements OrderInformationManagementInterface
      */
     private $coreHelper;
 
+    /**
+     * @var AmazonConfig
+     */
+    private $amazonConfig;
+
     /**
      * @var AmazonSetOrderDetailsResponseFactory
      */
@@ -79,6 +85,7 @@ class OrderInformationManagement implements OrderInformationManagementInterface
      * @param Session $session
      * @param ClientFactoryInterface $clientFactory
      * @param CoreHelper $coreHelper
+     * @param AmazonConfig $amazonConfig
      * @param Config $config
      * @param AmazonSetOrderDetailsResponseFactory $amazonSetOrderDetailsResponseFactory
      * @param QuoteLinkInterfaceFactory $quoteLinkFactory
@@ -88,6 +95,7 @@ class OrderInformationManagement implements OrderInformationManagementInterface
         Session $session,
         ClientFactoryInterface $clientFactory,
         CoreHelper $coreHelper,
+        AmazonConfig $amazonConfig,
         Config $config,
         AmazonSetOrderDetailsResponseFactory $amazonSetOrderDetailsResponseFactory,
         QuoteLinkInterfaceFactory $quoteLinkFactory,
@@ -97,6 +105,7 @@ class OrderInformationManagement implements OrderInformationManagementInterface
         $this->session                              = $session;
         $this->clientFactory                        = $clientFactory;
         $this->coreHelper                           = $coreHelper;
+        $this->amazonConfig                         = $amazonConfig;
         $this->config                               = $config;
         $this->amazonSetOrderDetailsResponseFactory = $amazonSetOrderDetailsResponseFactory;
         $this->quoteLinkFactory                     = $quoteLinkFactory;
@@ -150,7 +159,7 @@ class OrderInformationManagement implements OrderInformationManagementInterface
 
     protected function validateCurrency($code)
     {
-        if ($this->coreHelper->getCurrencyCode() !== $code) {
+        if ($this->coreHelper->getCurrencyCode() !== $code && !$this->amazonConfig->canUseCurrency($code)) {
             throw new LocalizedException(__('The currency selected is not supported by Amazon Pay'));
         }
     }

--- a/composer.json
+++ b/composer.json
@@ -2,14 +2,14 @@
   "name": "amzn/amazon-pay-module",
   "description": "Amazon Pay module",
   "type": "magento2-module",
-  "version": "3.6.0",
+  "version": "3.6.1",
   "license": [
     "Apache-2.0"
   ],
   "require": {
     "php": "~7.1.3||~7.2.0||~7.3.0",
-    "amzn/amazon-pay-and-login-with-amazon-core-module": "^3.6.0",
-    "amzn/login-with-amazon-module": "^3.6.0",
+    "amzn/amazon-pay-and-login-with-amazon-core-module": "^3.6.1",
+    "amzn/login-with-amazon-module": "^3.6.1",
     "magento/framework": "^102",
     "magento/module-customer": "^102",
     "magento/module-eav": "^102",

--- a/etc/di.xml
+++ b/etc/di.xml
@@ -34,16 +34,10 @@
             <argument name="config" xsi:type="object">Amazon\Payment\Gateway\Config\Config</argument>
         </arguments>
     </virtualType>
-    <virtualType name="AmazonCurrencyValidator" type="Amazon\Payment\Gateway\Validator\CurrencyValidator">
-        <arguments>
-            <argument name="config" xsi:type="object">Amazon\Payment\Gateway\Config\Config</argument>
-        </arguments>
-    </virtualType>
     <virtualType name="AmazonValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
         <arguments>
             <argument name="validators" xsi:type="array">
                 <item name="country" xsi:type="string">AmazonCountryValidator</item>
-                <item name="currency" xsi:type="string">AmazonCurrencyValidator</item>
             </argument>
         </arguments>
     </virtualType>

--- a/etc/module.xml
+++ b/etc/module.xml
@@ -16,7 +16,7 @@
  */
 -->
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
-    <module name="Amazon_Payment" setup_version="3.6.0" >
+    <module name="Amazon_Payment" setup_version="3.6.1" >
         <sequence>
             <module name="Amazon_Core"/>
             <module name="Amazon_Login"/>

--- a/view/frontend/web/template/form/element/email.html
+++ b/view/frontend/web/template/form/element/email.html
@@ -53,7 +53,7 @@
                 </label>
                 <div class="control">
                     <input class="input-text"
-                           placeholder="optional"
+                           placeholder="Password"
                            type="password"
                            name="password"
                            id="customer-password"

