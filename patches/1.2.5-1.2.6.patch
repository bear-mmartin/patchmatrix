--- a/.github/ISSUE_TEMPLATE.md
+++ b/.github/ISSUE_TEMPLATE.md
@@ -14,7 +14,8 @@
 
 #### Your setup
 
-* Magento version:
+* Magento version: 2.x.x
+* Amazon Pay Extension Version: 
 * Magento Edition: Community / Enterprise / Enterprise Cloud
 * JavaScript Console: Please add a screenshot of the Chrome JavaScript console to speed up the process
 * Shop URL : <!-- if you are willing to share -->

--- a/README.md
+++ b/README.md
@@ -1,21 +1,16 @@
 # Amazon Pay and Login with Amazon for Magento 2
 
-[View the Complete User Guide](https://amzn.github.io/amazon-payments-magento-2-plugin)
+## About Amazon Pay for Magento 2
 
-## Learn More about Amazon Pay
-* [US] (https://pay.amazon.com/us/sp/magento)
-* [UK] (https://pay.amazon.com/uk/sp/magento)
-* [DE] (https://pay.amazon.com/de/sp/magento)
-* [FR] (https://pay.amazon.com/fr/sp/magento)
-* [IT] (https://pay.amazon.com/it/sp/magento)
-* [ES] (https://pay.amazon.com/es/sp/magento)
+Amazon Pay offers a familiar and convenient buying experience that can help your customers spend more time shopping and less time checking out.   Amazon Pay is used by large and small companies.  From years of shopping safely with Amazon, customers trust their personal information will remain secure and know many transactions are covered by the Amazon A-to-z Guarantee.  Businesses have the reassurance of our advanced fraud protection and payment protection policy.
 
+For more information about Amazon Pay and Magento 2, please visit our [Amazon Pay for Magento](https://pay.amazon.com/sp/magento) site or review our [Complete User Guide](https://amzn.github.io/amazon-payments-magento-2-plugin).
 
 ## Pre-Requisites
 * Magento 2.1+
     * [Magento 2 System Requirements](http://devdocs.magento.com/magento-system-requirements.html)
 * SSL is installed on your site and active on Checkout and Login pages
-* A verified Amazon Payments merchant account
+* A verified Amazon Pay merchant account - [sign up here](https://pay.amazon.com/signup)!
 
 ## Installation and Configuration
 

--- a/composer.json
+++ b/composer.json
@@ -2,7 +2,7 @@
   "name": "amzn/amazon-pay-and-login-magento-2-module",
   "description": "Official Magento2 Plugin to integrate with Amazon Pay and Login with Amazon",
   "type": "magento2-module",
-  "version": "1.2.5",
+  "version": "1.2.6",
   "license": [
     "Apache-2.0"
   ],

--- a/docs/conf.py
+++ b/docs/conf.py
@@ -60,9 +60,9 @@ author = u'Amazon.com Inc or its affiliates'
 # built documents.
 #
 # The short X.Y version.
-version = u'1.2.5'
+version = u'1.2.6'
 # The full version, including alpha/beta/rc tags.
-release = u'1.2.5'
+release = u'1.2.6'
 
 # The language for content autogenerated by Sphinx. Refer to documentation
 # for a list of supported languages.

--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -20,12 +20,12 @@ In case you are not able or willing to use the web installation, you can install
 
 * Sign in to your server via SSH
 * `cd` into you Magento installation directory
-* Install the extension via composer: `composer require amzn/amazon-payments-magento-2-plugin:^1.2.5`
+* Install the extension via composer: `composer require amzn/amazon-payments-magento-2-plugin:^1.2.6`
 * Enable the extension: `php bin/magento module:enable Amazon_Core Amazon_Login Amazon_Payment`
 * Upgrade the Magento installation: `php bin/magento setup:upgrade`
 * Follow any advice the upgrade routine provides
 
-.. note:: `composer require amzn/amazon-payments-magento-2-plugin:^1.2.5` will always install the most current, non-breaking, Amazon Pay extension for you, when you run an update. To fix it to a specifix version, please remove the `^`
+.. note:: `composer require amzn/amazon-payments-magento-2-plugin:^1.2.6` will always install the most current, non-breaking, Amazon Pay extension for you, when you run an update. To fix it to a specifix version, please remove the `^`
 
 In production mode, you will also have to compile the code and the dependency injection (DI) configuration and deploy static content
 

--- a/marketplace-composer.json
+++ b/marketplace-composer.json
@@ -2,13 +2,13 @@
   "name": "amzn/amazon-pay-and-login-magento-2-module",
   "description": "Official Magento2 Plugin to integrate with Amazon Pay and Login with Amazon",
   "type": "metapackage",
-  "version": "1.2.5",
+  "version": "1.2.6",
   "license": [
     "Apache-2.0"
   ],
   "require": {
-    "amzn/amazon-pay-and-login-with-amazon-core-module": "1.2.5",
-    "amzn/login-with-amazon-module": "1.2.5",
-    "amzn/amazon-pay-module": "1.2.5"
+    "amzn/amazon-pay-and-login-with-amazon-core-module": "1.2.6",
+    "amzn/login-with-amazon-module": "1.2.6",
+    "amzn/amazon-pay-module": "1.2.6"
   }
 }

--- a/src/Core/composer.json
+++ b/src/Core/composer.json
@@ -2,7 +2,7 @@
   "name": "amzn/amazon-pay-and-login-with-amazon-core-module",
   "description": "Shared functionality for Amazon Pay and Login with Amazon modules",
   "type": "magento2-module",
-  "version": "1.2.5",
+  "version": "1.2.6",
   "license": [
     "Apache-2.0"
   ],

--- a/src/Core/etc/module.xml
+++ b/src/Core/etc/module.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0"?>
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
-    <module name="Amazon_Core" setup_version="1.2.5">
+    <module name="Amazon_Core" setup_version="1.2.6">
         <sequence>
             <module name="Magento_Store"/>
             <module name="Magento_Customer"/>

--- a/src/Login/composer.json
+++ b/src/Login/composer.json
@@ -2,12 +2,12 @@
   "name": "amzn/login-with-amazon-module",
   "description": "Login with Amazon module",
   "type": "magento2-module",
-  "version": "1.2.5",
+  "version": "1.2.6",
   "license": [
     "Apache-2.0"
   ],
   "require": {
-    "amzn/amazon-pay-and-login-with-amazon-core-module": "^1.2.5",
+    "amzn/amazon-pay-and-login-with-amazon-core-module": "^1.2.6",
     "magento/module-customer": "^100.1.0|^101.0.0",
 	"magento/module-checkout": "^100.1.0|^100.2.0"
     

--- a/src/Payment/composer.json
+++ b/src/Payment/composer.json
@@ -2,13 +2,13 @@
   "name": "amzn/amazon-pay-module",
   "description": "Amazon Pay module",
   "type": "magento2-module",
-  "version": "1.2.5",
+  "version": "1.2.6",
   "license": [
     "Apache-2.0"
   ],
   "require": {
-    "amzn/amazon-pay-and-login-with-amazon-core-module": "^1.2.5",
-    "amzn/login-with-amazon-module": "^1.2.5",
+    "amzn/amazon-pay-and-login-with-amazon-core-module": "^1.2.6",
+    "amzn/login-with-amazon-module": "^1.2.6",
     "magento/module-eav": "^100.1.0|^101.0.0",
     "magento/module-sales": "^100.1.0|^101.0.0",
     "magento/module-quote": "^100.1.0|^101.0.0",

--- a/src/Payment/i18n/en_GB.csv
+++ b/src/Payment/i18n/en_GB.csv
@@ -1,9 +1,9 @@
-﻿"Amazon authorize invalid state : %1 with reason %2","Unexpected state for the Amazon Pay authoriziation. State: %1, Reason code: %2"
+﻿"Amazon authorize invalid state : %1 with reason %2","Unexpected state for the Amazon Pay authorization. State: %1, Reason code: %2"
 "Amazon capture declined : %1","Amazon Pay declined the capture. Reason code: %1"
 "Amazon capture invalid state : %1 with reason %2","Unexpected state for the Amazon Pay capture. State: %1, Reason code: %2"
 "Amazon refund invalid state : %1 with reason %2","Unexpected state for the Amazon Pay refund. State: %1, Reason code: %2"
 "the country for your address is not allowed for this store","The country associated with your address is not allowed for this store."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Unfortunately it is not possible to Pay with Amazon Pay for this order. Please choose another payment method."
+"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","There has been a problem with the selected payment method on your Amazon account. Please choose another one."
 "The currency selected is not supported by Amazon Pay","The currency selected is not supported by Amazon Pay on this store."
 "Captured amount of %1 online","Captured amount of %1 online."
@@ -17,4 +17,4 @@
 "Amazon could not process your request.","Amazon Pay could not process your request. Please try again."
 "Please select a payment method.","Please select a payment method."
 "Your session has expired, please reload the page and try again.","Your session has expired, please reload the page and try again."
-"Return to standard checkout","Return to standard checkout"
\ No newline at end of file
+"Return to standard checkout","Return to standard checkout"

--- a/src/Payment/i18n/en_US.csv
+++ b/src/Payment/i18n/en_US.csv
@@ -1,9 +1,9 @@
-"Amazon authorize invalid state : %1 with reason %2","Unexpected state for the Amazon Pay authoriziation. State: %1, Reason code: %2"
+"Amazon authorize invalid state : %1 with reason %2","Unexpected state for the Amazon Pay authorization. State: %1, Reason code: %2"
 "Amazon capture declined : %1","Amazon Pay declined the capture. Reason code: %1"
 "Amazon capture invalid state : %1 with reason %2","Unexpected state for the Amazon Pay capture. State: %1, Reason code: %2"
 "Amazon refund invalid state : %1 with reason %2","Unexpected state for the Amazon Pay refund. State: %1, Reason code: %2"
 "the country for your address is not allowed for this store","The country associated with your address is not allowed for this store."
-"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Unfortunately it is not possible to Pay with Amazon Pay for this order. Please choose another payment method."
+"Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method.","Unfortunately it is not possible to pay with Amazon Pay for this order. Please choose another payment method."
 "There has been a problem with the selected payment method on your Amazon account. Please choose another one.","There has been a problem with the selected payment method on your Amazon account. Please choose another one."
 "The currency selected is not supported by Amazon Pay","The currency selected is not supported by Amazon Pay on this store."
 "Captured amount of %1 online","Captured amount of %1 online."
@@ -17,4 +17,4 @@
 "Amazon could not process your request.","Amazon Pay could not process your request. Please try again."
 "Please select a payment method.","Please select a payment method."
 "Your session has expired, please reload the page and try again.","Your session has expired, please reload the page and try again."
-"Return to standard checkout","Return to standard checkout"
\ No newline at end of file
+"Return to standard checkout","Return to standard checkout"

--- a/src/Payment/view/frontend/web/js/action/populate-shipping-address.js
+++ b/src/Payment/view/frontend/web/js/action/populate-shipping-address.js
@@ -36,7 +36,7 @@ define(
                     $.extend({}, checkoutProvider.get('shippingAddress'), shippingAddressData)
                 );
             });
-            $("#co-shipping-form").css("display", "none");
+
             checkoutDataResolver.resolveShippingAddress();
         }
 
@@ -45,7 +45,16 @@ define(
          * @private
          */
         return function () {
-            populateShippingForm();
+            //check to see if user is logged out of amazon (otherwise shipping form won't be in DOM)
+            if (!amazonStorage.isAmazonAccountLoggedIn) {
+                populateShippingForm();
+            }
+            //subscribe to logout and trigger shippingform population when logged out.
+            amazonStorage.isAmazonAccountLoggedIn.subscribe(function (loggedIn) {
+                if (!loggedIn) {
+                    populateShippingForm();
+                }
+            });
         }
     }
 );

--- a/src/Payment/view/frontend/web/js/view/checkout-widget-address.js
+++ b/src/Payment/view/frontend/web/js/view/checkout-widget-address.js
@@ -19,8 +19,7 @@ define(
         'Magento_Checkout/js/model/url-builder',
         'Magento_Checkout/js/checkout-data',
         'Magento_Checkout/js/model/checkout-data-resolver',
-        'uiRegistry',
-        'Amazon_Payment/js/action/populate-shipping-address'
+	'uiRegistry'
     ],
     function (
         $,
@@ -40,8 +39,7 @@ define(
         urlBuilder,
         checkoutData,
         checkoutDataResolver,
-        registry,
-        populateShippingAddressAction
+	registry
     ) {
         'use strict';
         var self;
@@ -121,7 +119,6 @@ define(
                         }
                         checkoutData.setShippingAddressFromData(addressConverter.quoteAddressToFormAddressData(addressData));
                         checkoutDataResolver.resolveEstimationAddress();
-                        populateShippingAddressAction();
                     }
                 ).fail(
                     function (response) {

--- a/src/Payment/view/frontend/web/js/view/shipping-address/inline-form.js
+++ b/src/Payment/view/frontend/web/js/view/shipping-address/inline-form.js
@@ -1,14 +1,13 @@
 define([
-    'jquery',
     'uiComponent',
     'ko',
     'Amazon_Payment/js/model/storage'
-], function ($, Component, ko, amazonStorage) {
+], function (Component, ko, amazonStorage) {
     'use strict';
     return Component.extend({
         defaults: {
             template: 'Amazon_Payment/shipping-address/inline-form',
-            formSelector: '#co-shipping-form'
+            formSelector: 'co-shipping-form'
         },
         initObservable: function () {
             this._super();
@@ -22,22 +21,9 @@ define([
         },
         manipulateInlineForm: function () {
             if (amazonStorage.isAmazonAccountLoggedIn()) {
-                var errorCount = 0;
-                $(this.formSelector).find(".field").each(function () {
-                    if ($(this).hasClass('_error')) {
-                        errorCount ++;
-                        $(this).show();
-                    } else {
-                        $(this).css("display", "none");
-                    }
-                });
-                var elem = $(this.formSelector);
+                var elem = document.getElementById(this.formSelector);
                 if (elem) {
-                    if (errorCount > 0) {
-                        $(this.formSelector).show();
-                    } else {
-                        $(this.formSelector).hide();
-                    }
+                    document.getElementById(this.formSelector).style.display = 'none';
                 }
             }
         }

--- a/src/Payment/view/frontend/web/js/view/shipping.js
+++ b/src/Payment/view/frontend/web/js/view/shipping.js
@@ -8,9 +8,7 @@ define(
         'Magento_Customer/js/model/customer',
         'Magento_Checkout/js/action/set-shipping-information',
         'Magento_Checkout/js/model/step-navigator',
-        'Amazon_Payment/js/model/storage',
-        'Magento_Customer/js/model/address-list',
-        'Magento_Checkout/js/model/quote'
+        'Amazon_Payment/js/model/storage'
     ],
     function (
         $,
@@ -20,15 +18,10 @@ define(
         customer,
         setShippingInformationAction,
         stepNavigator,
-        amazonStorage,
-        addressList,
-        quote
+        amazonStorage
     ) {
         'use strict';
         return Component.extend({
-            isFormInline: ko.observable(addressList().length == 0),
-            formSelector: '#co-shipping-form',
-
             initialize: function () {
                 this._super();
                 this.isNewAddressAdded(amazonStorage.isAmazonAccountLoggedIn());
@@ -55,12 +48,9 @@ define(
                     );
                 }
                 if (amazonStorage.isAmazonAccountLoggedIn() && customer.isLoggedIn()) {
-                    this.isFormInline(true);
-                    if (this.validateShippingInformation()) {
-                        setShippingInformationAmazon();
-                    }
+                    setShippingInformationAmazon();
                 } else if (amazonStorage.isAmazonAccountLoggedIn() && !customer.isLoggedIn()) {
-                    if (this.validateGuestEmail() && this.validateShippingInformation()) {
+                    if (this.validateGuestEmail()) {
                         setShippingInformationAmazon();
                     }
                 } else {
@@ -69,61 +59,6 @@ define(
                         setShippingInformationAmazon();
                     }
                 }
-            },
-
-            validateShippingInformation: function () {
-                var shippingAddress,
-                    addressData,
-                    loginFormSelector = 'form[data-role=email-with-possible-login]',
-                    emailValidationResult = customer.isLoggedIn();
-
-                if (!quote.shippingMethod()) {
-                    this.errorValidationMessage($t('Please specify a shipping method.'));
-
-                    return false;
-                }
-
-                if (!customer.isLoggedIn()) {
-                    $(loginFormSelector).validation();
-                    emailValidationResult = Boolean($(loginFormSelector + ' input[name=username]').valid());
-                }
-
-                if (this.isFormInline()) {
-                    this.source.set('params.invalid', false);
-                    this.source.trigger('shippingAddress.data.validate');
-
-                    if (this.source.get('shippingAddress.custom_attributes')) {
-                        this.source.trigger('shippingAddress.custom_attributes.data.validate');
-                    }
-
-                    if (this.source.get('params.invalid') ||
-                        !quote.shippingMethod().method_code ||
-                        !quote.shippingMethod().carrier_code ||
-                        !emailValidationResult
-                    ) {
-                        var errorCount = 0;
-                        $(this.formSelector).find(".field").each(function () {
-                            if ($(this).hasClass('_error')) {
-                                errorCount ++;
-                                $(this).show();
-                            } else {
-                                $(this).css("display", "none");
-                            }
-                        });
-                        var elem = $(this.formSelector);
-                        if (elem) {
-                            if (errorCount > 0) {
-                                $(this.formSelector).show();
-                            } else {
-                                $(this.formSelector).hide();
-                            }
-                        }
-                        return false;
-                    }
-
-
-                }
-                return this._super();
             }
         });
     }

