--- a/README.md
+++ b/README.md
@@ -20,35 +20,3 @@
 ## Installation and Configuration
 
 Please follow the instructions in the [User Guide](https://amzn.github.io/amazon-payments-magento-2-plugin)
-
-## Release Notes
-### v1.1.1 stability
-#### Enhancements:
-        * Display the module version in the admin html
-        * Support for Modernizr 3.x
-        * Added extended support for japanese names
-        * Removed disturbing message for charge on order
-        * Configuration option to supply the store name added
-
-#### Bug Fixes:
-        * Order handling for free orders corrected
-        * Fixed incompatibility on CompleteOrder
-        * Displayed URLs did not take the store-view configured domain into account
-        * Removed unneeded CSS and layout
-        * jQuery storage API not always present
-
-### v1.1.0 Rebrand
-#### Enhancements:
-        * This release does not add any new features
-
-#### Bug Fixes:
-        * This release does not fix any bugs
-
-### v1.0.10 Small fixes
-#### Enhancements:
-   * #31 Scope parameter propagated to the Amazon Pay widgets
-   * #11 Integrate checkout agreement blocks in the checkout
-
-#### Bug Fixes:
-   * #27 Get the payment method from the order instead of the quote
-   * #33 Fix the checkout layout block to be in line with Magento 2.1

--- a/composer.json
+++ b/composer.json
@@ -2,10 +2,22 @@
   "name": "amzn/amazon-pay-and-login-magento-2-module",
   "description": "Official Magento2 Plugin to integrate with Amazon Pay and Login with Amazon",
   "type": "magento2-module",
-  "version": "1.2.3",
+  "version": "1.2.5",
   "license": [
     "Apache-2.0"
   ],
+  "require-dev": {
+    "guzzlehttp/guzzle": "^6.2.0",
+    "phpunit/phpunit": "4.1.0",
+    "behat/behat": "^3.1.0",
+    "behat/mink": "^1.7.1",
+    "behat/mink-extension": "^2.2",
+    "behat/mink-goutte-driver": "^1.2.1",
+    "behat/mink-selenium2-driver": "^1.3.1",
+    "sensiolabs/behat-page-object-extension": "^2.0.0",
+    "bex/behat-magento2-init": "dev-master",
+    "ciaranmcnulty/behat-stepthroughextension": "dev-master"
+  },
   "require": {
     "magento/framework": "^100.1.0|^101.0.0",
     "magento/module-sales": "^100.1.0|^101.0.0",
@@ -18,19 +30,7 @@
     "magento/module-quote": "^100.1.0|^101.0.0",
     "magento/module-customer": "^100.1.0|^101.0.0",
     "magento/module-store": "^100.1.0|^100.2.0",
-    "amzn/amazon-pay-sdk-php": "^3.1.0"
-  },
-  "require-dev": {
-    "guzzlehttp/guzzle": "^6.2.0",
-    "phpunit/phpunit": "4.1.0",
-    "behat/behat": "^3.1.0",
-    "behat/mink": "^1.7.1",
-    "behat/mink-extension": "^2.2",
-    "behat/mink-goutte-driver": "^1.2.1",
-    "behat/mink-selenium2-driver": "^1.3.1",
-    "sensiolabs/behat-page-object-extension": "^2.0.0",
-    "bex/behat-magento2-init": "dev-master",
-    "ciaranmcnulty/behat-stepthroughextension": "dev-master"
+    "amzn/amazon-pay-sdk-php": "^3.2.0"
   },
   "repositories": [
     {

--- a/docs/conf.py
+++ b/docs/conf.py
@@ -60,9 +60,9 @@ author = u'Amazon.com Inc or its affiliates'
 # built documents.
 #
 # The short X.Y version.
-version = u'1.1.1'
+version = u'1.2.5'
 # The full version, including alpha/beta/rc tags.
-release = u'1.1.1'
+release = u'1.2.5'
 
 # The language for content autogenerated by Sphinx. Refer to documentation
 # for a list of supported languages.

--- /dev/null
+++ b/docs/faq.rst
@@ -0,0 +1,29 @@
+Frequently Asked Questions (FAQ)
+================================
+
+I am using a custom theme, what do I have to do?
+------------------------------------------------
+
+The styles used in the extension are based on Magento's Luma theme. Responsive breakpoints and other variables, like `@screen__m`_, in the LESS files are defined by the Luma theme.
+If your custom theme is based on the Magento theme Luma or Blank, you should be fine. If it isn't, you should define all the variables and `Responsive Breakpoints` used.
+
+Magento provides detailed information about `Responsive Breakpoints` and responsive design in general. See `responsive.html in the magento2 repository`_ (vendor/magento/magento2-base/lib/web/css/docs/responsive.html in your Magento 2 installation) for more detailed explanations.
+
+`Magento DevDocs`_ gives additional information around this topic as well.
+
+Amazon Pay provides two LESS files in this extension. They need to be adapted to match your theme's responsive breakpoints.
+
+* https://github.com/amzn/amazon-payments-magento-2-plugin/blob/master/src/Login/view/frontend/web/css/source/_module.less
+* https://github.com/amzn/amazon-payments-magento-2-plugin/blob/master/src/Payment/view/frontend/web/css/source/_module.less
+
+
+.. _`@screen__m` : https://github.com/amzn/amazon-payments-magento-2-plugin/blob/1.2.4/src/Payment/view/frontend/web/css/source/_module.less#L71
+.. _`responsive.html in the magento2 repository` : https://github.com/magento/magento2/blob/2.2/lib/web/css/docs/responsive.html
+.. _`Magento DevDocs` : http://devdocs.magento.com/guides/v2.2/frontend-dev-guide/responsive-web-design/rwd_overview.html
+
+
+Amazon Pay Widgets are not surfaced
+-----------------------------------
+Please check if you are using a theme, which is not based on Magento's Luma or Blank theme first and follow the advice above.
+
+If this is not the case and you need help, please file an issue with us.

--- a/docs/index.rst
+++ b/docs/index.rst
@@ -16,4 +16,5 @@ Amazon Pay and Login with Amazon extension for Magento 2
    flow
    customisation
    testing
-   troubleshooting
\ No newline at end of file
+   troubleshooting
+   faq
\ No newline at end of file

--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -20,12 +20,12 @@ In case you are not able or willing to use the web installation, you can install
 
 * Sign in to your server via SSH
 * `cd` into you Magento installation directory
-* Install the extension via composer: `composer require amzn/amazon-payments-magento-2-plugin:^1.2.3`
+* Install the extension via composer: `composer require amzn/amazon-payments-magento-2-plugin:^1.2.5`
 * Enable the extension: `php bin/magento module:enable Amazon_Core Amazon_Login Amazon_Payment`
 * Upgrade the Magento installation: `php bin/magento setup:upgrade`
 * Follow any advice the upgrade routine provides
 
-.. note:: `composer require amzn/amazon-payments-magento-2-plugin:^1.2.3` will always instal the most current, non-breaking, Amazon Pay extension for you, when you run an update. To fix it to a specifix version, please remove the `^`
+.. note:: `composer require amzn/amazon-payments-magento-2-plugin:^1.2.5` will always install the most current, non-breaking, Amazon Pay extension for you, when you run an update. To fix it to a specifix version, please remove the `^`
 
 In production mode, you will also have to compile the code and the dependency injection (DI) configuration and deploy static content
 
@@ -38,8 +38,8 @@ In production mode, you will also have to compile the code and the dependency in
 
 Un-install Method
 --------------------------
-If there is a need ti disable the module, you can either disable Amazon Pay and Login with Amazon in the extension settings. This will temove all customer facing parts.
+If there is a need to disable the module, you can either disable Amazon Pay and Login with Amazon in the extension settings. This will remove all customer facing parts.
 
 To completely disable the module, please run `php bin/magento module:disable Amazon_Core Amazon_Login Amazon_Payment`
 
-To completely uninstall the module using composer, please run `composer remove amzn/amazon-payments-magento-2-plugin`
\ No newline at end of file
+To completely uninstall the module using composer, please run `composer remove amzn/amazon-payments-magento-2-plugin`

--- a/marketplace-composer.json
+++ b/marketplace-composer.json
@@ -2,14 +2,13 @@
   "name": "amzn/amazon-pay-and-login-magento-2-module",
   "description": "Official Magento2 Plugin to integrate with Amazon Pay and Login with Amazon",
   "type": "metapackage",
-  "version": "1.2.3",
+  "version": "1.2.5",
   "license": [
     "Apache-2.0"
   ],
   "require": {
-    "amzn/amazon-pay-sdk-php": "^3.1.0",
-    "amzn/amazon-pay-and-login-with-amazon-core-module": "1.2.3",
-    "amzn/login-with-amazon-module": "1.2.3",
-    "amzn/amazon-pay-module": "1.2.3"
+    "amzn/amazon-pay-and-login-with-amazon-core-module": "1.2.5",
+    "amzn/login-with-amazon-module": "1.2.5",
+    "amzn/amazon-pay-module": "1.2.5"
   }
 }

--- a/src/Core/Block/Config.php
+++ b/src/Core/Block/Config.php
@@ -96,6 +96,14 @@ class Config extends Template
         return ($this->coreHelper->isPwaEnabled());
     }
 
+    /**
+     * @return bool
+     */
+    public function isExtensionEnabled()
+    {
+	    return ($this->coreHelper->isPwaEnabled() || $this->coreHelper->isLwaEnabled());
+    }
+
     /**
      * @return bool
      */

--- a/src/Core/composer.json
+++ b/src/Core/composer.json
@@ -2,7 +2,7 @@
   "name": "amzn/amazon-pay-and-login-with-amazon-core-module",
   "description": "Shared functionality for Amazon Pay and Login with Amazon modules",
   "type": "magento2-module",
-  "version": "1.2.3",
+  "version": "1.2.5",
   "license": [
     "Apache-2.0"
   ],
@@ -12,7 +12,7 @@
     "magento/module-store": "^100.1.0|^100.2.0",
     "magento/module-developer": "^100.1.0|^100.2.0",
     "magento/module-quote": "^100.1.0|^101.0.0",
-    "amzn/amazon-pay-sdk-php": "^3.1.0"
+    "amzn/amazon-pay-sdk-php": "^3.2.0"
   },
   "autoload": {
     "files": ["registration.php"],

--- a/src/Core/etc/di.xml
+++ b/src/Core/etc/di.xml
@@ -2,7 +2,7 @@
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
     <preference for="Amazon\Core\Client\ClientFactoryInterface" type="Amazon\Core\Client\ClientFactory" />
     <preference for="AmazonPay\ClientInterface" type="Amazon\Core\Client\Client" />
-    <type name="AmazonPay\ClientInterface">
+    <type name="Amazon\Core\Client\Client">
         <arguments>
             <argument name="config" xsi:type="array" />
         </arguments>
@@ -56,7 +56,7 @@
             </argument>
         </arguments>
     </virtualType>
-    <type name="Amazon\Core\Client\ClientFactoryInterface">
+    <type name="Amazon\Core\Client\ClientFactory">
         <arguments>
             <argument name="logger" xsi:type="object">amazonClientLogger</argument>
         </arguments>

--- a/src/Core/etc/module.xml
+++ b/src/Core/etc/module.xml
@@ -1,11 +1,13 @@
 <?xml version="1.0"?>
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
-    <module name="Amazon_Core" setup_version="1.2.3">
+    <module name="Amazon_Core" setup_version="1.2.5">
         <sequence>
-            <module name="Magento_Config" />
-            <module name="Magento_Store" />
-            <module name="Magento_Developer" />
-            <module name="Magento_Quote" />
+            <module name="Magento_Store"/>
+            <module name="Magento_Customer"/>
+            <module name="Magento_Payment"/>
+            <module name="Magento_Checkout"/>
+            <module name="Magento_Catalog"/>
+            <module name="Magento_Quote"/>
         </sequence>
     </module>
 </config>

--- a/src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml
+++ b/src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml
@@ -47,7 +47,7 @@
 
 var AmazonSp = <?php echo $this->getAmazonSpJson(); ?>;
 
-require(["prototype"], function(){
+require(['uiRegistry', "prototype"], function(registry){
 
     // Country code for ID selectors
     var co = AmazonSp.co.toLowerCase();
@@ -104,7 +104,9 @@ require(["prototype"], function(){
         }
 
         var popupWidth = this.action.indexOf('payments-eu') == -1 ? 768 : 1050;
-        window.launchPopup('', popupWidth, popupHeight);
+        
+        var launchPopup = registry.get('launchPopup');
+        launchPopup('', popupWidth, popupHeight);
 
         // Show fields and import
         amazonFields.each(Element.show);
@@ -220,10 +222,9 @@ require(["jquery", "jquery/validate"], function($) {
 
 </script>
 
-
 <script>
 // Amazon Pop-up
-(function () {
+require(['uiRegistry'], function (registry) {
     'use strict';
 
     function launchPopup(url, requestedWidth, requestedHeight) {
@@ -268,6 +269,9 @@ require(["jquery", "jquery/validate"], function($) {
         }
     }
 
-    window.launchPopup = launchPopup;
-})();
-</script>
\ No newline at end of file
+    // window.launchPopup = launchPopup;
+    registry.set('launchPopup', launchPopup); 
+
+});
+</script>
+

--- a/src/Core/view/frontend/templates/amazon_payments_mark.phtml
+++ b/src/Core/view/frontend/templates/amazon_payments_mark.phtml
@@ -22,7 +22,7 @@
 <?php if($block->isBadgeEnabled()): ?>
     <div class="amazon-payments-mark-container">
         <div class="amazon-payments-mark _grad">
-            <span class="text"><?php /* @escapeNotVerified */ echo __('Amazon Pay'); ?></span>
+	    <span class="text"><?php /* @noEscape */ echo __('Amazon Pay'); ?></span>
         </div>
     </div>
-<?php endif; ?>
\ No newline at end of file
+<?php endif; ?>

--- a/src/Core/view/frontend/templates/config.phtml
+++ b/src/Core/view/frontend/templates/config.phtml
@@ -15,6 +15,12 @@
  */
 ?>
 
+<?php if ($block->isExtensionEnabled()): ?>
 <script>
-    window.amazonPayment = <?php /* @escapeNotVerified */ echo \Zend_Json::encode($block->getConfig()); ?>;
-</script>
\ No newline at end of file
+
+require (['uiRegistry'], function(registry) {
+    registry.set('amazonPayment', <?php /* @noEscape */ echo \Zend_Json::encode($block->getConfig()); ?>);
+});
+
+</script>
+<?php endif ?>

--- a/src/Login/composer.json
+++ b/src/Login/composer.json
@@ -2,12 +2,12 @@
   "name": "amzn/login-with-amazon-module",
   "description": "Login with Amazon module",
   "type": "magento2-module",
-  "version": "1.2.3",
+  "version": "1.2.5",
   "license": [
     "Apache-2.0"
   ],
   "require": {
-    "amzn/amazon-pay-and-login-with-amazon-core-module": "^1.2.3",
+    "amzn/amazon-pay-and-login-with-amazon-core-module": "^1.2.5",
     "magento/module-customer": "^100.1.0|^101.0.0",
 	"magento/module-checkout": "^100.1.0|^100.2.0"
     

--- a/src/Login/etc/module.xml
+++ b/src/Login/etc/module.xml
@@ -3,8 +3,6 @@
     <module name="Amazon_Login" setup_version="1.2.0">
         <sequence>
             <module name="Amazon_Core"/>
-            <module name="Magento_Customer"/>
-            <module name="Magento_Checkout"/>
         </sequence>
     </module>
 </config>

--- a/src/Login/view/frontend/templates/form/validate.phtml
+++ b/src/Login/view/frontend/templates/form/validate.phtml
@@ -17,31 +17,31 @@
 <div class="amazon-validate-container">
     <div class="block block-amazon-validate">
         <div class="block-title">
-            <strong id="block-amazon-login-heading" role="heading" aria-level="2"><?php /* @escapeNotVerified */ echo __('Welcome back!') ?></strong>
+            <strong id="block-amazon-login-heading" role="heading" aria-level="2"><?php /* @noEscape */ echo __('Welcome back!') ?></strong>
         </div>
         <div class="block-content" aria-labelledby="block-amazon-login-heading">
-            <p><?php /* @escapeNotVerified */ echo __('A shop account for this email address already exists. Please enter your shop accounts password to log in without leaving the shop.') ?></p>
+            <p><?php /* @noEscape */ echo __('A shop account for this email address already exists. Please enter your shop accounts password to log in without leaving the shop.') ?></p>
             <form class="form password validate"
-                  action="<?php /* @escapeNotVerified */ echo $block->getUrl('*/*/validatepost') ?>"
+                  action="<?php echo $block->escapeUrl($block->getUrl('*/*/validatepost')) ?>"
                   method="post"
                   id="form-validate"
                   data-mage-init='{"validation":{}}'>
-                <fieldset class="fieldset" data-hasrequired="<?php /* @escapeNotVerified */ echo __('* Required Fields') ?>">
+                <fieldset class="fieldset" data-hasrequired="<?php /* @noEscape */ echo __('* Required Fields') ?>">
                     <div class="field email required">
-                        <label for="password" class="label"><span><?php /* @escapeNotVerified */ echo __('Password') ?></span></label>
+                        <label for="password" class="label"><span><?php /* @noEscape */ echo __('Password') ?></span></label>
                         <div class="control">
                             <input type="password" name="password" alt="password" id="password" class="input-text" value="" data-validate="{required:true}">
                         </div>
                     </div>
                     <div class="actions-toolbar">
                         <div class="primary">
-                            <button type="submit" class="action submit primary"><span><?php /* @escapeNotVerified */ echo __('Ok') ?></span></button>
+                            <button type="submit" class="action submit primary"><span><?php /* @noEscape */ echo __('Ok') ?></span></button>
                         </div>
                         <div class="secondary continue-as-guest">
-                            <a class="action secondary" href="<?php /* @escapeNotVerified */ echo $block->getContinueAsGuestUrl() ?>"><span><?php /* @escapeNotVerified */ echo __('Continue as Guest') ?></span></a>
+                            <a class="action secondary" href="<?php echo $block->escapeUrl($block->getContinueAsGuestUrl()) ?>"><span><?php /* @noEscape */ echo __('Continue as Guest') ?></span></a>
                         </div>
                         <div class="secondary forgot-password">
-                            <a class="action secondary" href="<?php /* @escapeNotVerified */ echo $block->getForgotPasswordUrl() ?>"><span><?php /* @escapeNotVerified */ echo __('Forgot Your Password?') ?></span></a>
+                            <a class="action secondary" href="<?php echo $block->escapeUrl($block->getForgotPasswordUrl()) ?>"><span><?php /* @noEscape */ echo __('Forgot Your Password?') ?></span></a>
                         </div>
                     </div>
                 </fieldset>

--- a/src/Login/view/frontend/templates/login.phtml
+++ b/src/Login/view/frontend/templates/login.phtml
@@ -17,10 +17,10 @@
 <?php /** @var \Amazon\Login\Block\Login $block */?>
 <div class="block block-amazon-login">
     <div class="block-title">
-        <strong id="block-amazon-login-heading" role="heading" aria-level="2"><?php /* @escapeNotVerified */ echo __('Login with Amazon') ?></strong>
+        <strong id="block-amazon-login-heading" role="heading" aria-level="2"><?php /* @noEscape */ echo __('Login with Amazon') ?></strong>
     </div>
     <div class="block-content" aria-labelledby="block-amazon-login-heading">
-        <p><?php /* @escapeNotVerified */ echo __('With Amazon Pay and Login with Amazon, you can easily sign-in and use the shipping and payment information stored in your Amazon account to place an order on this shop. ') ?></p>
+        <p><?php /* @noEscape */ echo __('With Amazon Pay and Login with Amazon, you can easily sign-in and use the shipping and payment information stored in your Amazon account to place an order on this shop. ') ?></p>
         <div class="actions-toolbar">
             <div class="primary">
                 <div class="amazon-button-container">
@@ -30,7 +30,7 @@
                     <div class="amazon-button-container__cell">
                         <div class="field-tooltip toggle">
                             <span class="field-tooltip-action action-help" data-mage-init='{"dropdown": {"activeClass": "_active"}}' data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></span>
-                            <div class="field-tooltip-content" data-target="dropdown" aria-hidden="true"><?php /* @escapeNotVerified */  echo __('Securely login into our website using your existing Amazon details.'); ?></div>
+                            <div class="field-tooltip-content" data-target="dropdown" aria-hidden="true"><?php /* @noEscape */  echo __('Securely login into our website using your existing Amazon details.'); ?></div>
                         </div>
                     </div>
                 </div>

--- a/src/Login/view/frontend/web/js/view/login-button-wrapper.js
+++ b/src/Login/view/frontend/web/js/view/login-button-wrapper.js
@@ -13,7 +13,10 @@
  * permissions and limitations under the License.
  */
 
-if (window.amazonPayment.allowAmLoginLoading == true) {
+var registry = require('uiRegistry');
+var amazonPayment = registry.get('amazonPayment');
+
+if (amazonPayment != undefined && amazonPayment.allowAmLoginLoading == true) {
     define(['require', 'Amazon_Login/js/view/login-button'], function (require) {
         return require("Amazon_Login/js/view/login-button");
     });
@@ -22,3 +25,4 @@ if (window.amazonPayment.allowAmLoginLoading == true) {
         return require("uiComponent");
     });
 }
+

--- a/src/Payment/composer.json
+++ b/src/Payment/composer.json
@@ -2,18 +2,18 @@
   "name": "amzn/amazon-pay-module",
   "description": "Amazon Pay module",
   "type": "magento2-module",
-  "version": "1.2.3",
+  "version": "1.2.5",
   "license": [
     "Apache-2.0"
   ],
   "require": {
-    "amzn/amazon-pay-and-login-with-amazon-core-module": "^1.2.3",
-    "amzn/login-with-amazon-module": "^1.2.3",
+    "amzn/amazon-pay-and-login-with-amazon-core-module": "^1.2.5",
+    "amzn/login-with-amazon-module": "^1.2.5",
     "magento/module-eav": "^100.1.0|^101.0.0",
     "magento/module-sales": "^100.1.0|^101.0.0",
     "magento/module-quote": "^100.1.0|^101.0.0",
     "magento/module-payment": "^100.1.0|^100.2.0",
-    "magento/module-backend": "^100.1.0|100.2.0",
+    "magento/module-backend": "^100.1.0|100.2.0"
   },
   "autoload": {
     "files": ["registration.php"],

--- a/src/Payment/etc/module.xml
+++ b/src/Payment/etc/module.xml
@@ -4,11 +4,6 @@
         <sequence>
             <module name="Amazon_Core"/>
             <module name="Amazon_Login"/>
-            <module name="Magento_Eav"/>
-            <module name="Magento_Sales"/>
-            <module name="Magento_Quote"/>
-            <module name="Magento_Payment"/>
-            <module name="Magento_Backend"/>
         </sequence>
     </module>
 </config>

--- a/src/Payment/view/frontend/templates/minicart-button.phtml
+++ b/src/Payment/view/frontend/templates/minicart-button.phtml
@@ -39,7 +39,7 @@ $tooltipConfig = [
         <div class="amazon-button-container__cell">
             <div class="field-tooltip toggle">
                 <span class="field-tooltip-action action-help" data-mage-init='<?php /* @noEscape */ echo json_encode($tooltipConfig); ?>' data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></span>
-                <div class="field-tooltip-content" data-target="dropdown" aria-hidden="true"><?php /* @escapeNotVerified */  echo __('Are you an Amazon customer? Pay now with address and payment details stored in your Amazon account.'); ?></div>
+                <div class="field-tooltip-content" data-target="dropdown" aria-hidden="true"><?php /* @noEscape */  echo __('Are you an Amazon customer? Pay now with address and payment details stored in your Amazon account.'); ?></div>
             </div>
         </div>
     </div>

--- a/src/Payment/view/frontend/templates/payment-link-product-page.phtml
+++ b/src/Payment/view/frontend/templates/payment-link-product-page.phtml
@@ -23,7 +23,7 @@
     <div class="amazon-button-container__cell">
         <div class="field-tooltip toggle">
             <span class="field-tooltip-action action-help" data-bind="mageInit: {'dropdown':{'activeClass': '_active'}}" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></span>
-            <div class="field-tooltip-content" data-target="dropdown" aria-hidden="true"><?php /* @escapeNotVerified */  echo __('Are you an Amazon customer? Pay now with address and payment details stored in your Amazon account.'); ?></div>
+            <div class="field-tooltip-content" data-target="dropdown" aria-hidden="true"><?php /* @noEscape */  echo __('Are you an Amazon customer? Pay now with address and payment details stored in your Amazon account.'); ?></div>
         </div>
     </div>
 </div>

--- a/src/Payment/view/frontend/templates/payment-link.phtml
+++ b/src/Payment/view/frontend/templates/payment-link.phtml
@@ -22,7 +22,7 @@
     <div class="amazon-button-container__cell">
         <div class="field-tooltip toggle">
             <span class="field-tooltip-action action-help" data-bind="mageInit: {'dropdown':{'activeClass': '_active'}}" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></span>
-            <div class="field-tooltip-content" data-target="dropdown" aria-hidden="true"><?php /* @escapeNotVerified */  echo __('Are you an Amazon customer? Pay now with address and payment details stored in your Amazon account.'); ?></div>
+            <div class="field-tooltip-content" data-target="dropdown" aria-hidden="true"><?php /* @noEscape */  echo __('Are you an Amazon customer? Pay now with address and payment details stored in your Amazon account.'); ?></div>
         </div>
     </div>
 </div>

--- a/src/Payment/view/frontend/web/js/action/populate-shipping-address.js
+++ b/src/Payment/view/frontend/web/js/action/populate-shipping-address.js
@@ -36,7 +36,7 @@ define(
                     $.extend({}, checkoutProvider.get('shippingAddress'), shippingAddressData)
                 );
             });
-
+            $("#co-shipping-form").css("display", "none");
             checkoutDataResolver.resolveShippingAddress();
         }
 
@@ -45,16 +45,7 @@ define(
          * @private
          */
         return function () {
-            //check to see if user is logged out of amazon (otherwise shipping form won't be in DOM)
-            if (!amazonStorage.isAmazonAccountLoggedIn) {
-                populateShippingForm();
-            }
-            //subscribe to logout and trigger shippingform population when logged out.
-            amazonStorage.isAmazonAccountLoggedIn.subscribe(function (loggedIn) {
-                if (!loggedIn) {
-                    populateShippingForm();
-                }
-            });
+            populateShippingForm();
         }
     }
 );

--- a/src/Payment/view/frontend/web/js/amazon-widgets-loader.js
+++ b/src/Payment/view/frontend/web/js/amazon-widgets-loader.js
@@ -13,6 +13,10 @@
  * permissions and limitations under the License.
  */
 
-define([window.amazonPayment.widgetUrl], function () {
+var registry = require('uiRegistry');
+var amazonPayment = registry.get('amazonPayment');
+
+define([amazonPayment.widgetUrl], function () {
     //after amazon widgets file as loaded
 });
+

--- a/src/Payment/view/frontend/web/js/model/amazonPaymentConfig.js
+++ b/src/Payment/view/frontend/web/js/model/amazonPaymentConfig.js
@@ -13,11 +13,11 @@
  * permissions and limitations under the License.
  */
 define(
-    [],
-    function () {
+    ['uiRegistry'],
+    function (registry) {
         'use strict';
 
-        var config = window.amazonPayment || {};
+	var config = registry.get('amazonPayment') || {};
 
         return {
             getValue: function (key, defaultValue) {
@@ -28,7 +28,7 @@ define(
                 }
             },
             isDefined: function () {
-                return window.amazonPayment !== undefined
+		return registry.get('amazonPayment') !== undefined;
             }
         };
     }

--- a/src/Payment/view/frontend/web/js/view/checkout-revert.js
+++ b/src/Payment/view/frontend/web/js/view/checkout-revert.js
@@ -9,7 +9,8 @@ define(
         'mage/storage',
         'Magento_Checkout/js/model/error-processor',
         'Magento_Checkout/js/model/url-builder',
-        'Magento_Checkout/js/model/full-screen-loader'
+        'Magento_Checkout/js/model/full-screen-loader',
+	'uiRegistry'
     ],
     function (
         $,
@@ -20,7 +21,8 @@ define(
         storage,
         errorProcessor,
         urlBuilder,
-        fullScreenLoader
+        fullScreenLoader,
+	registry
     ) {
         'use strict';
 
@@ -31,7 +33,7 @@ define(
                 template: 'Amazon_Payment/checkout-revert'
             },
             isAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,
-            isAmazonEnabled: ko.observable(window.amazonPayment.isPwaEnabled),
+	    isAmazonEnabled: ko.observable(registry.get('amazonPayment').isPwaEnabled),
             initialize: function () {
                 self = this;
                 this._super();

--- a/src/Payment/view/frontend/web/js/view/checkout-sandbox-simulator.js
+++ b/src/Payment/view/frontend/web/js/view/checkout-sandbox-simulator.js
@@ -5,13 +5,15 @@ define(
         'jquery',
         "uiComponent",
         'ko',
-        'Amazon_Payment/js/model/storage'
+        'Amazon_Payment/js/model/storage',
+	'uiRegistry'
     ],
     function (
         $,
         Component,
         ko,
-        amazonStorage
+        amazonStorage,
+	registry
     ) {
         'use strict';
 
@@ -22,13 +24,13 @@ define(
                 template: 'Amazon_Payment/checkout-sandbox-simulator'
             },
             isAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,
-            isSandboxEnabled: ko.observable(window.amazonPayment.isSandboxEnabled),
+	    isSandboxEnabled: ko.observable(registry.get('amazonPayment').isSandboxEnabled),
             sandboxSimulationReference: amazonStorage.sandboxSimulationReference,
-            sandboxSimulationOptions: ko.observableArray(window.amazonPayment.sandboxSimulationOptions),
+            sandboxSimulationOptions: ko.observableArray(registry.get('amazonPayment').sandboxSimulationOptions),
             initialize: function () {
                 self = this;
                 this._super();
             }
         });
     }
-);
\ No newline at end of file
+);

--- a/src/Payment/view/frontend/web/js/view/checkout-widget-address.js
+++ b/src/Payment/view/frontend/web/js/view/checkout-widget-address.js
@@ -18,7 +18,9 @@ define(
         'Magento_Checkout/js/model/error-processor',
         'Magento_Checkout/js/model/url-builder',
         'Magento_Checkout/js/checkout-data',
-        'Magento_Checkout/js/model/checkout-data-resolver'
+        'Magento_Checkout/js/model/checkout-data-resolver',
+        'uiRegistry',
+        'Amazon_Payment/js/action/populate-shipping-address'
     ],
     function (
         $,
@@ -37,7 +39,9 @@ define(
         errorProcessor,
         urlBuilder,
         checkoutData,
-        checkoutDataResolver
+        checkoutDataResolver,
+        registry,
+        populateShippingAddressAction
     ) {
         'use strict';
         var self;
@@ -47,13 +51,13 @@ define(
                 template: 'Amazon_Payment/checkout-widget-address'
             },
             options: {
-                sellerId: window.amazonPayment.merchantId,
+		sellerId: registry.get('amazonPayment').merchantId,
                 addressWidgetDOMId: 'addressBookWidgetDiv',
-                widgetScope: window.amazonPayment.loginScope
+		widgetScope: registry.get('amazonPayment').loginScope
             },
             isCustomerLoggedIn: customer.isLoggedIn,
             isAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,
-            isAmazonEnabled: ko.observable(window.amazonPayment.isPwaEnabled),
+	    isAmazonEnabled: ko.observable(registry.get('amazonPayment').isPwaEnabled),
             rates: shippingService.getShippingRates(),
             initialize: function () {
                 self = this;
@@ -117,6 +121,7 @@ define(
                         }
                         checkoutData.setShippingAddressFromData(addressConverter.quoteAddressToFormAddressData(addressData));
                         checkoutDataResolver.resolveEstimationAddress();
+                        populateShippingAddressAction();
                     }
                 ).fail(
                     function (response) {

--- a/src/Payment/view/frontend/web/js/view/notification.js
+++ b/src/Payment/view/frontend/web/js/view/notification.js
@@ -5,14 +5,16 @@ define(
         "underscore",
         'ko',
         'uiComponent',
-        'Amazon_Payment/js/model/storage'
+        'Amazon_Payment/js/model/storage',
+	'uiRegistry'
     ],
     function (
         $,
         _,
         ko,
         Component,
-        amazonStorage
+        amazonStorage,
+	registry
     ) {
         'use strict';
 
@@ -23,8 +25,8 @@ define(
                 template: 'Amazon_Payment/notification'
             },
             isAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,
-            chargeOnOrder: ko.observable(window.amazonPayment.chargeOnOrder),
-            isEuPaymentRegion: ko.observable(window.amazonPayment.isEuPaymentRegion),
+            chargeOnOrder: ko.observable(registry.get('amazonPayment').chargeOnOrder),
+	    isEuPaymentRegion: ko.observable(registry.get('amazonPayment').isEuPaymentRegion),
             initialize: function () {
                 self = this;
                 this._super();

--- a/src/Payment/view/frontend/web/js/view/payment/method-renderer/amazon-payment-widget.js
+++ b/src/Payment/view/frontend/web/js/view/payment/method-renderer/amazon-payment-widget.js
@@ -16,7 +16,8 @@ define(
         'Magento_Checkout/js/action/select-billing-address',
         'Magento_Checkout/js/model/payment/additional-validators',
         'Magento_Checkout/js/model/url-builder',
-        'amazonPaymentConfig'
+        'amazonPaymentConfig',
+	'uiRegistry'
     ],
     function (
         $,
@@ -35,7 +36,8 @@ define(
         selectBillingAddress,
         additionalValidators,
         urlBuilder,
-        amazonPaymentConfig
+        amazonPaymentConfig,
+	registry
     ) {
         'use strict';
 
@@ -48,9 +50,9 @@ define(
             },
 
             options: {
-                sellerId: window.amazonPayment.merchantId,
+		sellerId: registry.get('amazonPayment').merchantId,
                 paymentWidgetDOMId: 'walletWidgetDiv',
-                widgetScope: window.amazonPayment.loginScope
+		widgetScope: registry.get('amazonPayment').loginScope
             },
             isCustomerLoggedIn: customer.isLoggedIn,
             isAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,

--- a/src/Payment/view/frontend/web/js/view/shipping-address/inline-form.js
+++ b/src/Payment/view/frontend/web/js/view/shipping-address/inline-form.js
@@ -1,13 +1,14 @@
 define([
+    'jquery',
     'uiComponent',
     'ko',
     'Amazon_Payment/js/model/storage'
-], function (Component, ko, amazonStorage) {
+], function ($, Component, ko, amazonStorage) {
     'use strict';
     return Component.extend({
         defaults: {
             template: 'Amazon_Payment/shipping-address/inline-form',
-            formSelector: 'co-shipping-form'
+            formSelector: '#co-shipping-form'
         },
         initObservable: function () {
             this._super();
@@ -21,9 +22,22 @@ define([
         },
         manipulateInlineForm: function () {
             if (amazonStorage.isAmazonAccountLoggedIn()) {
-                var elem = document.getElementById(this.formSelector);
+                var errorCount = 0;
+                $(this.formSelector).find(".field").each(function () {
+                    if ($(this).hasClass('_error')) {
+                        errorCount ++;
+                        $(this).show();
+                    } else {
+                        $(this).css("display", "none");
+                    }
+                });
+                var elem = $(this.formSelector);
                 if (elem) {
-                    document.getElementById(this.formSelector).style.display = 'none';
+                    if (errorCount > 0) {
+                        $(this.formSelector).show();
+                    } else {
+                        $(this.formSelector).hide();
+                    }
                 }
             }
         }

--- a/src/Payment/view/frontend/web/js/view/shipping.js
+++ b/src/Payment/view/frontend/web/js/view/shipping.js
@@ -8,7 +8,9 @@ define(
         'Magento_Customer/js/model/customer',
         'Magento_Checkout/js/action/set-shipping-information',
         'Magento_Checkout/js/model/step-navigator',
-        'Amazon_Payment/js/model/storage'
+        'Amazon_Payment/js/model/storage',
+        'Magento_Customer/js/model/address-list',
+        'Magento_Checkout/js/model/quote'
     ],
     function (
         $,
@@ -18,10 +20,15 @@ define(
         customer,
         setShippingInformationAction,
         stepNavigator,
-        amazonStorage
+        amazonStorage,
+        addressList,
+        quote
     ) {
         'use strict';
         return Component.extend({
+            isFormInline: ko.observable(addressList().length == 0),
+            formSelector: '#co-shipping-form',
+
             initialize: function () {
                 this._super();
                 this.isNewAddressAdded(amazonStorage.isAmazonAccountLoggedIn());
@@ -48,9 +55,12 @@ define(
                     );
                 }
                 if (amazonStorage.isAmazonAccountLoggedIn() && customer.isLoggedIn()) {
-                    setShippingInformationAmazon();
+                    this.isFormInline(true);
+                    if (this.validateShippingInformation()) {
+                        setShippingInformationAmazon();
+                    }
                 } else if (amazonStorage.isAmazonAccountLoggedIn() && !customer.isLoggedIn()) {
-                    if (this.validateGuestEmail()) {
+                    if (this.validateGuestEmail() && this.validateShippingInformation()) {
                         setShippingInformationAmazon();
                     }
                 } else {
@@ -59,6 +69,61 @@ define(
                         setShippingInformationAmazon();
                     }
                 }
+            },
+
+            validateShippingInformation: function () {
+                var shippingAddress,
+                    addressData,
+                    loginFormSelector = 'form[data-role=email-with-possible-login]',
+                    emailValidationResult = customer.isLoggedIn();
+
+                if (!quote.shippingMethod()) {
+                    this.errorValidationMessage($t('Please specify a shipping method.'));
+
+                    return false;
+                }
+
+                if (!customer.isLoggedIn()) {
+                    $(loginFormSelector).validation();
+                    emailValidationResult = Boolean($(loginFormSelector + ' input[name=username]').valid());
+                }
+
+                if (this.isFormInline()) {
+                    this.source.set('params.invalid', false);
+                    this.source.trigger('shippingAddress.data.validate');
+
+                    if (this.source.get('shippingAddress.custom_attributes')) {
+                        this.source.trigger('shippingAddress.custom_attributes.data.validate');
+                    }
+
+                    if (this.source.get('params.invalid') ||
+                        !quote.shippingMethod().method_code ||
+                        !quote.shippingMethod().carrier_code ||
+                        !emailValidationResult
+                    ) {
+                        var errorCount = 0;
+                        $(this.formSelector).find(".field").each(function () {
+                            if ($(this).hasClass('_error')) {
+                                errorCount ++;
+                                $(this).show();
+                            } else {
+                                $(this).css("display", "none");
+                            }
+                        });
+                        var elem = $(this.formSelector);
+                        if (elem) {
+                            if (errorCount > 0) {
+                                $(this.formSelector).show();
+                            } else {
+                                $(this.formSelector).hide();
+                            }
+                        }
+                        return false;
+                    }
+
+
+                }
+                return this._super();
             }
         });
     }

